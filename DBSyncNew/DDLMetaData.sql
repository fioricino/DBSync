		IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_CORE_ADDRESS_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_CORE_ADDRESS_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_CORE_ADDRESS_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_CORE_ADDRESS_TYPE

GO

CREATE TYPE [dbo].TVP_EMP_CORE_ADDRESS_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (50) NULL,
[DESCRIPTION] nvarchar (250) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_CORE_ADDRESS_TYPE
@source as dbo.TVP_EMP_CORE_ADDRESS_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_CORE_ADDRESS_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_EMPLOYEE_INFO_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_INFO_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_EMPLOYEE_INFO_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_EMPLOYEE_INFO_TYPE

GO

CREATE TYPE [dbo].TVP_EMP_EMPLOYEE_INFO_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (50) NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_INFO_TYPE
@source as dbo.TVP_EMP_EMPLOYEE_INFO_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_EMPLOYEE_INFO_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EXP_PASSENGERS_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EXP_PASSENGERS_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_EXP_PASSENGERS_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EXP_PASSENGERS_TYPE

GO

CREATE TYPE [dbo].TVP_EXP_PASSENGERS_TYPE AS TABLE (
[ID] int  NOT NULL,
[TEXT] nvarchar (100) NOT NULL,
[CODE] char (2) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EXP_PASSENGERS_TYPE
@source as dbo.TVP_EXP_PASSENGERS_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EXP_PASSENGERS_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[TEXT] = SOURCE.[TEXT], TARGET.[CODE] = SOURCE.[CODE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[TEXT], [CODE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[TEXT], SOURCE.[CODE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EXP_TRIP_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EXP_TRIP_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_EXP_TRIP_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EXP_TRIP_TYPE

GO

CREATE TYPE [dbo].TVP_EXP_TRIP_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (50) NOT NULL,
[CODE] char (4) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EXP_TRIP_TYPE
@source as dbo.TVP_EXP_TRIP_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EXP_TRIP_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[CODE] = SOURCE.[CODE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [CODE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[CODE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_AVAILABLE_INSPECTION_TEXT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_AVAILABLE_INSPECTION_TEXT

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_AVAILABLE_INSPECTION_TEXT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_AVAILABLE_INSPECTION_TEXT

GO

CREATE TYPE [dbo].TVP_INS_AVAILABLE_INSPECTION_TEXT AS TABLE (
[ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_AVAILABLE_INSPECTION_TEXT
@source as dbo.TVP_INS_AVAILABLE_INSPECTION_TEXT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_AVAILABLE_INSPECTION_TEXT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_BRAKE_INSPECTION_METHOD' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_BRAKE_INSPECTION_METHOD

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_BRAKE_INSPECTION_METHOD' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_BRAKE_INSPECTION_METHOD

GO

CREATE TYPE [dbo].TVP_INS_BRAKE_INSPECTION_METHOD AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_BRAKE_INSPECTION_METHOD
@source as dbo.TVP_INS_BRAKE_INSPECTION_METHOD READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_BRAKE_INSPECTION_METHOD] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_CORE_DATA_PRODUCT_GROUP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_GROUP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_CORE_DATA_PRODUCT_GROUP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_CORE_DATA_PRODUCT_GROUP

GO

CREATE TYPE [dbo].TVP_INS_CORE_DATA_PRODUCT_GROUP AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (250) NOT NULL,
[DEFAULT_DURATION] bigint  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_GROUP
@source as dbo.TVP_INS_CORE_DATA_PRODUCT_GROUP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_CORE_DATA_PRODUCT_GROUP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[DEFAULT_DURATION] = SOURCE.[DEFAULT_DURATION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [DEFAULT_DURATION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[DEFAULT_DURATION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_EG_DOK_SERVICE_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_EG_DOK_SERVICE_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_EG_DOK_SERVICE_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_EG_DOK_SERVICE_TYPE

GO

CREATE TYPE [dbo].TVP_INS_EG_DOK_SERVICE_TYPE AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_EG_DOK_SERVICE_TYPE
@source as dbo.TVP_INS_EG_DOK_SERVICE_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_EG_DOK_SERVICE_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_INSPECTION_REPORT_STATUS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_INSPECTION_REPORT_STATUS

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_INSPECTION_REPORT_STATUS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_INSPECTION_REPORT_STATUS

GO

CREATE TYPE [dbo].TVP_INS_INSPECTION_REPORT_STATUS AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_INSPECTION_REPORT_STATUS
@source as dbo.TVP_INS_INSPECTION_REPORT_STATUS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_INSPECTION_REPORT_STATUS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_INSPECTION_STEP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_INSPECTION_STEP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_INSPECTION_STEP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_INSPECTION_STEP

GO

CREATE TYPE [dbo].TVP_INS_INSPECTION_STEP AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (150) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_INSPECTION_STEP
@source as dbo.TVP_INS_INSPECTION_STEP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_INSPECTION_STEP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_MEASURE_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_MEASURE_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_MEASURE_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_MEASURE_TYPE

GO

CREATE TYPE [dbo].TVP_INS_MEASURE_TYPE AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_MEASURE_TYPE
@source as dbo.TVP_INS_MEASURE_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_MEASURE_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_META_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_META_DATA

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_META_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_META_DATA

GO

CREATE TYPE [dbo].TVP_INS_META_DATA AS TABLE (
[ID] int  NOT NULL,
[BINARY_DATA] varbinary (max) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_META_DATA
@source as dbo.TVP_INS_META_DATA READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_META_DATA] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[BINARY_DATA] = SOURCE.[BINARY_DATA], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[BINARY_DATA], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[BINARY_DATA], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_NEXT_INSPECTION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_NEXT_INSPECTION

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_NEXT_INSPECTION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_NEXT_INSPECTION

GO

CREATE TYPE [dbo].TVP_INS_NEXT_INSPECTION AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_NEXT_INSPECTION
@source as dbo.TVP_INS_NEXT_INSPECTION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_NEXT_INSPECTION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_NEXT_SP_INTERVAL' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_NEXT_SP_INTERVAL

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_NEXT_SP_INTERVAL' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_NEXT_SP_INTERVAL

GO

CREATE TYPE [dbo].TVP_INS_NEXT_SP_INTERVAL AS TABLE (
[ID] int  NOT NULL,
[INS_PRODUCT_OBJECT_TYPE_ID] int  NOT NULL,
[INS_PRODUCT_OBJECT_CLASS_ID] int  NOT NULL,
[AGE_MONTH_FROM] int  NOT NULL,
[AGE_MONTH_TO] int  NULL,
[SP_INTERVAL] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_NEXT_SP_INTERVAL
@source as dbo.TVP_INS_NEXT_SP_INTERVAL READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_NEXT_SP_INTERVAL] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_PRODUCT_OBJECT_TYPE_ID] = SOURCE.[INS_PRODUCT_OBJECT_TYPE_ID], TARGET.[INS_PRODUCT_OBJECT_CLASS_ID] = SOURCE.[INS_PRODUCT_OBJECT_CLASS_ID], TARGET.[AGE_MONTH_FROM] = SOURCE.[AGE_MONTH_FROM], TARGET.[AGE_MONTH_TO] = SOURCE.[AGE_MONTH_TO], TARGET.[SP_INTERVAL] = SOURCE.[SP_INTERVAL], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_PRODUCT_OBJECT_TYPE_ID], [INS_PRODUCT_OBJECT_CLASS_ID], [AGE_MONTH_FROM], [AGE_MONTH_TO], [SP_INTERVAL], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[INS_PRODUCT_OBJECT_TYPE_ID], SOURCE.[INS_PRODUCT_OBJECT_CLASS_ID], SOURCE.[AGE_MONTH_FROM], SOURCE.[AGE_MONTH_TO], SOURCE.[SP_INTERVAL], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_NOT_MEASURABLE_VALUE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_NOT_MEASURABLE_VALUE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_NOT_MEASURABLE_VALUE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_NOT_MEASURABLE_VALUE

GO

CREATE TYPE [dbo].TVP_INS_NOT_MEASURABLE_VALUE AS TABLE (
[ID] int  NOT NULL,
[TEXT] nvarchar (50) NULL,
[DATA_TYPE] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_NOT_MEASURABLE_VALUE
@source as dbo.TVP_INS_NOT_MEASURABLE_VALUE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_NOT_MEASURABLE_VALUE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[TEXT] = SOURCE.[TEXT], TARGET.[DATA_TYPE] = SOURCE.[DATA_TYPE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[TEXT], [DATA_TYPE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[TEXT], SOURCE.[DATA_TYPE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_OPTICAL_DEFECT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_OPTICAL_DEFECT

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_OPTICAL_DEFECT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_OPTICAL_DEFECT

GO

CREATE TYPE [dbo].TVP_INS_OPTICAL_DEFECT AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (20) NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[IS_CUSTOM] bit  NOT NULL,
[CREATE_DATE] datetime2 (3) NULL,
[CHANGE_DATE] datetime2 (3) NULL,
[DELETE_DATE] datetime2 (3) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_OPTICAL_DEFECT
@source as dbo.TVP_INS_OPTICAL_DEFECT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_OPTICAL_DEFECT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[IS_CUSTOM] = SOURCE.[IS_CUSTOM], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [DESCRIPTION], [IS_CUSTOM], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[IS_CUSTOM], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PFP_INSPECTION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PFP_INSPECTION_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PFP_INSPECTION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PFP_INSPECTION_TYPE

GO

CREATE TYPE [dbo].TVP_INS_PFP_INSPECTION_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (30) NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PFP_INSPECTION_TYPE
@source as dbo.TVP_INS_PFP_INSPECTION_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PFP_INSPECTION_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PFP_POSITION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PFP_POSITION

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PFP_POSITION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PFP_POSITION

GO

CREATE TYPE [dbo].TVP_INS_PFP_POSITION AS TABLE (
[ID] int  NOT NULL,
[TEXT] nvarchar (250) NULL,
[TOP_ID] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PFP_POSITION
@source as dbo.TVP_INS_PFP_POSITION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PFP_POSITION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[TEXT] = SOURCE.[TEXT], TARGET.[TOP_ID] = SOURCE.[TOP_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[TEXT], [TOP_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[TEXT], SOURCE.[TOP_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PFP_VEHICLE_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PFP_VEHICLE_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PFP_VEHICLE_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PFP_VEHICLE_TYPE

GO

CREATE TYPE [dbo].TVP_INS_PFP_VEHICLE_TYPE AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[IMAGE_FILE_NAME] nvarchar (50) NULL,
[IS_POLYGON_DATA_VALID] bit  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PFP_VEHICLE_TYPE
@source as dbo.TVP_INS_PFP_VEHICLE_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PFP_VEHICLE_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[IMAGE_FILE_NAME] = SOURCE.[IMAGE_FILE_NAME], TARGET.[IS_POLYGON_DATA_VALID] = SOURCE.[IS_POLYGON_DATA_VALID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [IMAGE_FILE_NAME], [IS_POLYGON_DATA_VALID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[IMAGE_FILE_NAME], SOURCE.[IS_POLYGON_DATA_VALID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_COMBINATION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_COMBINATION_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_COMBINATION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_COMBINATION_TYPE

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_COMBINATION_TYPE AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_COMBINATION_TYPE
@source as dbo.TVP_INS_PRODUCT_COMBINATION_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_COMBINATION_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_MATERIAL_GROUP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_MATERIAL_GROUP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_MATERIAL_GROUP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_MATERIAL_GROUP

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_MATERIAL_GROUP AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[SAP_ID] varchar (10) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_MATERIAL_GROUP
@source as dbo.TVP_INS_PRODUCT_MATERIAL_GROUP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_MATERIAL_GROUP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[SAP_ID] = SOURCE.[SAP_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [SAP_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[SAP_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_OBJECT_CLASS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_OBJECT_CLASS

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_OBJECT_CLASS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_OBJECT_CLASS

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_OBJECT_CLASS AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[WEIGHT_FROM] int  NULL,
[WEIGHT_TO] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_OBJECT_CLASS
@source as dbo.TVP_INS_PRODUCT_OBJECT_CLASS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_OBJECT_CLASS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[WEIGHT_FROM] = SOURCE.[WEIGHT_FROM], TARGET.[WEIGHT_TO] = SOURCE.[WEIGHT_TO], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [WEIGHT_FROM], [WEIGHT_TO], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[WEIGHT_FROM], SOURCE.[WEIGHT_TO], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_OBJECT_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_OBJECT_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_OBJECT_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_OBJECT_TYPE

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_OBJECT_TYPE AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[SAP_ID] varchar (10) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[IS_AU_NECESSARY] bit  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_OBJECT_TYPE
@source as dbo.TVP_INS_PRODUCT_OBJECT_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_OBJECT_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[SAP_ID] = SOURCE.[SAP_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[IS_AU_NECESSARY] = SOURCE.[IS_AU_NECESSARY]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [SAP_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [IS_AU_NECESSARY]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[SAP_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[IS_AU_NECESSARY]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_TYPE

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] varchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_TYPE
@source as dbo.TVP_INS_PRODUCT_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_SEVERITY_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_SEVERITY_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_SEVERITY_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_SEVERITY_TYPE

GO

CREATE TYPE [dbo].TVP_INS_SEVERITY_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (50) NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[SP_SEVERITY] varchar (4) NULL,
[SP_TEST_MARK_PRESET] int  NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_SEVERITY_TYPE
@source as dbo.TVP_INS_SEVERITY_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_SEVERITY_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[SP_SEVERITY] = SOURCE.[SP_SEVERITY], TARGET.[SP_TEST_MARK_PRESET] = SOURCE.[SP_TEST_MARK_PRESET]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [SP_SEVERITY], [SP_TEST_MARK_PRESET]
) VALUES (
SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[SP_SEVERITY], SOURCE.[SP_TEST_MARK_PRESET]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_SUMMARY_FIELD' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_SUMMARY_FIELD

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_SUMMARY_FIELD' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_SUMMARY_FIELD

GO

CREATE TYPE [dbo].TVP_INS_SUMMARY_FIELD AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_SUMMARY_FIELD
@source as dbo.TVP_INS_SUMMARY_FIELD READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_SUMMARY_FIELD] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_TAX_CLASS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_TAX_CLASS

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_TAX_CLASS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_TAX_CLASS

GO

CREATE TYPE [dbo].TVP_INS_TAX_CLASS AS TABLE (
[ID] int  NOT NULL,
[TAX_CLASS] varchar (10) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_TAX_CLASS
@source as dbo.TVP_INS_TAX_CLASS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_TAX_CLASS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[TAX_CLASS] = SOURCE.[TAX_CLASS], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[TAX_CLASS], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[TAX_CLASS], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_TAX_CODE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_TAX_CODE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_TAX_CODE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_TAX_CODE

GO

CREATE TYPE [dbo].TVP_INS_TAX_CODE AS TABLE (
[ID] int  NOT NULL,
[TAX_CODE] varchar (10) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_TAX_CODE
@source as dbo.TVP_INS_TAX_CODE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_TAX_CODE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[TAX_CODE] = SOURCE.[TAX_CODE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[TAX_CODE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[TAX_CODE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_VALID_PERIOD' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_VALID_PERIOD

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_VALID_PERIOD' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_VALID_PERIOD

GO

CREATE TYPE [dbo].TVP_INS_VALID_PERIOD AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[VALIDITY_PERIOD] int  NULL,
[IS_NEXT_TERMIN_POSSIBLE] bit  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_VALID_PERIOD
@source as dbo.TVP_INS_VALID_PERIOD READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_VALID_PERIOD] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[VALIDITY_PERIOD] = SOURCE.[VALIDITY_PERIOD], TARGET.[IS_NEXT_TERMIN_POSSIBLE] = SOURCE.[IS_NEXT_TERMIN_POSSIBLE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [VALIDITY_PERIOD], [IS_NEXT_TERMIN_POSSIBLE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[VALIDITY_PERIOD], SOURCE.[IS_NEXT_TERMIN_POSSIBLE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_VAT_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_VAT_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_VAT_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_VAT_TYPE

GO

CREATE TYPE [dbo].TVP_INS_VAT_TYPE AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[TAX_CODE] varchar (10) NULL,
[PERCENT] money  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_VAT_TYPE
@source as dbo.TVP_INS_VAT_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_VAT_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[TAX_CODE] = SOURCE.[TAX_CODE], TARGET.[PERCENT] = SOURCE.[PERCENT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [TAX_CODE], [PERCENT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[TAX_CODE], SOURCE.[PERCENT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_CASH_STATUS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_CASH_STATUS

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_CASH_STATUS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_CASH_STATUS

GO

CREATE TYPE [dbo].TVP_KSS_CASH_STATUS AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_CASH_STATUS
@source as dbo.TVP_KSS_CASH_STATUS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_CASH_STATUS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_DOCUMENT_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_DOCUMENT_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_DOCUMENT_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_DOCUMENT_TYPE

GO

CREATE TYPE [dbo].TVP_KSS_DOCUMENT_TYPE AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_DOCUMENT_TYPE
@source as dbo.TVP_KSS_DOCUMENT_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_DOCUMENT_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_OPERATION_STATUS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_OPERATION_STATUS

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_OPERATION_STATUS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_OPERATION_STATUS

GO

CREATE TYPE [dbo].TVP_KSS_OPERATION_STATUS AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_OPERATION_STATUS
@source as dbo.TVP_KSS_OPERATION_STATUS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_OPERATION_STATUS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_OPERATION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_OPERATION_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_OPERATION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_OPERATION_TYPE

GO

CREATE TYPE [dbo].TVP_KSS_OPERATION_TYPE AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (100) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_OPERATION_TYPE
@source as dbo.TVP_KSS_OPERATION_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_OPERATION_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_PAYMENT_METHOD' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_PAYMENT_METHOD

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_PAYMENT_METHOD' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_PAYMENT_METHOD

GO

CREATE TYPE [dbo].TVP_KSS_PAYMENT_METHOD AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_PAYMENT_METHOD
@source as dbo.TVP_KSS_PAYMENT_METHOD READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_PAYMENT_METHOD] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_ADDITIONAL_PAYMENTS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_ADDITIONAL_PAYMENTS

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_ADDITIONAL_PAYMENTS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_ADDITIONAL_PAYMENTS

GO

CREATE TYPE [dbo].TVP_ORD_ADDITIONAL_PAYMENTS AS TABLE (
[ID] int  NOT NULL,
[PAYMENT_TYPE] int  NOT NULL,
[VALUE] money  NOT NULL,
[DESCRIPTION] varchar (50) NOT NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_ADDITIONAL_PAYMENTS
@source as dbo.TVP_ORD_ADDITIONAL_PAYMENTS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_ADDITIONAL_PAYMENTS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[PAYMENT_TYPE] = SOURCE.[PAYMENT_TYPE], TARGET.[VALUE] = SOURCE.[VALUE], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[PAYMENT_TYPE], [VALUE], [DESCRIPTION], [FROM_DATE], [TO_DATE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[PAYMENT_TYPE], SOURCE.[VALUE], SOURCE.[DESCRIPTION], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_AREA_OF_WORK' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_AREA_OF_WORK

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_AREA_OF_WORK' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_AREA_OF_WORK

GO

CREATE TYPE [dbo].TVP_ORD_AREA_OF_WORK AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[DESCRIPTION] nvarchar (50) NULL,
[IS_PROVISION_COST_ALLOWED] bit  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_AREA_OF_WORK
@source as dbo.TVP_ORD_AREA_OF_WORK READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_AREA_OF_WORK] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[IS_PROVISION_COST_ALLOWED] = SOURCE.[IS_PROVISION_COST_ALLOWED]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [DESCRIPTION], [IS_PROVISION_COST_ALLOWED]
) VALUES (
SOURCE.[NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[DESCRIPTION], SOURCE.[IS_PROVISION_COST_ALLOWED]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_BILL_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_BILL_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_BILL_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_BILL_TYPE

GO

CREATE TYPE [dbo].TVP_ORD_BILL_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (100) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_BILL_TYPE
@source as dbo.TVP_ORD_BILL_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_BILL_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_BILLING_PARAMETER' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_BILLING_PARAMETER

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_BILLING_PARAMETER' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_BILLING_PARAMETER

GO

CREATE TYPE [dbo].TVP_ORD_BILLING_PARAMETER AS TABLE (
[ID] int  NOT NULL,
[SAP_ID] varchar (10) NOT NULL,
[DESCRIPTION] nvarchar (100) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_BILLING_PARAMETER
@source as dbo.TVP_ORD_BILLING_PARAMETER READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_BILLING_PARAMETER] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SAP_ID] = SOURCE.[SAP_ID], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[SAP_ID], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[SAP_ID], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_CONTACT_PERSON_FUNCTION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_CONTACT_PERSON_FUNCTION

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_CONTACT_PERSON_FUNCTION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_CONTACT_PERSON_FUNCTION

GO

CREATE TYPE [dbo].TVP_ORD_CONTACT_PERSON_FUNCTION AS TABLE (
[ID] int  NOT NULL,
[SAP_ID] varchar (10) NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_CONTACT_PERSON_FUNCTION
@source as dbo.TVP_ORD_CONTACT_PERSON_FUNCTION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_CONTACT_PERSON_FUNCTION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SAP_ID] = SOURCE.[SAP_ID], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[SAP_ID], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[SAP_ID], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_CUSTOMER' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_CUSTOMER

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_CUSTOMER' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_CUSTOMER

GO

CREATE TYPE [dbo].TVP_ORD_CUSTOMER AS TABLE (
[ID] int  NOT NULL,
[CUSTOMER_NUMBER] char (10) NULL,
[SEARCH_WORD] nvarchar (50) NULL,
[DEBITOR_NUMBER] char (10) NULL,
[REMARK] nvarchar (90) NULL,
[URL] nvarchar (90) NULL,
[USTID] varchar (50) NULL,
[AU_CONTROL_NUMBER] varchar (160) NULL,
[GSP_GWP_CONTROL_NUMBER] varchar (160) NULL,
[CUSTOMER_TYPE] int  NULL,
[LANGUAGE_CODE] varchar (10) NULL,
[MAIN_SUPERVISOR] nvarchar (50) NULL,
[ADVERTISING] nvarchar (50) NULL,
[IS_CORE_DATA] bit  NULL,
[IS_REPORT_COPY_REQUIRED] bit  NULL,
[IS_SPECIAL] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[IS_SCHOOL] bit  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_CUSTOMER
@source as dbo.TVP_ORD_CUSTOMER READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_CUSTOMER] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[CUSTOMER_NUMBER] = SOURCE.[CUSTOMER_NUMBER], TARGET.[SEARCH_WORD] = SOURCE.[SEARCH_WORD], TARGET.[DEBITOR_NUMBER] = SOURCE.[DEBITOR_NUMBER], TARGET.[REMARK] = SOURCE.[REMARK], TARGET.[URL] = SOURCE.[URL], TARGET.[USTID] = SOURCE.[USTID], TARGET.[AU_CONTROL_NUMBER] = SOURCE.[AU_CONTROL_NUMBER], TARGET.[GSP_GWP_CONTROL_NUMBER] = SOURCE.[GSP_GWP_CONTROL_NUMBER], TARGET.[CUSTOMER_TYPE] = SOURCE.[CUSTOMER_TYPE], TARGET.[LANGUAGE_CODE] = SOURCE.[LANGUAGE_CODE], TARGET.[MAIN_SUPERVISOR] = SOURCE.[MAIN_SUPERVISOR], TARGET.[ADVERTISING] = SOURCE.[ADVERTISING], TARGET.[IS_CORE_DATA] = SOURCE.[IS_CORE_DATA], TARGET.[IS_REPORT_COPY_REQUIRED] = SOURCE.[IS_REPORT_COPY_REQUIRED], TARGET.[IS_SPECIAL] = SOURCE.[IS_SPECIAL], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[IS_SCHOOL] = SOURCE.[IS_SCHOOL]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[CUSTOMER_NUMBER], [SEARCH_WORD], [DEBITOR_NUMBER], [REMARK], [URL], [USTID], [AU_CONTROL_NUMBER], [GSP_GWP_CONTROL_NUMBER], [CUSTOMER_TYPE], [LANGUAGE_CODE], [MAIN_SUPERVISOR], [ADVERTISING], [IS_CORE_DATA], [IS_REPORT_COPY_REQUIRED], [IS_SPECIAL], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [IS_SCHOOL]
) VALUES (
SOURCE.[CUSTOMER_NUMBER], SOURCE.[SEARCH_WORD], SOURCE.[DEBITOR_NUMBER], SOURCE.[REMARK], SOURCE.[URL], SOURCE.[USTID], SOURCE.[AU_CONTROL_NUMBER], SOURCE.[GSP_GWP_CONTROL_NUMBER], SOURCE.[CUSTOMER_TYPE], SOURCE.[LANGUAGE_CODE], SOURCE.[MAIN_SUPERVISOR], SOURCE.[ADVERTISING], SOURCE.[IS_CORE_DATA], SOURCE.[IS_REPORT_COPY_REQUIRED], SOURCE.[IS_SPECIAL], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[IS_SCHOOL]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_CUSTOMER_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_CUSTOMER_INFO

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_CUSTOMER_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_CUSTOMER_INFO

GO

CREATE TYPE [dbo].TVP_ORD_CUSTOMER_INFO AS TABLE (
[ID] int  NOT NULL,
[TEXT_VALUE] nvarchar (512) NULL,
[NUMBER_VALUE] int  NULL,
[INFO_TYPE] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_CUSTOMER_INFO
@source as dbo.TVP_ORD_CUSTOMER_INFO READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_CUSTOMER_INFO] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[TEXT_VALUE] = SOURCE.[TEXT_VALUE], TARGET.[NUMBER_VALUE] = SOURCE.[NUMBER_VALUE], TARGET.[INFO_TYPE] = SOURCE.[INFO_TYPE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[TEXT_VALUE], [NUMBER_VALUE], [INFO_TYPE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[TEXT_VALUE], SOURCE.[NUMBER_VALUE], SOURCE.[INFO_TYPE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_ESCALATION_LEVEL_ACTION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_ESCALATION_LEVEL_ACTION

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_ESCALATION_LEVEL_ACTION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_ESCALATION_LEVEL_ACTION

GO

CREATE TYPE [dbo].TVP_ORD_ESCALATION_LEVEL_ACTION AS TABLE (
[ID] int  NOT NULL,
[ACTION_VALUE] int  NOT NULL,
[SYS_LANGUAGE_ID] int  NOT NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_ESCALATION_LEVEL_ACTION
@source as dbo.TVP_ORD_ESCALATION_LEVEL_ACTION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_ESCALATION_LEVEL_ACTION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ACTION_VALUE] = SOURCE.[ACTION_VALUE], TARGET.[SYS_LANGUAGE_ID] = SOURCE.[SYS_LANGUAGE_ID], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ACTION_VALUE], [SYS_LANGUAGE_ID], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ACTION_VALUE], SOURCE.[SYS_LANGUAGE_ID], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_ORDER_ADDITIONAL_INFORMATION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_ORDER_ADDITIONAL_INFORMATION_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_ORDER_ADDITIONAL_INFORMATION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_ORDER_ADDITIONAL_INFORMATION_TYPE

GO

CREATE TYPE [dbo].TVP_ORD_ORDER_ADDITIONAL_INFORMATION_TYPE AS TABLE (
[ID] int  NOT NULL,
[TEXT] varchar (50) NOT NULL,
[DESCRIPTION] varchar (250) NOT NULL,
[CATEGORY] varchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_ORDER_ADDITIONAL_INFORMATION_TYPE
@source as dbo.TVP_ORD_ORDER_ADDITIONAL_INFORMATION_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_ORDER_ADDITIONAL_INFORMATION_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[TEXT] = SOURCE.[TEXT], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CATEGORY] = SOURCE.[CATEGORY], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[TEXT], [DESCRIPTION], [CATEGORY], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[TEXT], SOURCE.[DESCRIPTION], SOURCE.[CATEGORY], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_ORDER_CANCELATION_REASON' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_ORDER_CANCELATION_REASON

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_ORDER_CANCELATION_REASON' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_ORDER_CANCELATION_REASON

GO

CREATE TYPE [dbo].TVP_ORD_ORDER_CANCELATION_REASON AS TABLE (
[ID] int  NOT NULL,
[CANCELATION_REASON_TEXT] nvarchar (1024) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_ORDER_CANCELATION_REASON
@source as dbo.TVP_ORD_ORDER_CANCELATION_REASON READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_ORDER_CANCELATION_REASON] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[CANCELATION_REASON_TEXT] = SOURCE.[CANCELATION_REASON_TEXT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[CANCELATION_REASON_TEXT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[CANCELATION_REASON_TEXT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_ORDER_STATUS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_ORDER_STATUS

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_ORDER_STATUS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_ORDER_STATUS

GO

CREATE TYPE [dbo].TVP_ORD_ORDER_STATUS AS TABLE (
[ID] int  NOT NULL,
[STATUS] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[ORD_STATUS_VALUE] int  NOT NULL,
[SYS_LANGUAGE_ID] int  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_ORDER_STATUS
@source as dbo.TVP_ORD_ORDER_STATUS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_ORDER_STATUS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[STATUS] = SOURCE.[STATUS], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[ORD_STATUS_VALUE] = SOURCE.[ORD_STATUS_VALUE], TARGET.[SYS_LANGUAGE_ID] = SOURCE.[SYS_LANGUAGE_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[STATUS], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [ORD_STATUS_VALUE], [SYS_LANGUAGE_ID]
) VALUES (
SOURCE.[STATUS], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[ORD_STATUS_VALUE], SOURCE.[SYS_LANGUAGE_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_ORDER_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_ORDER_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_ORDER_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_ORDER_TYPE

GO

CREATE TYPE [dbo].TVP_ORD_ORDER_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] varchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_ORDER_TYPE
@source as dbo.TVP_ORD_ORDER_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_ORDER_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_PARTNER_ROLE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_PARTNER_ROLE

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_PARTNER_ROLE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_PARTNER_ROLE

GO

CREATE TYPE [dbo].TVP_ORD_PARTNER_ROLE AS TABLE (
[ID] int  NOT NULL,
[SAP_QUALIFIER] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_PARTNER_ROLE
@source as dbo.TVP_ORD_PARTNER_ROLE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_PARTNER_ROLE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SAP_QUALIFIER] = SOURCE.[SAP_QUALIFIER], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[SAP_QUALIFIER], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[SAP_QUALIFIER], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_PRODUCT_STATUS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_PRODUCT_STATUS

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_PRODUCT_STATUS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_PRODUCT_STATUS

GO

CREATE TYPE [dbo].TVP_ORD_PRODUCT_STATUS AS TABLE (
[ID] int  NOT NULL,
[STATUS] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_PRODUCT_STATUS
@source as dbo.TVP_ORD_PRODUCT_STATUS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_PRODUCT_STATUS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[STATUS] = SOURCE.[STATUS], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[STATUS], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[STATUS], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_RECOGNITION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_RECOGNITION_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_RECOGNITION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_RECOGNITION_TYPE

GO

CREATE TYPE [dbo].TVP_ORD_RECOGNITION_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_RECOGNITION_TYPE
@source as dbo.TVP_ORD_RECOGNITION_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_RECOGNITION_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_SAP_STATUS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_SAP_STATUS

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_SAP_STATUS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_SAP_STATUS

GO

CREATE TYPE [dbo].TVP_ORD_SAP_STATUS AS TABLE (
[ID] int  NOT NULL,
[SAP_STATUS_VALUE] int  NOT NULL,
[SYS_LANGUAGE_ID] int  NOT NULL,
[NAME] nvarchar (50) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_SAP_STATUS
@source as dbo.TVP_ORD_SAP_STATUS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_SAP_STATUS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SAP_STATUS_VALUE] = SOURCE.[SAP_STATUS_VALUE], TARGET.[SYS_LANGUAGE_ID] = SOURCE.[SYS_LANGUAGE_ID], TARGET.[NAME] = SOURCE.[NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[SAP_STATUS_VALUE], [SYS_LANGUAGE_ID], [NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[SAP_STATUS_VALUE], SOURCE.[SYS_LANGUAGE_ID], SOURCE.[NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_ACCOUNT_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_ACCOUNT_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_ACCOUNT_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_ACCOUNT_TYPE

GO

CREATE TYPE [dbo].TVP_ORG_ACCOUNT_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (50) NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_ACCOUNT_TYPE
@source as dbo.TVP_ORG_ACCOUNT_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_ACCOUNT_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_ACCOUNTING_AREA' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_ACCOUNTING_AREA

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_ACCOUNTING_AREA' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_ACCOUNTING_AREA

GO

CREATE TYPE [dbo].TVP_ORG_ACCOUNTING_AREA AS TABLE (
[ID] int  NOT NULL,
[ACCOUNTING_AREA] char (4) NOT NULL,
[MAX_ORDER_SUM] money  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_ACCOUNTING_AREA
@source as dbo.TVP_ORG_ACCOUNTING_AREA READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_ACCOUNTING_AREA] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ACCOUNTING_AREA] = SOURCE.[ACCOUNTING_AREA], TARGET.[MAX_ORDER_SUM] = SOURCE.[MAX_ORDER_SUM], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ACCOUNTING_AREA], [MAX_ORDER_SUM], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ACCOUNTING_AREA], SOURCE.[MAX_ORDER_SUM], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_BANK_INFORMATION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_BANK_INFORMATION

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_BANK_INFORMATION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_BANK_INFORMATION

GO

CREATE TYPE [dbo].TVP_ORG_BANK_INFORMATION AS TABLE (
[ID] int  NOT NULL,
[BANK_NAME] nvarchar (250) NULL,
[BANK_CODE] varchar (250) NULL,
[BANK_ACCOUNT] varchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[TRANSFER_VALUE] varchar (2) NULL,
[TRANSFER_X_VALUE] varchar (4) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_BANK_INFORMATION
@source as dbo.TVP_ORG_BANK_INFORMATION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_BANK_INFORMATION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[BANK_NAME] = SOURCE.[BANK_NAME], TARGET.[BANK_CODE] = SOURCE.[BANK_CODE], TARGET.[BANK_ACCOUNT] = SOURCE.[BANK_ACCOUNT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[TRANSFER_VALUE] = SOURCE.[TRANSFER_VALUE], TARGET.[TRANSFER_X_VALUE] = SOURCE.[TRANSFER_X_VALUE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[BANK_NAME], [BANK_CODE], [BANK_ACCOUNT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [TRANSFER_VALUE], [TRANSFER_X_VALUE]
) VALUES (
SOURCE.[BANK_NAME], SOURCE.[BANK_CODE], SOURCE.[BANK_ACCOUNT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[TRANSFER_VALUE], SOURCE.[TRANSFER_X_VALUE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_COST_CENTER' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_COST_CENTER

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_COST_CENTER' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_COST_CENTER

GO

CREATE TYPE [dbo].TVP_ORG_COST_CENTER AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (50) NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_COST_CENTER
@source as dbo.TVP_ORG_COST_CENTER READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_COST_CENTER] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_INFORMATION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_INFORMATION

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_INFORMATION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_INFORMATION

GO

CREATE TYPE [dbo].TVP_ORG_INFORMATION AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (50) NULL,
[VALUE] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_INFORMATION
@source as dbo.TVP_ORG_INFORMATION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_INFORMATION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[VALUE] = SOURCE.[VALUE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [VALUE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[VALUE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_INSPECTION_DEVICE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_INSPECTION_DEVICE

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_INSPECTION_DEVICE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_INSPECTION_DEVICE

GO

CREATE TYPE [dbo].TVP_ORG_INSPECTION_DEVICE AS TABLE (
[ID] int  NOT NULL,
[DEBITOR_CUSTOMER_NUMBER] varchar (10) NULL,
[IDENTIFICATION] char (15) NOT NULL,
[NEW_IDENTIFICATION] varchar (15) NULL,
[OLD_IDENTIFICATION] varchar (15) NULL,
[TYPE] char (1) NULL,
[SERIAL_NUMBER] varchar (50) NULL,
[NAME] nvarchar (50) NULL,
[DESCRIPTION] nvarchar (50) NULL,
[LAST_INSPECTION_DATE] datetime  NULL,
[LAST_INSPECTION_RESULT] nvarchar (20) NULL,
[INSPECTION_DATE] datetime  NULL,
[INSPECTION_INTERVAL] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_INSPECTION_DEVICE
@source as dbo.TVP_ORG_INSPECTION_DEVICE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_INSPECTION_DEVICE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DEBITOR_CUSTOMER_NUMBER] = SOURCE.[DEBITOR_CUSTOMER_NUMBER], TARGET.[IDENTIFICATION] = SOURCE.[IDENTIFICATION], TARGET.[NEW_IDENTIFICATION] = SOURCE.[NEW_IDENTIFICATION], TARGET.[OLD_IDENTIFICATION] = SOURCE.[OLD_IDENTIFICATION], TARGET.[TYPE] = SOURCE.[TYPE], TARGET.[SERIAL_NUMBER] = SOURCE.[SERIAL_NUMBER], TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[LAST_INSPECTION_DATE] = SOURCE.[LAST_INSPECTION_DATE], TARGET.[LAST_INSPECTION_RESULT] = SOURCE.[LAST_INSPECTION_RESULT], TARGET.[INSPECTION_DATE] = SOURCE.[INSPECTION_DATE], TARGET.[INSPECTION_INTERVAL] = SOURCE.[INSPECTION_INTERVAL], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DEBITOR_CUSTOMER_NUMBER], [IDENTIFICATION], [NEW_IDENTIFICATION], [OLD_IDENTIFICATION], [TYPE], [SERIAL_NUMBER], [NAME], [DESCRIPTION], [LAST_INSPECTION_DATE], [LAST_INSPECTION_RESULT], [INSPECTION_DATE], [INSPECTION_INTERVAL], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DEBITOR_CUSTOMER_NUMBER], SOURCE.[IDENTIFICATION], SOURCE.[NEW_IDENTIFICATION], SOURCE.[OLD_IDENTIFICATION], SOURCE.[TYPE], SOURCE.[SERIAL_NUMBER], SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[LAST_INSPECTION_DATE], SOURCE.[LAST_INSPECTION_RESULT], SOURCE.[INSPECTION_DATE], SOURCE.[INSPECTION_INTERVAL], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_OPEN_TIME_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_OPEN_TIME_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_OPEN_TIME_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_OPEN_TIME_TYPE

GO

CREATE TYPE [dbo].TVP_ORG_OPEN_TIME_TYPE AS TABLE (
[ID] int  NOT NULL,
[DAY] int  NULL,
[WEEK_DAY_FROM] int  NULL,
[WEEK_DAY_TO] int  NULL,
[MONTH_FROM] int  NULL,
[MONTH_TO] int  NULL,
[OPENING_TIME_BEFORE_NOON] time (0) NULL,
[CLOSING_TIME_BEFORE_NOON] time (0) NULL,
[OPENING_TIME_AFTER_NOON] time (0) NULL,
[CLOSING_TIME_AFTER_NOON] time (0) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_OPEN_TIME_TYPE
@source as dbo.TVP_ORG_OPEN_TIME_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_OPEN_TIME_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DAY] = SOURCE.[DAY], TARGET.[WEEK_DAY_FROM] = SOURCE.[WEEK_DAY_FROM], TARGET.[WEEK_DAY_TO] = SOURCE.[WEEK_DAY_TO], TARGET.[MONTH_FROM] = SOURCE.[MONTH_FROM], TARGET.[MONTH_TO] = SOURCE.[MONTH_TO], TARGET.[OPENING_TIME_BEFORE_NOON] = SOURCE.[OPENING_TIME_BEFORE_NOON], TARGET.[CLOSING_TIME_BEFORE_NOON] = SOURCE.[CLOSING_TIME_BEFORE_NOON], TARGET.[OPENING_TIME_AFTER_NOON] = SOURCE.[OPENING_TIME_AFTER_NOON], TARGET.[CLOSING_TIME_AFTER_NOON] = SOURCE.[CLOSING_TIME_AFTER_NOON], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DAY], [WEEK_DAY_FROM], [WEEK_DAY_TO], [MONTH_FROM], [MONTH_TO], [OPENING_TIME_BEFORE_NOON], [CLOSING_TIME_BEFORE_NOON], [OPENING_TIME_AFTER_NOON], [CLOSING_TIME_AFTER_NOON], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[DAY], SOURCE.[WEEK_DAY_FROM], SOURCE.[WEEK_DAY_TO], SOURCE.[MONTH_FROM], SOURCE.[MONTH_TO], SOURCE.[OPENING_TIME_BEFORE_NOON], SOURCE.[CLOSING_TIME_BEFORE_NOON], SOURCE.[OPENING_TIME_AFTER_NOON], SOURCE.[CLOSING_TIME_AFTER_NOON], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_TYPE

GO

CREATE TYPE [dbo].TVP_ORG_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (50) NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_TYPE
@source as dbo.TVP_ORG_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_ACTION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_ACTION_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_ACTION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_ACTION_TYPE

GO

CREATE TYPE [dbo].TVP_SYS_ACTION_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (20) NULL,
[DESCRIPTION] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_ACTION_TYPE
@source as dbo.TVP_SYS_ACTION_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_ACTION_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [NAME], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_CONFIGURATION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_CONFIGURATION

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_CONFIGURATION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_CONFIGURATION

GO

CREATE TYPE [dbo].TVP_SYS_CONFIGURATION AS TABLE (
[ID] int  NOT NULL,
[SETTING_NAME] nvarchar (100) NOT NULL,
[SETTING_VALUE] nvarchar (500) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[IS_ENCRYPTED] bit  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_CONFIGURATION
@source as dbo.TVP_SYS_CONFIGURATION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_CONFIGURATION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SETTING_NAME] = SOURCE.[SETTING_NAME], TARGET.[SETTING_VALUE] = SOURCE.[SETTING_VALUE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[IS_ENCRYPTED] = SOURCE.[IS_ENCRYPTED]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[SETTING_NAME], [SETTING_VALUE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [IS_ENCRYPTED]
) VALUES (
SOURCE.[SETTING_NAME], SOURCE.[SETTING_VALUE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[IS_ENCRYPTED]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_COUNTRY' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_COUNTRY

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_COUNTRY' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_COUNTRY

GO

CREATE TYPE [dbo].TVP_SYS_COUNTRY AS TABLE (
[ID] int  NOT NULL,
[SAP_ID] nvarchar (10) NOT NULL,
[NAME] nvarchar (100) NULL,
[IS_EU] bit  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_COUNTRY
@source as dbo.TVP_SYS_COUNTRY READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_COUNTRY] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SAP_ID] = SOURCE.[SAP_ID], TARGET.[NAME] = SOURCE.[NAME], TARGET.[IS_EU] = SOURCE.[IS_EU], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[SAP_ID], [NAME], [IS_EU], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[SAP_ID], SOURCE.[NAME], SOURCE.[IS_EU], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_CURRENCY' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_CURRENCY

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_CURRENCY' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_CURRENCY

GO

CREATE TYPE [dbo].TVP_SYS_CURRENCY AS TABLE (
[ID] int  NOT NULL,
[SAP_ID] varchar (10) NOT NULL,
[NAME] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_CURRENCY
@source as dbo.TVP_SYS_CURRENCY READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_CURRENCY] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SAP_ID] = SOURCE.[SAP_ID], TARGET.[NAME] = SOURCE.[NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[SAP_ID], [NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[SAP_ID], SOURCE.[NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_DOCUMENT_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_DOCUMENT_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_DOCUMENT_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_DOCUMENT_TYPE

GO

CREATE TYPE [dbo].TVP_SYS_DOCUMENT_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (1024) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_DOCUMENT_TYPE
@source as dbo.TVP_SYS_DOCUMENT_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_DOCUMENT_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_EMERGENCY_KEY' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_EMERGENCY_KEY

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_EMERGENCY_KEY' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_EMERGENCY_KEY

GO

CREATE TYPE [dbo].TVP_SYS_EMERGENCY_KEY AS TABLE (
[ID] int  NOT NULL,
[TEXT] nvarchar (50) NULL,
[VALID_FROM] datetime2 (3) NULL,
[VALID_TO] datetime2 (3) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_EMERGENCY_KEY
@source as dbo.TVP_SYS_EMERGENCY_KEY READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_EMERGENCY_KEY] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[TEXT] = SOURCE.[TEXT], TARGET.[VALID_FROM] = SOURCE.[VALID_FROM], TARGET.[VALID_TO] = SOURCE.[VALID_TO], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[TEXT], [VALID_FROM], [VALID_TO], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[TEXT], SOURCE.[VALID_FROM], SOURCE.[VALID_TO], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_ENCRYPTION_METADATA' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_ENCRYPTION_METADATA

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_ENCRYPTION_METADATA' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_ENCRYPTION_METADATA

GO

CREATE TYPE [dbo].TVP_SYS_ENCRYPTION_METADATA AS TABLE (
[ID] int  NOT NULL,
[TABLE_NAME] nvarchar (100) NOT NULL,
[FIELD_NAME] nvarchar (100) NOT NULL,
[ENCRYPTED] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_ENCRYPTION_METADATA
@source as dbo.TVP_SYS_ENCRYPTION_METADATA READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_ENCRYPTION_METADATA] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[TABLE_NAME] = SOURCE.[TABLE_NAME], TARGET.[FIELD_NAME] = SOURCE.[FIELD_NAME], TARGET.[ENCRYPTED] = SOURCE.[ENCRYPTED], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[TABLE_NAME], [FIELD_NAME], [ENCRYPTED], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[TABLE_NAME], SOURCE.[FIELD_NAME], SOURCE.[ENCRYPTED], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_INFO_KEY' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_INFO_KEY

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_INFO_KEY' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_INFO_KEY

GO

CREATE TYPE [dbo].TVP_SYS_INFO_KEY AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (100) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_INFO_KEY
@source as dbo.TVP_SYS_INFO_KEY READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_INFO_KEY] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_LANGUAGE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_LANGUAGE

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_LANGUAGE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_LANGUAGE

GO

CREATE TYPE [dbo].TVP_SYS_LANGUAGE AS TABLE (
[ID] int  NOT NULL,
[SAP_ID] char (10) NOT NULL,
[SAP_ID_ISO] varchar (10) NULL,
[RESOURCE_FILE_NAME] nvarchar (10) NULL,
[IS_AVAILABLE] bit  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_LANGUAGE
@source as dbo.TVP_SYS_LANGUAGE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_LANGUAGE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SAP_ID] = SOURCE.[SAP_ID], TARGET.[SAP_ID_ISO] = SOURCE.[SAP_ID_ISO], TARGET.[RESOURCE_FILE_NAME] = SOURCE.[RESOURCE_FILE_NAME], TARGET.[IS_AVAILABLE] = SOURCE.[IS_AVAILABLE], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[SAP_ID], [SAP_ID_ISO], [RESOURCE_FILE_NAME], [IS_AVAILABLE], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[SAP_ID], SOURCE.[SAP_ID_ISO], SOURCE.[RESOURCE_FILE_NAME], SOURCE.[IS_AVAILABLE], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_MODULE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_MODULE

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_MODULE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_MODULE

GO

CREATE TYPE [dbo].TVP_SYS_MODULE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_MODULE
@source as dbo.TVP_SYS_MODULE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_MODULE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_NOTIFICATION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_NOTIFICATION_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_NOTIFICATION_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_NOTIFICATION_TYPE

GO

CREATE TYPE [dbo].TVP_SYS_NOTIFICATION_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (100) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_NOTIFICATION_TYPE
@source as dbo.TVP_SYS_NOTIFICATION_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_NOTIFICATION_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_PAPER_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_PAPER_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_PAPER_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_PAPER_TYPE

GO

CREATE TYPE [dbo].TVP_SYS_PAPER_TYPE AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (1024) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_PAPER_TYPE
@source as dbo.TVP_SYS_PAPER_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_PAPER_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_PERMISSION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_PERMISSION

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_PERMISSION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_PERMISSION

GO

CREATE TYPE [dbo].TVP_SYS_PERMISSION AS TABLE (
[ID] int  NOT NULL,
[PERMISSION_NUMBER] int  NULL,
[NAME] nvarchar (100) NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_PERMISSION
@source as dbo.TVP_SYS_PERMISSION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_PERMISSION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[PERMISSION_NUMBER] = SOURCE.[PERMISSION_NUMBER], TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[PERMISSION_NUMBER], [NAME], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[PERMISSION_NUMBER], SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_POS_CONFIGURATION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_POS_CONFIGURATION

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_POS_CONFIGURATION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_POS_CONFIGURATION

GO

CREATE TYPE [dbo].TVP_SYS_POS_CONFIGURATION AS TABLE (
[ID] int  NOT NULL,
[HOST_NAME] nvarchar (150) NOT NULL,
[SETTING_NAME] nvarchar (100) NOT NULL,
[SETTING_VALUE] nvarchar (max) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_POS_CONFIGURATION
@source as dbo.TVP_SYS_POS_CONFIGURATION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_POS_CONFIGURATION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[HOST_NAME] = SOURCE.[HOST_NAME], TARGET.[SETTING_NAME] = SOURCE.[SETTING_NAME], TARGET.[SETTING_VALUE] = SOURCE.[SETTING_VALUE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[HOST_NAME], [SETTING_NAME], [SETTING_VALUE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[HOST_NAME], SOURCE.[SETTING_NAME], SOURCE.[SETTING_VALUE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_POST_CODE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_POST_CODE

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_POST_CODE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_POST_CODE

GO

CREATE TYPE [dbo].TVP_SYS_POST_CODE AS TABLE (
[ID] int  NOT NULL,
[POST_CODE] nvarchar (10) NULL,
[CITY] nvarchar (50) NULL,
[STREET] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_POST_CODE
@source as dbo.TVP_SYS_POST_CODE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_POST_CODE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[POST_CODE] = SOURCE.[POST_CODE], TARGET.[CITY] = SOURCE.[CITY], TARGET.[STREET] = SOURCE.[STREET], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[POST_CODE], [CITY], [STREET], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[POST_CODE], SOURCE.[CITY], SOURCE.[STREET], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_ROLE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_ROLE

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_ROLE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_ROLE

GO

CREATE TYPE [dbo].TVP_SYS_ROLE AS TABLE (
[ID] int  NOT NULL,
[ROLE_NUMBER] int  NULL,
[NAME] nvarchar (50) NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_ROLE
@source as dbo.TVP_SYS_ROLE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_ROLE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ROLE_NUMBER] = SOURCE.[ROLE_NUMBER], TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ROLE_NUMBER], [NAME], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ROLE_NUMBER], SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_COLOR' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_COLOR

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_COLOR' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_COLOR

GO

CREATE TYPE [dbo].TVP_VHL_COLOR AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (50) NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_COLOR
@source as dbo.TVP_VHL_COLOR READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_COLOR] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_FUEL_TYPE_FORBIDDEN_INSPECTION_PRODUCT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_FUEL_TYPE_FORBIDDEN_INSPECTION_PRODUCT_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_FUEL_TYPE_FORBIDDEN_INSPECTION_PRODUCT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_FUEL_TYPE_FORBIDDEN_INSPECTION_PRODUCT_RSP

GO

CREATE TYPE [dbo].TVP_VHL_FUEL_TYPE_FORBIDDEN_INSPECTION_PRODUCT_RSP AS TABLE (
[ID] int  NOT NULL,
[INS_PRODUCT_CLASS_ID] int  NOT NULL,
[VHL_FUEL_TYPE_CODE] varchar (50) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_FUEL_TYPE_FORBIDDEN_INSPECTION_PRODUCT_RSP
@source as dbo.TVP_VHL_FUEL_TYPE_FORBIDDEN_INSPECTION_PRODUCT_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_FUEL_TYPE_FORBIDDEN_INSPECTION_PRODUCT_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_PRODUCT_CLASS_ID] = SOURCE.[INS_PRODUCT_CLASS_ID], TARGET.[VHL_FUEL_TYPE_CODE] = SOURCE.[VHL_FUEL_TYPE_CODE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_PRODUCT_CLASS_ID], [VHL_FUEL_TYPE_CODE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[INS_PRODUCT_CLASS_ID], SOURCE.[VHL_FUEL_TYPE_CODE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_SPECIAL_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_SPECIAL_INFO

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_SPECIAL_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_SPECIAL_INFO

GO

CREATE TYPE [dbo].TVP_VHL_SPECIAL_INFO AS TABLE (
[ID] int  NOT NULL,
[PRODUCER_NUMBER] nvarchar (100) NULL,
[CLASS_CODE] varchar (50) NULL,
[TYPE_NUMBER] varchar (100) NULL,
[TXT_VERSION] nvarchar (3) NULL,
[TXT_VARIANT] nvarchar (2) NULL,
[VIN] nvarchar (50) NULL,
[REGISTRATION_DATE_FROM] datetime2 (3) NULL,
[REGISTRATION_DATE_TO] datetime2 (3) NULL,
[INFO] nvarchar (max) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_SPECIAL_INFO
@source as dbo.TVP_VHL_SPECIAL_INFO READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_SPECIAL_INFO] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[PRODUCER_NUMBER] = SOURCE.[PRODUCER_NUMBER], TARGET.[CLASS_CODE] = SOURCE.[CLASS_CODE], TARGET.[TYPE_NUMBER] = SOURCE.[TYPE_NUMBER], TARGET.[TXT_VERSION] = SOURCE.[TXT_VERSION], TARGET.[TXT_VARIANT] = SOURCE.[TXT_VARIANT], TARGET.[VIN] = SOURCE.[VIN], TARGET.[REGISTRATION_DATE_FROM] = SOURCE.[REGISTRATION_DATE_FROM], TARGET.[REGISTRATION_DATE_TO] = SOURCE.[REGISTRATION_DATE_TO], TARGET.[INFO] = SOURCE.[INFO], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[PRODUCER_NUMBER], [CLASS_CODE], [TYPE_NUMBER], [TXT_VERSION], [TXT_VARIANT], [VIN], [REGISTRATION_DATE_FROM], [REGISTRATION_DATE_TO], [INFO], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[PRODUCER_NUMBER], SOURCE.[CLASS_CODE], SOURCE.[TYPE_NUMBER], SOURCE.[TXT_VERSION], SOURCE.[TXT_VARIANT], SOURCE.[VIN], SOURCE.[REGISTRATION_DATE_FROM], SOURCE.[REGISTRATION_DATE_TO], SOURCE.[INFO], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_CORE_ADDRESS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_CORE_ADDRESS

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_CORE_ADDRESS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_CORE_ADDRESS

GO

CREATE TYPE [dbo].TVP_EMP_CORE_ADDRESS AS TABLE (
[ID] int  NOT NULL,
[SAP_QUALIFIER] char (10) NULL,
[NAME_1] nvarchar (90) NULL,
[NAME_2] nvarchar (90) NULL,
[NAME_3] nvarchar (90) NULL,
[STREET] nvarchar (220) NULL,
[ZIP_CODE] varchar (50) NULL,
[ZIP_BOX] varchar (50) NULL,
[TELEFON_1] varchar (90) NULL,
[FAX] varchar (90) NULL,
[MOBILE_TELEFON] varchar (90) NULL,
[BOX] varchar (50) NULL,
[TELEFON_2] varchar (90) NULL,
[CITY] nvarchar (160) NULL,
[EMAIL] varchar (160) NULL,
[SYS_COUNTRY_ID] int  NULL,
[UST_ID] varchar (50) NULL,
[IS_LEGAL_FOREIGN] bit  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[EMP_CORE_ADDRESS_TYPE_ID] int  NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_CORE_ADDRESS
@source as dbo.TVP_EMP_CORE_ADDRESS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_CORE_ADDRESS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SAP_QUALIFIER] = SOURCE.[SAP_QUALIFIER], TARGET.[NAME_1] = SOURCE.[NAME_1], TARGET.[NAME_2] = SOURCE.[NAME_2], TARGET.[NAME_3] = SOURCE.[NAME_3], TARGET.[STREET] = SOURCE.[STREET], TARGET.[ZIP_CODE] = SOURCE.[ZIP_CODE], TARGET.[ZIP_BOX] = SOURCE.[ZIP_BOX], TARGET.[TELEFON_1] = SOURCE.[TELEFON_1], TARGET.[FAX] = SOURCE.[FAX], TARGET.[MOBILE_TELEFON] = SOURCE.[MOBILE_TELEFON], TARGET.[BOX] = SOURCE.[BOX], TARGET.[TELEFON_2] = SOURCE.[TELEFON_2], TARGET.[CITY] = SOURCE.[CITY], TARGET.[EMAIL] = SOURCE.[EMAIL], TARGET.[SYS_COUNTRY_ID] = SOURCE.[SYS_COUNTRY_ID], TARGET.[UST_ID] = SOURCE.[UST_ID], TARGET.[IS_LEGAL_FOREIGN] = SOURCE.[IS_LEGAL_FOREIGN], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[EMP_CORE_ADDRESS_TYPE_ID] = SOURCE.[EMP_CORE_ADDRESS_TYPE_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[SAP_QUALIFIER], [NAME_1], [NAME_2], [NAME_3], [STREET], [ZIP_CODE], [ZIP_BOX], [TELEFON_1], [FAX], [MOBILE_TELEFON], [BOX], [TELEFON_2], [CITY], [EMAIL], [SYS_COUNTRY_ID], [UST_ID], [IS_LEGAL_FOREIGN], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [EMP_CORE_ADDRESS_TYPE_ID]
) VALUES (
SOURCE.[SAP_QUALIFIER], SOURCE.[NAME_1], SOURCE.[NAME_2], SOURCE.[NAME_3], SOURCE.[STREET], SOURCE.[ZIP_CODE], SOURCE.[ZIP_BOX], SOURCE.[TELEFON_1], SOURCE.[FAX], SOURCE.[MOBILE_TELEFON], SOURCE.[BOX], SOURCE.[TELEFON_2], SOURCE.[CITY], SOURCE.[EMAIL], SOURCE.[SYS_COUNTRY_ID], SOURCE.[UST_ID], SOURCE.[IS_LEGAL_FOREIGN], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[EMP_CORE_ADDRESS_TYPE_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_AVAILABLE_INSPECTION_STEP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_AVAILABLE_INSPECTION_STEP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_AVAILABLE_INSPECTION_STEP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_AVAILABLE_INSPECTION_STEP

GO

CREATE TYPE [dbo].TVP_INS_AVAILABLE_INSPECTION_STEP AS TABLE (
[ID] int  NOT NULL,
[INS_INSPECTION_STEP_ID] int  NOT NULL,
[IS_MANDATORY] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_AVAILABLE_INSPECTION_STEP
@source as dbo.TVP_INS_AVAILABLE_INSPECTION_STEP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_AVAILABLE_INSPECTION_STEP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_INSPECTION_STEP_ID] = SOURCE.[INS_INSPECTION_STEP_ID], TARGET.[IS_MANDATORY] = SOURCE.[IS_MANDATORY], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_INSPECTION_STEP_ID], [IS_MANDATORY], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_INSPECTION_STEP_ID], SOURCE.[IS_MANDATORY], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_AVAILABLE_INSPECTION_TEXT_VALUE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_AVAILABLE_INSPECTION_TEXT_VALUE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_AVAILABLE_INSPECTION_TEXT_VALUE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_AVAILABLE_INSPECTION_TEXT_VALUE

GO

CREATE TYPE [dbo].TVP_INS_AVAILABLE_INSPECTION_TEXT_VALUE AS TABLE (
[ID] int  NOT NULL,
[INS_AVAILABLE_INSPECTION_TEXT_ID] int  NOT NULL,
[SYS_LANGUAGE_ID] int  NOT NULL,
[TEXT] nvarchar (512) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_AVAILABLE_INSPECTION_TEXT_VALUE
@source as dbo.TVP_INS_AVAILABLE_INSPECTION_TEXT_VALUE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_AVAILABLE_INSPECTION_TEXT_VALUE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_AVAILABLE_INSPECTION_TEXT_ID] = SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], TARGET.[SYS_LANGUAGE_ID] = SOURCE.[SYS_LANGUAGE_ID], TARGET.[TEXT] = SOURCE.[TEXT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_AVAILABLE_INSPECTION_TEXT_ID], [SYS_LANGUAGE_ID], [TEXT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], SOURCE.[SYS_LANGUAGE_ID], SOURCE.[TEXT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_MEASURABLE_VALUE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_MEASURABLE_VALUE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_MEASURABLE_VALUE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_MEASURABLE_VALUE

GO

CREATE TYPE [dbo].TVP_INS_MEASURABLE_VALUE AS TABLE (
[ID] int  NOT NULL,
[INS_INSPECTION_STEP_ID] int  NULL,
[TEXT] nvarchar (50) NOT NULL,
[INS_MEASURE_TYPE_ID] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_MEASURABLE_VALUE
@source as dbo.TVP_INS_MEASURABLE_VALUE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_MEASURABLE_VALUE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_INSPECTION_STEP_ID] = SOURCE.[INS_INSPECTION_STEP_ID], TARGET.[TEXT] = SOURCE.[TEXT], TARGET.[INS_MEASURE_TYPE_ID] = SOURCE.[INS_MEASURE_TYPE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_INSPECTION_STEP_ID], [TEXT], [INS_MEASURE_TYPE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_INSPECTION_STEP_ID], SOURCE.[TEXT], SOURCE.[INS_MEASURE_TYPE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PFP_INSPECTION_TYPE_PFP_POSITION_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PFP_INSPECTION_TYPE_PFP_POSITION_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PFP_INSPECTION_TYPE_PFP_POSITION_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PFP_INSPECTION_TYPE_PFP_POSITION_RSP

GO

CREATE TYPE [dbo].TVP_INS_PFP_INSPECTION_TYPE_PFP_POSITION_RSP AS TABLE (
[ID] int  NOT NULL,
[INS_PFP_POSITION_ID] int  NOT NULL,
[INS_PFP_INSPECTION_TYPE_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PFP_INSPECTION_TYPE_PFP_POSITION_RSP
@source as dbo.TVP_INS_PFP_INSPECTION_TYPE_PFP_POSITION_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PFP_INSPECTION_TYPE_PFP_POSITION_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_PFP_POSITION_ID] = SOURCE.[INS_PFP_POSITION_ID], TARGET.[INS_PFP_INSPECTION_TYPE_ID] = SOURCE.[INS_PFP_INSPECTION_TYPE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_PFP_POSITION_ID], [INS_PFP_INSPECTION_TYPE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_PFP_POSITION_ID], SOURCE.[INS_PFP_INSPECTION_TYPE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_CLASS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_CLASS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_CLASS

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_CLASS AS TABLE (
[ID] int  NOT NULL,
[NAME] nvarchar (50) NOT NULL,
[DESCRIPTION] nvarchar (250) NULL,
[DEFAULT_BRAKE_INSPECTION_METHOD_ID] int  NULL,
[IS_OFFICIAL] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[CODE] char (2) NULL,
[COPY_PRINT_PERIOD] int  NOT NULL,
[INS_EG_DOK_SERVICE_TYPE_ID] int  NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS
@source as dbo.TVP_INS_PRODUCT_CLASS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_CLASS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[DEFAULT_BRAKE_INSPECTION_METHOD_ID] = SOURCE.[DEFAULT_BRAKE_INSPECTION_METHOD_ID], TARGET.[IS_OFFICIAL] = SOURCE.[IS_OFFICIAL], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[CODE] = SOURCE.[CODE], TARGET.[COPY_PRINT_PERIOD] = SOURCE.[COPY_PRINT_PERIOD], TARGET.[INS_EG_DOK_SERVICE_TYPE_ID] = SOURCE.[INS_EG_DOK_SERVICE_TYPE_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[NAME], [DESCRIPTION], [DEFAULT_BRAKE_INSPECTION_METHOD_ID], [IS_OFFICIAL], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [CODE], [COPY_PRINT_PERIOD], [INS_EG_DOK_SERVICE_TYPE_ID]
) VALUES (
SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[DEFAULT_BRAKE_INSPECTION_METHOD_ID], SOURCE.[IS_OFFICIAL], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[CODE], SOURCE.[COPY_PRINT_PERIOD], SOURCE.[INS_EG_DOK_SERVICE_TYPE_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_COMBINATION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_COMBINATION

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_COMBINATION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_COMBINATION

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_COMBINATION AS TABLE (
[ID] int  NOT NULL,
[PRODUCT_ID] int  NULL,
[ASSOCIATED_PRODUCT_ID] int  NULL,
[DESCRIPTION] nvarchar (50) NULL,
[NUMERIC_DESCRIPTION] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[ORG_ACCOUNTING_AREA_ID] int  NOT NULL,
[ORD_AREA_OF_WORK_ID] int  NOT NULL,
[NECESSITY_TYPE] int  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_COMBINATION
@source as dbo.TVP_INS_PRODUCT_COMBINATION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_COMBINATION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[PRODUCT_ID] = SOURCE.[PRODUCT_ID], TARGET.[ASSOCIATED_PRODUCT_ID] = SOURCE.[ASSOCIATED_PRODUCT_ID], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[NUMERIC_DESCRIPTION] = SOURCE.[NUMERIC_DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID], TARGET.[ORD_AREA_OF_WORK_ID] = SOURCE.[ORD_AREA_OF_WORK_ID], TARGET.[NECESSITY_TYPE] = SOURCE.[NECESSITY_TYPE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[PRODUCT_ID], [ASSOCIATED_PRODUCT_ID], [DESCRIPTION], [NUMERIC_DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [ORG_ACCOUNTING_AREA_ID], [ORD_AREA_OF_WORK_ID], [NECESSITY_TYPE]
) VALUES (
SOURCE.[PRODUCT_ID], SOURCE.[ASSOCIATED_PRODUCT_ID], SOURCE.[DESCRIPTION], SOURCE.[NUMERIC_DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[ORG_ACCOUNTING_AREA_ID], SOURCE.[ORD_AREA_OF_WORK_ID], SOURCE.[NECESSITY_TYPE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_TAX_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_TAX_INFO

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_TAX_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_TAX_INFO

GO

CREATE TYPE [dbo].TVP_INS_TAX_INFO AS TABLE (
[ID] int  NOT NULL,
[INS_TAX_CODE_ID] int  NULL,
[INS_TAX_CLASS_ID] int  NULL,
[ORG_ACCOUNTING_AREA_ID] int  NOT NULL,
[SYS_COUNTRY_ID] int  NULL,
[PERCENT] money  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[DEBITOR_NUMBER] char (10) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_TAX_INFO
@source as dbo.TVP_INS_TAX_INFO READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_TAX_INFO] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_TAX_CODE_ID] = SOURCE.[INS_TAX_CODE_ID], TARGET.[INS_TAX_CLASS_ID] = SOURCE.[INS_TAX_CLASS_ID], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID], TARGET.[SYS_COUNTRY_ID] = SOURCE.[SYS_COUNTRY_ID], TARGET.[PERCENT] = SOURCE.[PERCENT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[DEBITOR_NUMBER] = SOURCE.[DEBITOR_NUMBER]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_TAX_CODE_ID], [INS_TAX_CLASS_ID], [ORG_ACCOUNTING_AREA_ID], [SYS_COUNTRY_ID], [PERCENT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [DEBITOR_NUMBER]
) VALUES (
SOURCE.[INS_TAX_CODE_ID], SOURCE.[INS_TAX_CLASS_ID], SOURCE.[ORG_ACCOUNTING_AREA_ID], SOURCE.[SYS_COUNTRY_ID], SOURCE.[PERCENT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[DEBITOR_NUMBER]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_TEMPLATE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_TEMPLATE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_TEMPLATE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_TEMPLATE

GO

CREATE TYPE [dbo].TVP_INS_TEMPLATE AS TABLE (
[ID] int  NOT NULL,
[INS_INSPECTION_STEP_ID] int  NOT NULL,
[INS_META_DATA_ID] int  NOT NULL,
[FILE_NAME] varchar (100) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_TEMPLATE
@source as dbo.TVP_INS_TEMPLATE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_TEMPLATE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_INSPECTION_STEP_ID] = SOURCE.[INS_INSPECTION_STEP_ID], TARGET.[INS_META_DATA_ID] = SOURCE.[INS_META_DATA_ID], TARGET.[FILE_NAME] = SOURCE.[FILE_NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_INSPECTION_STEP_ID], [INS_META_DATA_ID], [FILE_NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_INSPECTION_STEP_ID], SOURCE.[INS_META_DATA_ID], SOURCE.[FILE_NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_EXPENSE_GROUND' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_EXPENSE_GROUND

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_EXPENSE_GROUND' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_EXPENSE_GROUND

GO

CREATE TYPE [dbo].TVP_KSS_EXPENSE_GROUND AS TABLE (
[ID] int  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[ACCOUNT] varchar (10) NULL,
[INS_VAT_TYPE_ID] int  NULL,
[MAX_AMOUNT] money  NULL,
[PAYER] nvarchar (100) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_EXPENSE_GROUND
@source as dbo.TVP_KSS_EXPENSE_GROUND READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_EXPENSE_GROUND] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[ACCOUNT] = SOURCE.[ACCOUNT], TARGET.[INS_VAT_TYPE_ID] = SOURCE.[INS_VAT_TYPE_ID], TARGET.[MAX_AMOUNT] = SOURCE.[MAX_AMOUNT], TARGET.[PAYER] = SOURCE.[PAYER], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[DESCRIPTION], [ACCOUNT], [INS_VAT_TYPE_ID], [MAX_AMOUNT], [PAYER], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[DESCRIPTION], SOURCE.[ACCOUNT], SOURCE.[INS_VAT_TYPE_ID], SOURCE.[MAX_AMOUNT], SOURCE.[PAYER], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_CONTACT_PERSON' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_CONTACT_PERSON

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_CONTACT_PERSON' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_CONTACT_PERSON

GO

CREATE TYPE [dbo].TVP_ORD_CONTACT_PERSON AS TABLE (
[ID] int  NOT NULL,
[PERSONAL_NUMBER] varchar (10) NULL,
[TITLE] nvarchar (90) NULL,
[FIRST_NAME] nvarchar (90) NULL,
[LAST_NAME] nvarchar (90) NULL,
[PHONE_NUMBER] varchar (90) NULL,
[FAX] varchar (90) NULL,
[EMAILS] varchar (250) NULL,
[ORD_CONTACT_PERSON_FUNCTION_ID] int  NULL,
[ORD_CUSTOMER_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_CONTACT_PERSON
@source as dbo.TVP_ORD_CONTACT_PERSON READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_CONTACT_PERSON] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[PERSONAL_NUMBER] = SOURCE.[PERSONAL_NUMBER], TARGET.[TITLE] = SOURCE.[TITLE], TARGET.[FIRST_NAME] = SOURCE.[FIRST_NAME], TARGET.[LAST_NAME] = SOURCE.[LAST_NAME], TARGET.[PHONE_NUMBER] = SOURCE.[PHONE_NUMBER], TARGET.[FAX] = SOURCE.[FAX], TARGET.[EMAILS] = SOURCE.[EMAILS], TARGET.[ORD_CONTACT_PERSON_FUNCTION_ID] = SOURCE.[ORD_CONTACT_PERSON_FUNCTION_ID], TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[PERSONAL_NUMBER], [TITLE], [FIRST_NAME], [LAST_NAME], [PHONE_NUMBER], [FAX], [EMAILS], [ORD_CONTACT_PERSON_FUNCTION_ID], [ORD_CUSTOMER_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [ORG_ACCOUNTING_AREA_ID]
) VALUES (
SOURCE.[PERSONAL_NUMBER], SOURCE.[TITLE], SOURCE.[FIRST_NAME], SOURCE.[LAST_NAME], SOURCE.[PHONE_NUMBER], SOURCE.[FAX], SOURCE.[EMAILS], SOURCE.[ORD_CONTACT_PERSON_FUNCTION_ID], SOURCE.[ORD_CUSTOMER_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[ORG_ACCOUNTING_AREA_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_CUSTOMER_BILLING_PARAMETER_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_CUSTOMER_BILLING_PARAMETER_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_CUSTOMER_BILLING_PARAMETER_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_CUSTOMER_BILLING_PARAMETER_RSP

GO

CREATE TYPE [dbo].TVP_ORD_CUSTOMER_BILLING_PARAMETER_RSP AS TABLE (
[ID] int  NOT NULL,
[ORD_CUSTOMER_ID] int  NOT NULL,
[ORD_BILLING_PARAMETER_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[PAYS_CASH] bit  NULL,
[COLLECTION_LIST] int  NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_CUSTOMER_BILLING_PARAMETER_RSP
@source as dbo.TVP_ORD_CUSTOMER_BILLING_PARAMETER_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_CUSTOMER_BILLING_PARAMETER_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID], TARGET.[ORD_BILLING_PARAMETER_ID] = SOURCE.[ORD_BILLING_PARAMETER_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[PAYS_CASH] = SOURCE.[PAYS_CASH], TARGET.[COLLECTION_LIST] = SOURCE.[COLLECTION_LIST], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORD_CUSTOMER_ID], [ORD_BILLING_PARAMETER_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [PAYS_CASH], [COLLECTION_LIST], [ORG_ACCOUNTING_AREA_ID]
) VALUES (
SOURCE.[ORD_CUSTOMER_ID], SOURCE.[ORD_BILLING_PARAMETER_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[PAYS_CASH], SOURCE.[COLLECTION_LIST], SOURCE.[ORG_ACCOUNTING_AREA_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_CUSTOMER_INFO_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_CUSTOMER_INFO_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_CUSTOMER_INFO_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_CUSTOMER_INFO_RSP

GO

CREATE TYPE [dbo].TVP_ORD_CUSTOMER_INFO_RSP AS TABLE (
[ID] int  NOT NULL,
[ORD_CUSTOMER_INFO_ID] int  NOT NULL,
[ORD_CUSTOMER_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_CUSTOMER_INFO_RSP
@source as dbo.TVP_ORD_CUSTOMER_INFO_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_CUSTOMER_INFO_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_CUSTOMER_INFO_ID] = SOURCE.[ORD_CUSTOMER_INFO_ID], TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORD_CUSTOMER_INFO_ID], [ORD_CUSTOMER_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORD_CUSTOMER_INFO_ID], SOURCE.[ORD_CUSTOMER_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_CUSTOMER_LOCK_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_CUSTOMER_LOCK_INFO

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_CUSTOMER_LOCK_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_CUSTOMER_LOCK_INFO

GO

CREATE TYPE [dbo].TVP_ORD_CUSTOMER_LOCK_INFO AS TABLE (
[ID] int  NOT NULL,
[ORD_CUSTOMER_ID] int  NOT NULL,
[IS_LOCKED] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_CUSTOMER_LOCK_INFO
@source as dbo.TVP_ORD_CUSTOMER_LOCK_INFO READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_CUSTOMER_LOCK_INFO] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID], TARGET.[IS_LOCKED] = SOURCE.[IS_LOCKED], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORD_CUSTOMER_ID], [IS_LOCKED], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [ORG_ACCOUNTING_AREA_ID]
) VALUES (
SOURCE.[ORD_CUSTOMER_ID], SOURCE.[IS_LOCKED], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[ORG_ACCOUNTING_AREA_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_CUSTOMER_ORG_ACCOUNT_TYPE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_CUSTOMER_ORG_ACCOUNT_TYPE_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_CUSTOMER_ORG_ACCOUNT_TYPE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_CUSTOMER_ORG_ACCOUNT_TYPE_RSP

GO

CREATE TYPE [dbo].TVP_ORD_CUSTOMER_ORG_ACCOUNT_TYPE_RSP AS TABLE (
[ID] int  NOT NULL,
[ORD_CUSTOMER_ID] int  NOT NULL,
[ORG_ACCOUNT_TYPE_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] nvarchar (10) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_CUSTOMER_ORG_ACCOUNT_TYPE_RSP
@source as dbo.TVP_ORD_CUSTOMER_ORG_ACCOUNT_TYPE_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_CUSTOMER_ORG_ACCOUNT_TYPE_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID], TARGET.[ORG_ACCOUNT_TYPE_ID] = SOURCE.[ORG_ACCOUNT_TYPE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORD_CUSTOMER_ID], [ORG_ACCOUNT_TYPE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORD_CUSTOMER_ID], SOURCE.[ORG_ACCOUNT_TYPE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_CUSTOMER_PARTNER_ROLE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_CUSTOMER_PARTNER_ROLE_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_CUSTOMER_PARTNER_ROLE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_CUSTOMER_PARTNER_ROLE_RSP

GO

CREATE TYPE [dbo].TVP_ORD_CUSTOMER_PARTNER_ROLE_RSP AS TABLE (
[ID] int  NOT NULL,
[ORD_CUSTOMER_ID] int  NOT NULL,
[ORD_PARTNER_ROLE_ID] int  NOT NULL,
[DEBITOR_NUMBER] char (10) NOT NULL,
[SORT_ORDER] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_CUSTOMER_PARTNER_ROLE_RSP
@source as dbo.TVP_ORD_CUSTOMER_PARTNER_ROLE_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_CUSTOMER_PARTNER_ROLE_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID], TARGET.[ORD_PARTNER_ROLE_ID] = SOURCE.[ORD_PARTNER_ROLE_ID], TARGET.[DEBITOR_NUMBER] = SOURCE.[DEBITOR_NUMBER], TARGET.[SORT_ORDER] = SOURCE.[SORT_ORDER], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORD_CUSTOMER_ID], [ORD_PARTNER_ROLE_ID], [DEBITOR_NUMBER], [SORT_ORDER], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [ORG_ACCOUNTING_AREA_ID]
) VALUES (
SOURCE.[ORD_CUSTOMER_ID], SOURCE.[ORD_PARTNER_ROLE_ID], SOURCE.[DEBITOR_NUMBER], SOURCE.[SORT_ORDER], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[ORG_ACCOUNTING_AREA_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_CUSTOMER_TAX_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_CUSTOMER_TAX_INFO

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_CUSTOMER_TAX_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_CUSTOMER_TAX_INFO

GO

CREATE TYPE [dbo].TVP_ORD_CUSTOMER_TAX_INFO AS TABLE (
[ID] int  NOT NULL,
[ORD_CUSTOMER_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[INS_TAX_CLASS_ID] int  NOT NULL,
[ORG_ACCOUNTING_AREA_ID] int  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_CUSTOMER_TAX_INFO
@source as dbo.TVP_ORD_CUSTOMER_TAX_INFO READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_CUSTOMER_TAX_INFO] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[INS_TAX_CLASS_ID] = SOURCE.[INS_TAX_CLASS_ID], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORD_CUSTOMER_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [INS_TAX_CLASS_ID], [ORG_ACCOUNTING_AREA_ID]
) VALUES (
SOURCE.[ORD_CUSTOMER_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[INS_TAX_CLASS_ID], SOURCE.[ORG_ACCOUNTING_AREA_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_FEDERAL_STATE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_FEDERAL_STATE

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_FEDERAL_STATE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_FEDERAL_STATE

GO

CREATE TYPE [dbo].TVP_ORD_FEDERAL_STATE AS TABLE (
[ID] int  NOT NULL,
[FEDERAL_STATE_NAME] varchar (10) NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[STATISTIK_KEY] int  NULL,
[SYS_COUNTRY_ID] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_FEDERAL_STATE
@source as dbo.TVP_ORD_FEDERAL_STATE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_FEDERAL_STATE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[FEDERAL_STATE_NAME] = SOURCE.[FEDERAL_STATE_NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[STATISTIK_KEY] = SOURCE.[STATISTIK_KEY], TARGET.[SYS_COUNTRY_ID] = SOURCE.[SYS_COUNTRY_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[FEDERAL_STATE_NAME], [DESCRIPTION], [STATISTIK_KEY], [SYS_COUNTRY_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[FEDERAL_STATE_NAME], SOURCE.[DESCRIPTION], SOURCE.[STATISTIK_KEY], SOURCE.[SYS_COUNTRY_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_RECOGNITION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_RECOGNITION

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_RECOGNITION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_RECOGNITION

GO

CREATE TYPE [dbo].TVP_ORD_RECOGNITION AS TABLE (
[ID] int  NOT NULL,
[ORD_RECOGNITION_TYPE_ID] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_RECOGNITION
@source as dbo.TVP_ORD_RECOGNITION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_RECOGNITION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_RECOGNITION_TYPE_ID] = SOURCE.[ORD_RECOGNITION_TYPE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORD_RECOGNITION_TYPE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [ORG_ACCOUNTING_AREA_ID]
) VALUES (
SOURCE.[ORD_RECOGNITION_TYPE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[ORG_ACCOUNTING_AREA_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_DEFAULT_LANGUAGE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_DEFAULT_LANGUAGE

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_DEFAULT_LANGUAGE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_DEFAULT_LANGUAGE

GO

CREATE TYPE [dbo].TVP_SYS_DEFAULT_LANGUAGE AS TABLE (
[ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_DEFAULT_LANGUAGE
@source as dbo.TVP_SYS_DEFAULT_LANGUAGE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_DEFAULT_LANGUAGE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_NOTIFICATION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_NOTIFICATION

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_NOTIFICATION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_NOTIFICATION

GO

CREATE TYPE [dbo].TVP_SYS_NOTIFICATION AS TABLE (
[ID] int  NOT NULL,
[SYS_NOTIFICATION_TYPE_ID] int  NOT NULL,
[TEXT] nvarchar (max) NOT NULL,
[START_DATE] datetime2 (3) NOT NULL,
[END_DATE] datetime2 (3) NOT NULL,
[ORD_CUSTOMER_ID] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_NOTIFICATION
@source as dbo.TVP_SYS_NOTIFICATION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_NOTIFICATION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SYS_NOTIFICATION_TYPE_ID] = SOURCE.[SYS_NOTIFICATION_TYPE_ID], TARGET.[TEXT] = SOURCE.[TEXT], TARGET.[START_DATE] = SOURCE.[START_DATE], TARGET.[END_DATE] = SOURCE.[END_DATE], TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[SYS_NOTIFICATION_TYPE_ID], [TEXT], [START_DATE], [END_DATE], [ORD_CUSTOMER_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[SYS_NOTIFICATION_TYPE_ID], SOURCE.[TEXT], SOURCE.[START_DATE], SOURCE.[END_DATE], SOURCE.[ORD_CUSTOMER_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_ROLE_SYS_PERMISSION_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_ROLE_SYS_PERMISSION_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_ROLE_SYS_PERMISSION_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_ROLE_SYS_PERMISSION_RSP

GO

CREATE TYPE [dbo].TVP_SYS_ROLE_SYS_PERMISSION_RSP AS TABLE (
[ID] int  NOT NULL,
[SYS_ROLE_ID] int  NOT NULL,
[SYS_PERMISSION_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_ROLE_SYS_PERMISSION_RSP
@source as dbo.TVP_SYS_ROLE_SYS_PERMISSION_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_ROLE_SYS_PERMISSION_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SYS_ROLE_ID] = SOURCE.[SYS_ROLE_ID], TARGET.[SYS_PERMISSION_ID] = SOURCE.[SYS_PERMISSION_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[SYS_ROLE_ID], [SYS_PERMISSION_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[SYS_ROLE_ID], SOURCE.[SYS_PERMISSION_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_CLASS_INS_PRODUCT_OBJECT_TYPE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_CLASS_INS_PRODUCT_OBJECT_TYPE_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_CLASS_INS_PRODUCT_OBJECT_TYPE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_CLASS_INS_PRODUCT_OBJECT_TYPE_RSP

GO

CREATE TYPE [dbo].TVP_VHL_CLASS_INS_PRODUCT_OBJECT_TYPE_RSP AS TABLE (
[ID] int  NOT NULL,
[VHL_CLASS_CODE] varchar (50) NOT NULL,
[INS_PRODUCT_OBJECT_TYPE_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_CLASS_INS_PRODUCT_OBJECT_TYPE_RSP
@source as dbo.TVP_VHL_CLASS_INS_PRODUCT_OBJECT_TYPE_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_CLASS_INS_PRODUCT_OBJECT_TYPE_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[VHL_CLASS_CODE] = SOURCE.[VHL_CLASS_CODE], TARGET.[INS_PRODUCT_OBJECT_TYPE_ID] = SOURCE.[INS_PRODUCT_OBJECT_TYPE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[VHL_CLASS_CODE], [INS_PRODUCT_OBJECT_TYPE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[VHL_CLASS_CODE], SOURCE.[INS_PRODUCT_OBJECT_TYPE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_CORE_ADDRESS_FEDERAL_STATE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_CORE_ADDRESS_FEDERAL_STATE_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_CORE_ADDRESS_FEDERAL_STATE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_CORE_ADDRESS_FEDERAL_STATE_RSP

GO

CREATE TYPE [dbo].TVP_EMP_CORE_ADDRESS_FEDERAL_STATE_RSP AS TABLE (
[ID] int  NOT NULL,
[EMP_CORE_ADDRESS_ID] int  NOT NULL,
[ORD_FEDERAL_STATE_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_CORE_ADDRESS_FEDERAL_STATE_RSP
@source as dbo.TVP_EMP_CORE_ADDRESS_FEDERAL_STATE_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_CORE_ADDRESS_FEDERAL_STATE_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EMP_CORE_ADDRESS_ID] = SOURCE.[EMP_CORE_ADDRESS_ID], TARGET.[ORD_FEDERAL_STATE_ID] = SOURCE.[ORD_FEDERAL_STATE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[EMP_CORE_ADDRESS_ID], [ORD_FEDERAL_STATE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[EMP_CORE_ADDRESS_ID], SOURCE.[ORD_FEDERAL_STATE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_CORE_ADDRESS_RECOGNITION_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_CORE_ADDRESS_RECOGNITION_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_CORE_ADDRESS_RECOGNITION_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_CORE_ADDRESS_RECOGNITION_RSP

GO

CREATE TYPE [dbo].TVP_EMP_CORE_ADDRESS_RECOGNITION_RSP AS TABLE (
[ID] int  NOT NULL,
[EMP_CORE_ADDRESS_ID] int  NOT NULL,
[ORD_RECOGNITION_ID] int  NOT NULL,
[SEARCH_WORD] nvarchar (100) NULL,
[INSPECTION_LOCATION_NUMBER] varchar (100) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[NEXT_TECHNICAL_INSPECTION_DATE] datetime2 (3) NULL,
[BRAKE_STATE_INSPECTION_DATE] datetime2 (3) NULL,
[HEADLIGHT_DEVICE_ADJUST_DATE] datetime2 (3) NULL,
[ORD_CUSTOMER_ID] int  NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_CORE_ADDRESS_RECOGNITION_RSP
@source as dbo.TVP_EMP_CORE_ADDRESS_RECOGNITION_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_CORE_ADDRESS_RECOGNITION_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EMP_CORE_ADDRESS_ID] = SOURCE.[EMP_CORE_ADDRESS_ID], TARGET.[ORD_RECOGNITION_ID] = SOURCE.[ORD_RECOGNITION_ID], TARGET.[SEARCH_WORD] = SOURCE.[SEARCH_WORD], TARGET.[INSPECTION_LOCATION_NUMBER] = SOURCE.[INSPECTION_LOCATION_NUMBER], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[NEXT_TECHNICAL_INSPECTION_DATE] = SOURCE.[NEXT_TECHNICAL_INSPECTION_DATE], TARGET.[BRAKE_STATE_INSPECTION_DATE] = SOURCE.[BRAKE_STATE_INSPECTION_DATE], TARGET.[HEADLIGHT_DEVICE_ADJUST_DATE] = SOURCE.[HEADLIGHT_DEVICE_ADJUST_DATE], TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[EMP_CORE_ADDRESS_ID], [ORD_RECOGNITION_ID], [SEARCH_WORD], [INSPECTION_LOCATION_NUMBER], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [NEXT_TECHNICAL_INSPECTION_DATE], [BRAKE_STATE_INSPECTION_DATE], [HEADLIGHT_DEVICE_ADJUST_DATE], [ORD_CUSTOMER_ID]
) VALUES (
SOURCE.[EMP_CORE_ADDRESS_ID], SOURCE.[ORD_RECOGNITION_ID], SOURCE.[SEARCH_WORD], SOURCE.[INSPECTION_LOCATION_NUMBER], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[NEXT_TECHNICAL_INSPECTION_DATE], SOURCE.[BRAKE_STATE_INSPECTION_DATE], SOURCE.[HEADLIGHT_DEVICE_ADJUST_DATE], SOURCE.[ORD_CUSTOMER_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_EMPLOYEE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_EMPLOYEE

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_EMPLOYEE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_EMPLOYEE

GO

CREATE TYPE [dbo].TVP_EMP_EMPLOYEE AS TABLE (
[ID] int  NOT NULL,
[PERSONAL_NUMBER] varchar (10) NOT NULL,
[DOMAIN] nvarchar (90) NULL,
[USER_NAME] nvarchar (50) NULL,
[WINDOWS_USER_NAME] nvarchar (90) NULL,
[IS_SSO_ALLOWED] bit  NULL,
[IS_PASSWORD_LOGIN_ALLOWED] bit  NULL,
[IS_EMERGENCY_LOGIN_ALLOWED] bit  NULL,
[EMP_CORE_ADDRESS_ID] int  NULL,
[NAME] nvarchar (90) NULL,
[MIDDLE_NAME] nvarchar (90) NULL,
[LAST_NAME] nvarchar (90) NULL,
[COMMENT] nvarchar (90) NULL,
[SEX_TYPE] int  NULL,
[TITLE] nvarchar (90) NULL,
[BIRTHDATE] date  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_EMPLOYEE
@source as dbo.TVP_EMP_EMPLOYEE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_EMPLOYEE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[PERSONAL_NUMBER] = SOURCE.[PERSONAL_NUMBER], TARGET.[DOMAIN] = SOURCE.[DOMAIN], TARGET.[USER_NAME] = SOURCE.[USER_NAME], TARGET.[WINDOWS_USER_NAME] = SOURCE.[WINDOWS_USER_NAME], TARGET.[IS_SSO_ALLOWED] = SOURCE.[IS_SSO_ALLOWED], TARGET.[IS_PASSWORD_LOGIN_ALLOWED] = SOURCE.[IS_PASSWORD_LOGIN_ALLOWED], TARGET.[IS_EMERGENCY_LOGIN_ALLOWED] = SOURCE.[IS_EMERGENCY_LOGIN_ALLOWED], TARGET.[EMP_CORE_ADDRESS_ID] = SOURCE.[EMP_CORE_ADDRESS_ID], TARGET.[NAME] = SOURCE.[NAME], TARGET.[MIDDLE_NAME] = SOURCE.[MIDDLE_NAME], TARGET.[LAST_NAME] = SOURCE.[LAST_NAME], TARGET.[COMMENT] = SOURCE.[COMMENT], TARGET.[SEX_TYPE] = SOURCE.[SEX_TYPE], TARGET.[TITLE] = SOURCE.[TITLE], TARGET.[BIRTHDATE] = SOURCE.[BIRTHDATE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[PERSONAL_NUMBER], [DOMAIN], [USER_NAME], [WINDOWS_USER_NAME], [IS_SSO_ALLOWED], [IS_PASSWORD_LOGIN_ALLOWED], [IS_EMERGENCY_LOGIN_ALLOWED], [EMP_CORE_ADDRESS_ID], [NAME], [MIDDLE_NAME], [LAST_NAME], [COMMENT], [SEX_TYPE], [TITLE], [BIRTHDATE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[PERSONAL_NUMBER], SOURCE.[DOMAIN], SOURCE.[USER_NAME], SOURCE.[WINDOWS_USER_NAME], SOURCE.[IS_SSO_ALLOWED], SOURCE.[IS_PASSWORD_LOGIN_ALLOWED], SOURCE.[IS_EMERGENCY_LOGIN_ALLOWED], SOURCE.[EMP_CORE_ADDRESS_ID], SOURCE.[NAME], SOURCE.[MIDDLE_NAME], SOURCE.[LAST_NAME], SOURCE.[COMMENT], SOURCE.[SEX_TYPE], SOURCE.[TITLE], SOURCE.[BIRTHDATE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_CORE_DATA_PRODUCT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_CORE_DATA_PRODUCT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_CORE_DATA_PRODUCT

GO

CREATE TYPE [dbo].TVP_INS_CORE_DATA_PRODUCT AS TABLE (
[ID] int  NOT NULL,
[PRODUCT_NUMBER] varchar (50) NOT NULL,
[IS_NEXT_INSPECTION_PRODUCT] bit  NULL,
[IS_PROVISION_COST_MAY_BE_CALCULATED] bit  NULL,
[PRICE_REPORT_REQUIRED] bit  NULL,
[INS_PRODUCT_TYPE_ID] int  NOT NULL,
[INS_PRODUCT_OBJECT_CLASS_ID] int  NULL,
[INS_PRODUCT_OBJECT_TYPE_ID] int  NULL,
[INS_PRODUCT_MATERIAL_GROUP_ID] int  NULL,
[INS_PRODUCT_CLASS_ID] int  NULL,
[INS_CORE_DATA_PRODUCT_GROUP_ID] int  NULL,
[IS_INGENER] bit  NULL,
[IS_PRODUCTIVE] int  NOT NULL,
[IS_KM_GELD] bit  NOT NULL,
[IS_OTHER_MATERIAL] bit  NOT NULL,
[IS_TRIP] bit  NOT NULL,
[CREATE_DATE] datetime2 (3) NULL,
[CHANGE_DATE] datetime2 (3) NULL,
[DELETE_DATE] datetime2 (3) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[REUSAGE_TYPE] int  NOT NULL,
[INS_TAX_CODE_ID] int  NULL,
[OLD_PRODUCT_NUMBER] varchar (50) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT
@source as dbo.TVP_INS_CORE_DATA_PRODUCT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_CORE_DATA_PRODUCT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[PRODUCT_NUMBER] = SOURCE.[PRODUCT_NUMBER], TARGET.[IS_NEXT_INSPECTION_PRODUCT] = SOURCE.[IS_NEXT_INSPECTION_PRODUCT], TARGET.[IS_PROVISION_COST_MAY_BE_CALCULATED] = SOURCE.[IS_PROVISION_COST_MAY_BE_CALCULATED], TARGET.[PRICE_REPORT_REQUIRED] = SOURCE.[PRICE_REPORT_REQUIRED], TARGET.[INS_PRODUCT_TYPE_ID] = SOURCE.[INS_PRODUCT_TYPE_ID], TARGET.[INS_PRODUCT_OBJECT_CLASS_ID] = SOURCE.[INS_PRODUCT_OBJECT_CLASS_ID], TARGET.[INS_PRODUCT_OBJECT_TYPE_ID] = SOURCE.[INS_PRODUCT_OBJECT_TYPE_ID], TARGET.[INS_PRODUCT_MATERIAL_GROUP_ID] = SOURCE.[INS_PRODUCT_MATERIAL_GROUP_ID], TARGET.[INS_PRODUCT_CLASS_ID] = SOURCE.[INS_PRODUCT_CLASS_ID], TARGET.[INS_CORE_DATA_PRODUCT_GROUP_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_GROUP_ID], TARGET.[IS_INGENER] = SOURCE.[IS_INGENER], TARGET.[IS_PRODUCTIVE] = SOURCE.[IS_PRODUCTIVE], TARGET.[IS_KM_GELD] = SOURCE.[IS_KM_GELD], TARGET.[IS_OTHER_MATERIAL] = SOURCE.[IS_OTHER_MATERIAL], TARGET.[IS_TRIP] = SOURCE.[IS_TRIP], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[REUSAGE_TYPE] = SOURCE.[REUSAGE_TYPE], TARGET.[INS_TAX_CODE_ID] = SOURCE.[INS_TAX_CODE_ID], TARGET.[OLD_PRODUCT_NUMBER] = SOURCE.[OLD_PRODUCT_NUMBER]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[PRODUCT_NUMBER], [IS_NEXT_INSPECTION_PRODUCT], [IS_PROVISION_COST_MAY_BE_CALCULATED], [PRICE_REPORT_REQUIRED], [INS_PRODUCT_TYPE_ID], [INS_PRODUCT_OBJECT_CLASS_ID], [INS_PRODUCT_OBJECT_TYPE_ID], [INS_PRODUCT_MATERIAL_GROUP_ID], [INS_PRODUCT_CLASS_ID], [INS_CORE_DATA_PRODUCT_GROUP_ID], [IS_INGENER], [IS_PRODUCTIVE], [IS_KM_GELD], [IS_OTHER_MATERIAL], [IS_TRIP], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [REUSAGE_TYPE], [INS_TAX_CODE_ID], [OLD_PRODUCT_NUMBER]
) VALUES (
SOURCE.[PRODUCT_NUMBER], SOURCE.[IS_NEXT_INSPECTION_PRODUCT], SOURCE.[IS_PROVISION_COST_MAY_BE_CALCULATED], SOURCE.[PRICE_REPORT_REQUIRED], SOURCE.[INS_PRODUCT_TYPE_ID], SOURCE.[INS_PRODUCT_OBJECT_CLASS_ID], SOURCE.[INS_PRODUCT_OBJECT_TYPE_ID], SOURCE.[INS_PRODUCT_MATERIAL_GROUP_ID], SOURCE.[INS_PRODUCT_CLASS_ID], SOURCE.[INS_CORE_DATA_PRODUCT_GROUP_ID], SOURCE.[IS_INGENER], SOURCE.[IS_PRODUCTIVE], SOURCE.[IS_KM_GELD], SOURCE.[IS_OTHER_MATERIAL], SOURCE.[IS_TRIP], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[REUSAGE_TYPE], SOURCE.[INS_TAX_CODE_ID], SOURCE.[OLD_PRODUCT_NUMBER]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_NEXT_INSPECTION_PRODUCT_CLASS_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_NEXT_INSPECTION_PRODUCT_CLASS_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_NEXT_INSPECTION_PRODUCT_CLASS_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_NEXT_INSPECTION_PRODUCT_CLASS_RSP

GO

CREATE TYPE [dbo].TVP_INS_NEXT_INSPECTION_PRODUCT_CLASS_RSP AS TABLE (
[INS_NEXT_INSPECTION_ID] int  NOT NULL,
[INS_PRODUCT_CLASS_ID] int  NOT NULL,
[INS_SEVERITY_TYPE_ID] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ID] int  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_NEXT_INSPECTION_PRODUCT_CLASS_RSP
@source as dbo.TVP_INS_NEXT_INSPECTION_PRODUCT_CLASS_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_NEXT_INSPECTION_PRODUCT_CLASS_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_NEXT_INSPECTION_ID] = SOURCE.[INS_NEXT_INSPECTION_ID], TARGET.[INS_PRODUCT_CLASS_ID] = SOURCE.[INS_PRODUCT_CLASS_ID], TARGET.[INS_SEVERITY_TYPE_ID] = SOURCE.[INS_SEVERITY_TYPE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_NEXT_INSPECTION_ID], [INS_PRODUCT_CLASS_ID], [INS_SEVERITY_TYPE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_NEXT_INSPECTION_ID], SOURCE.[INS_PRODUCT_CLASS_ID], SOURCE.[INS_SEVERITY_TYPE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_CLASS_AVAILABLE_INSPECTION_STEP_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS_AVAILABLE_INSPECTION_STEP_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_CLASS_AVAILABLE_INSPECTION_STEP_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_CLASS_AVAILABLE_INSPECTION_STEP_RSP

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_CLASS_AVAILABLE_INSPECTION_STEP_RSP AS TABLE (
[ID] int  NOT NULL,
[INS_PRODUCT_CLASS_ID] int  NOT NULL,
[INS_AVAILABLE_INSPECTION_STEP_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS_AVAILABLE_INSPECTION_STEP_RSP
@source as dbo.TVP_INS_PRODUCT_CLASS_AVAILABLE_INSPECTION_STEP_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_CLASS_AVAILABLE_INSPECTION_STEP_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_PRODUCT_CLASS_ID] = SOURCE.[INS_PRODUCT_CLASS_ID], TARGET.[INS_AVAILABLE_INSPECTION_STEP_ID] = SOURCE.[INS_AVAILABLE_INSPECTION_STEP_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_PRODUCT_CLASS_ID], [INS_AVAILABLE_INSPECTION_STEP_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_PRODUCT_CLASS_ID], SOURCE.[INS_AVAILABLE_INSPECTION_STEP_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_CLASS_DEFECT_IDENTIFICATION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS_DEFECT_IDENTIFICATION

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_CLASS_DEFECT_IDENTIFICATION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_CLASS_DEFECT_IDENTIFICATION

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_CLASS_DEFECT_IDENTIFICATION AS TABLE (
[ID] int  NOT NULL,
[INS_PRODUCT_CLASS_ID] int  NOT NULL,
[DEFECT_CATALOG] int  NOT NULL,
[NOTIFICATION_CATALOG] int  NOT NULL,
[SPECIAL_CATALOG] int  NOT NULL,
[SERVICE_TYPE] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS_DEFECT_IDENTIFICATION
@source as dbo.TVP_INS_PRODUCT_CLASS_DEFECT_IDENTIFICATION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_CLASS_DEFECT_IDENTIFICATION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_PRODUCT_CLASS_ID] = SOURCE.[INS_PRODUCT_CLASS_ID], TARGET.[DEFECT_CATALOG] = SOURCE.[DEFECT_CATALOG], TARGET.[NOTIFICATION_CATALOG] = SOURCE.[NOTIFICATION_CATALOG], TARGET.[SPECIAL_CATALOG] = SOURCE.[SPECIAL_CATALOG], TARGET.[SERVICE_TYPE] = SOURCE.[SERVICE_TYPE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_PRODUCT_CLASS_ID], [DEFECT_CATALOG], [NOTIFICATION_CATALOG], [SPECIAL_CATALOG], [SERVICE_TYPE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_PRODUCT_CLASS_ID], SOURCE.[DEFECT_CATALOG], SOURCE.[NOTIFICATION_CATALOG], SOURCE.[SPECIAL_CATALOG], SOURCE.[SERVICE_TYPE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_CLASS_INSPECTION_TEXT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS_INSPECTION_TEXT_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_CLASS_INSPECTION_TEXT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_CLASS_INSPECTION_TEXT_RSP

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_CLASS_INSPECTION_TEXT_RSP AS TABLE (
[ID] int  NOT NULL,
[INS_PRODUCT_CLASS_ID] int  NOT NULL,
[CHILD_PRODUCT_CLASS_ID] int  NULL,
[INS_AVAILABLE_INSPECTION_TEXT_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS_INSPECTION_TEXT_RSP
@source as dbo.TVP_INS_PRODUCT_CLASS_INSPECTION_TEXT_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_CLASS_INSPECTION_TEXT_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_PRODUCT_CLASS_ID] = SOURCE.[INS_PRODUCT_CLASS_ID], TARGET.[CHILD_PRODUCT_CLASS_ID] = SOURCE.[CHILD_PRODUCT_CLASS_ID], TARGET.[INS_AVAILABLE_INSPECTION_TEXT_ID] = SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_PRODUCT_CLASS_ID], [CHILD_PRODUCT_CLASS_ID], [INS_AVAILABLE_INSPECTION_TEXT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[INS_PRODUCT_CLASS_ID], SOURCE.[CHILD_PRODUCT_CLASS_ID], SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_CLASS_LABEL_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS_LABEL_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_CLASS_LABEL_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_CLASS_LABEL_RSP

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_CLASS_LABEL_RSP AS TABLE (
[INS_PRODUCT_CLASS_ID] int  NOT NULL,
[INS_AVAILABLE_INSPECTION_TEXT_ID] int  NOT NULL,
[IS_GIVEN] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ID] int  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS_LABEL_RSP
@source as dbo.TVP_INS_PRODUCT_CLASS_LABEL_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_CLASS_LABEL_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_PRODUCT_CLASS_ID] = SOURCE.[INS_PRODUCT_CLASS_ID], TARGET.[INS_AVAILABLE_INSPECTION_TEXT_ID] = SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], TARGET.[IS_GIVEN] = SOURCE.[IS_GIVEN], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_PRODUCT_CLASS_ID], [INS_AVAILABLE_INSPECTION_TEXT_ID], [IS_GIVEN], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_PRODUCT_CLASS_ID], SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], SOURCE.[IS_GIVEN], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_CLASS_RECEIPT_TEXT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS_RECEIPT_TEXT_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_CLASS_RECEIPT_TEXT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_CLASS_RECEIPT_TEXT_RSP

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_CLASS_RECEIPT_TEXT_RSP AS TABLE (
[INS_PRODUCT_CLASS_ID] int  NOT NULL,
[INS_AVAILABLE_INSPECTION_TEXT_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ID] int  NOT NULL,
[USAGE_TYPE] int  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS_RECEIPT_TEXT_RSP
@source as dbo.TVP_INS_PRODUCT_CLASS_RECEIPT_TEXT_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_CLASS_RECEIPT_TEXT_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_PRODUCT_CLASS_ID] = SOURCE.[INS_PRODUCT_CLASS_ID], TARGET.[INS_AVAILABLE_INSPECTION_TEXT_ID] = SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[USAGE_TYPE] = SOURCE.[USAGE_TYPE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_PRODUCT_CLASS_ID], [INS_AVAILABLE_INSPECTION_TEXT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [USAGE_TYPE]
) VALUES (
SOURCE.[INS_PRODUCT_CLASS_ID], SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[USAGE_TYPE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_RESULT_COMBINATION_AVALIABLE_INSPECTION_TEXT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_RESULT_COMBINATION_AVALIABLE_INSPECTION_TEXT_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_RESULT_COMBINATION_AVALIABLE_INSPECTION_TEXT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_RESULT_COMBINATION_AVALIABLE_INSPECTION_TEXT_RSP

GO

CREATE TYPE [dbo].TVP_INS_RESULT_COMBINATION_AVALIABLE_INSPECTION_TEXT_RSP AS TABLE (
[ID] int  NOT NULL,
[INS_PRODUCT_CLASS_ID] int  NULL,
[FINAL_SEVERITY_TYPE_ID] int  NULL,
[INTERMEDIATE_SEVERITY_TYPE_ID] int  NULL,
[LABEL_TEXT_ID] int  NULL,
[IS_NEXT_TERMIN_POSSIBLE] bit  NULL,
[INS_NEXT_INSPECTION_ID] int  NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
[INS_AVAILABLE_INSPECTION_TEXT_ID] int  NOT NULL,
[TEXT_BLOCK] int  NOT NULL,
[TEXT_POSITION] int  NOT NULL,
[CURRENT_EMPLOYEE_TREATMENT] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_RESULT_COMBINATION_AVALIABLE_INSPECTION_TEXT_RSP
@source as dbo.TVP_INS_RESULT_COMBINATION_AVALIABLE_INSPECTION_TEXT_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_RESULT_COMBINATION_AVALIABLE_INSPECTION_TEXT_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_PRODUCT_CLASS_ID] = SOURCE.[INS_PRODUCT_CLASS_ID], TARGET.[FINAL_SEVERITY_TYPE_ID] = SOURCE.[FINAL_SEVERITY_TYPE_ID], TARGET.[INTERMEDIATE_SEVERITY_TYPE_ID] = SOURCE.[INTERMEDIATE_SEVERITY_TYPE_ID], TARGET.[LABEL_TEXT_ID] = SOURCE.[LABEL_TEXT_ID], TARGET.[IS_NEXT_TERMIN_POSSIBLE] = SOURCE.[IS_NEXT_TERMIN_POSSIBLE], TARGET.[INS_NEXT_INSPECTION_ID] = SOURCE.[INS_NEXT_INSPECTION_ID], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID], TARGET.[INS_AVAILABLE_INSPECTION_TEXT_ID] = SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], TARGET.[TEXT_BLOCK] = SOURCE.[TEXT_BLOCK], TARGET.[TEXT_POSITION] = SOURCE.[TEXT_POSITION], TARGET.[CURRENT_EMPLOYEE_TREATMENT] = SOURCE.[CURRENT_EMPLOYEE_TREATMENT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_PRODUCT_CLASS_ID], [FINAL_SEVERITY_TYPE_ID], [INTERMEDIATE_SEVERITY_TYPE_ID], [LABEL_TEXT_ID], [IS_NEXT_TERMIN_POSSIBLE], [INS_NEXT_INSPECTION_ID], [ORG_ACCOUNTING_AREA_ID], [INS_AVAILABLE_INSPECTION_TEXT_ID], [TEXT_BLOCK], [TEXT_POSITION], [CURRENT_EMPLOYEE_TREATMENT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_PRODUCT_CLASS_ID], SOURCE.[FINAL_SEVERITY_TYPE_ID], SOURCE.[INTERMEDIATE_SEVERITY_TYPE_ID], SOURCE.[LABEL_TEXT_ID], SOURCE.[IS_NEXT_TERMIN_POSSIBLE], SOURCE.[INS_NEXT_INSPECTION_ID], SOURCE.[ORG_ACCOUNTING_AREA_ID], SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], SOURCE.[TEXT_BLOCK], SOURCE.[TEXT_POSITION], SOURCE.[CURRENT_EMPLOYEE_TREATMENT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP

GO

CREATE TYPE [dbo].TVP_INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP AS TABLE (
[INS_SEVERITY_TYPE_ID] int  NOT NULL,
[INS_PRODUCT_CLASS_ID] int  NOT NULL,
[INS_AVAILABLE_INSPECTION_TEXT_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ID] int  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP
@source as dbo.TVP_INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_SEVERITY_TYPE_ID] = SOURCE.[INS_SEVERITY_TYPE_ID], TARGET.[INS_PRODUCT_CLASS_ID] = SOURCE.[INS_PRODUCT_CLASS_ID], TARGET.[INS_AVAILABLE_INSPECTION_TEXT_ID] = SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_SEVERITY_TYPE_ID], [INS_PRODUCT_CLASS_ID], [INS_AVAILABLE_INSPECTION_TEXT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_SEVERITY_TYPE_ID], SOURCE.[INS_PRODUCT_CLASS_ID], SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_SPECIFIC_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_SPECIFIC_DATA

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_SPECIFIC_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_SPECIFIC_DATA

GO

CREATE TYPE [dbo].TVP_INS_SPECIFIC_DATA AS TABLE (
[ID] int  NOT NULL,
[KEY_NAME] nvarchar (50) NOT NULL,
[TYPE] nvarchar (50) NOT NULL,
[MAX_LENGTH] smallint  NULL,
[REGULAR_EXPRESSION] varchar (150) NULL,
[TITLE] nvarchar (50) NOT NULL,
[INS_TEMPLATE_ID] int  NOT NULL,
[RESERVE] int  NULL,
[ORDER_NUM] int  NULL,
[REGION_NAME] nvarchar (50) NULL,
[DEFAULT_VALUE] nvarchar (1024) NULL,
[IS_EDITABLE] bit  NULL,
[GROUP_NAME] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_SPECIFIC_DATA
@source as dbo.TVP_INS_SPECIFIC_DATA READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_SPECIFIC_DATA] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[KEY_NAME] = SOURCE.[KEY_NAME], TARGET.[TYPE] = SOURCE.[TYPE], TARGET.[MAX_LENGTH] = SOURCE.[MAX_LENGTH], TARGET.[REGULAR_EXPRESSION] = SOURCE.[REGULAR_EXPRESSION], TARGET.[TITLE] = SOURCE.[TITLE], TARGET.[INS_TEMPLATE_ID] = SOURCE.[INS_TEMPLATE_ID], TARGET.[RESERVE] = SOURCE.[RESERVE], TARGET.[ORDER_NUM] = SOURCE.[ORDER_NUM], TARGET.[REGION_NAME] = SOURCE.[REGION_NAME], TARGET.[DEFAULT_VALUE] = SOURCE.[DEFAULT_VALUE], TARGET.[IS_EDITABLE] = SOURCE.[IS_EDITABLE], TARGET.[GROUP_NAME] = SOURCE.[GROUP_NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[KEY_NAME], [TYPE], [MAX_LENGTH], [REGULAR_EXPRESSION], [TITLE], [INS_TEMPLATE_ID], [RESERVE], [ORDER_NUM], [REGION_NAME], [DEFAULT_VALUE], [IS_EDITABLE], [GROUP_NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[KEY_NAME], SOURCE.[TYPE], SOURCE.[MAX_LENGTH], SOURCE.[REGULAR_EXPRESSION], SOURCE.[TITLE], SOURCE.[INS_TEMPLATE_ID], SOURCE.[RESERVE], SOURCE.[ORDER_NUM], SOURCE.[REGION_NAME], SOURCE.[DEFAULT_VALUE], SOURCE.[IS_EDITABLE], SOURCE.[GROUP_NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_UNIT_CODE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_UNIT_CODE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_UNIT_CODE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_UNIT_CODE

GO

CREATE TYPE [dbo].TVP_INS_UNIT_CODE AS TABLE (
[ID] int  NOT NULL,
[ORG_ACCOUNTING_AREA_ID] int  NOT NULL,
[ORD_FEDERAL_STATE_ID] int  NOT NULL,
[ORD_AREA_OF_WORK_ID] int  NOT NULL,
[UNIT_CODE] nvarchar (8) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] nvarchar (10) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_UNIT_CODE
@source as dbo.TVP_INS_UNIT_CODE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_UNIT_CODE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID], TARGET.[ORD_FEDERAL_STATE_ID] = SOURCE.[ORD_FEDERAL_STATE_ID], TARGET.[ORD_AREA_OF_WORK_ID] = SOURCE.[ORD_AREA_OF_WORK_ID], TARGET.[UNIT_CODE] = SOURCE.[UNIT_CODE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORG_ACCOUNTING_AREA_ID], [ORD_FEDERAL_STATE_ID], [ORD_AREA_OF_WORK_ID], [UNIT_CODE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORG_ACCOUNTING_AREA_ID], SOURCE.[ORD_FEDERAL_STATE_ID], SOURCE.[ORD_AREA_OF_WORK_ID], SOURCE.[UNIT_CODE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_VALID_PERIOD_PRODUCT_CLASS_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_VALID_PERIOD_PRODUCT_CLASS_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_VALID_PERIOD_PRODUCT_CLASS_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_VALID_PERIOD_PRODUCT_CLASS_RSP

GO

CREATE TYPE [dbo].TVP_INS_VALID_PERIOD_PRODUCT_CLASS_RSP AS TABLE (
[INS_VALID_PERIOD_ID] int  NOT NULL,
[INS_PRODUCT_CLASS_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ID] int  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_VALID_PERIOD_PRODUCT_CLASS_RSP
@source as dbo.TVP_INS_VALID_PERIOD_PRODUCT_CLASS_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_VALID_PERIOD_PRODUCT_CLASS_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_VALID_PERIOD_ID] = SOURCE.[INS_VALID_PERIOD_ID], TARGET.[INS_PRODUCT_CLASS_ID] = SOURCE.[INS_PRODUCT_CLASS_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_VALID_PERIOD_ID], [INS_PRODUCT_CLASS_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_VALID_PERIOD_ID], SOURCE.[INS_PRODUCT_CLASS_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_CUSTOMER_ADDRESS_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_CUSTOMER_ADDRESS_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_CUSTOMER_ADDRESS_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_CUSTOMER_ADDRESS_RSP

GO

CREATE TYPE [dbo].TVP_ORD_CUSTOMER_ADDRESS_RSP AS TABLE (
[ID] int  NOT NULL,
[ORD_CUSTOMER_ID] int  NOT NULL,
[EMP_CORE_ADDRESS_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_CUSTOMER_ADDRESS_RSP
@source as dbo.TVP_ORD_CUSTOMER_ADDRESS_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_CUSTOMER_ADDRESS_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID], TARGET.[EMP_CORE_ADDRESS_ID] = SOURCE.[EMP_CORE_ADDRESS_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORD_CUSTOMER_ID], [EMP_CORE_ADDRESS_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORD_CUSTOMER_ID], SOURCE.[EMP_CORE_ADDRESS_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_RECOGNITION_AREA_OF_WORK_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_RECOGNITION_AREA_OF_WORK_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_RECOGNITION_AREA_OF_WORK_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_RECOGNITION_AREA_OF_WORK_RSP

GO

CREATE TYPE [dbo].TVP_ORD_RECOGNITION_AREA_OF_WORK_RSP AS TABLE (
[ID] int  NOT NULL,
[ORD_RECOGNITION_ID] int  NOT NULL,
[ORD_AREA_OF_WORK_ID] int  NOT NULL,
[PRIORITY] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_RECOGNITION_AREA_OF_WORK_RSP
@source as dbo.TVP_ORD_RECOGNITION_AREA_OF_WORK_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_RECOGNITION_AREA_OF_WORK_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_RECOGNITION_ID] = SOURCE.[ORD_RECOGNITION_ID], TARGET.[ORD_AREA_OF_WORK_ID] = SOURCE.[ORD_AREA_OF_WORK_ID], TARGET.[PRIORITY] = SOURCE.[PRIORITY], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORD_RECOGNITION_ID], [ORD_AREA_OF_WORK_ID], [PRIORITY], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORD_RECOGNITION_ID], SOURCE.[ORD_AREA_OF_WORK_ID], SOURCE.[PRIORITY], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_LOCATION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_LOCATION

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_LOCATION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_LOCATION

GO

CREATE TYPE [dbo].TVP_SYS_LOCATION AS TABLE (
[ID] int  NOT NULL,
[LOCATION_CODE] nvarchar (10) NOT NULL,
[LOCATION_NAME] nvarchar (100) NOT NULL,
[SYS_COUNTRY_ID] int  NULL,
[ORD_FEDERAL_STATE_ID] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_LOCATION
@source as dbo.TVP_SYS_LOCATION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_LOCATION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[LOCATION_CODE] = SOURCE.[LOCATION_CODE], TARGET.[LOCATION_NAME] = SOURCE.[LOCATION_NAME], TARGET.[SYS_COUNTRY_ID] = SOURCE.[SYS_COUNTRY_ID], TARGET.[ORD_FEDERAL_STATE_ID] = SOURCE.[ORD_FEDERAL_STATE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[LOCATION_CODE], [LOCATION_NAME], [SYS_COUNTRY_ID], [ORD_FEDERAL_STATE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[LOCATION_CODE], SOURCE.[LOCATION_NAME], SOURCE.[SYS_COUNTRY_ID], SOURCE.[ORD_FEDERAL_STATE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_CASH_PERMISSION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_CASH_PERMISSION

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_CASH_PERMISSION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_CASH_PERMISSION

GO

CREATE TYPE [dbo].TVP_EMP_CASH_PERMISSION AS TABLE (
[ID] int  NOT NULL,
[EMP_EMPLOYEE_ID] int  NULL,
[MAX_AMOUNT_PER_PAYOUT] money  NULL,
[MAX_PAYOUT_AMOUNT_PER_DAY] money  NULL,
[COMMENT] nvarchar (150) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_CASH_PERMISSION
@source as dbo.TVP_EMP_CASH_PERMISSION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_CASH_PERMISSION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[MAX_AMOUNT_PER_PAYOUT] = SOURCE.[MAX_AMOUNT_PER_PAYOUT], TARGET.[MAX_PAYOUT_AMOUNT_PER_DAY] = SOURCE.[MAX_PAYOUT_AMOUNT_PER_DAY], TARGET.[COMMENT] = SOURCE.[COMMENT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[EMP_EMPLOYEE_ID], [MAX_AMOUNT_PER_PAYOUT], [MAX_PAYOUT_AMOUNT_PER_DAY], [COMMENT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[MAX_AMOUNT_PER_PAYOUT], SOURCE.[MAX_PAYOUT_AMOUNT_PER_DAY], SOURCE.[COMMENT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_EMPLOYEE_INFO_TYPE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_INFO_TYPE_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_EMPLOYEE_INFO_TYPE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_EMPLOYEE_INFO_TYPE_RSP

GO

CREATE TYPE [dbo].TVP_EMP_EMPLOYEE_INFO_TYPE_RSP AS TABLE (
[ID] int  NOT NULL,
[EMP_EMPLOYEE_ID] int  NOT NULL,
[EMP_EMPLOYEE_INFO_TYPE_ID] int  NOT NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
[TEXT_VALUE] nvarchar (50) NULL,
[NUMBER_VALUE] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_INFO_TYPE_RSP
@source as dbo.TVP_EMP_EMPLOYEE_INFO_TYPE_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_EMPLOYEE_INFO_TYPE_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[EMP_EMPLOYEE_INFO_TYPE_ID] = SOURCE.[EMP_EMPLOYEE_INFO_TYPE_ID], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID], TARGET.[TEXT_VALUE] = SOURCE.[TEXT_VALUE], TARGET.[NUMBER_VALUE] = SOURCE.[NUMBER_VALUE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[EMP_EMPLOYEE_ID], [EMP_EMPLOYEE_INFO_TYPE_ID], [ORG_ACCOUNTING_AREA_ID], [TEXT_VALUE], [NUMBER_VALUE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [FROM_DATE], [TO_DATE], [SOURCE]
) VALUES (
SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[EMP_EMPLOYEE_INFO_TYPE_ID], SOURCE.[ORG_ACCOUNTING_AREA_ID], SOURCE.[TEXT_VALUE], SOURCE.[NUMBER_VALUE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_EMPLOYEE_ORG_COST_CENTER_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_ORG_COST_CENTER_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_EMPLOYEE_ORG_COST_CENTER_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_EMPLOYEE_ORG_COST_CENTER_RSP

GO

CREATE TYPE [dbo].TVP_EMP_EMPLOYEE_ORG_COST_CENTER_RSP AS TABLE (
[ID] int  NOT NULL,
[EMP_EMPLOYEE_ID] int  NOT NULL,
[ORG_COST_CENTER_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] nvarchar (10) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_ORG_COST_CENTER_RSP
@source as dbo.TVP_EMP_EMPLOYEE_ORG_COST_CENTER_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_EMPLOYEE_ORG_COST_CENTER_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[ORG_COST_CENTER_ID] = SOURCE.[ORG_COST_CENTER_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[EMP_EMPLOYEE_ID], [ORG_COST_CENTER_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[ORG_COST_CENTER_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_EMPLOYEE_SYS_ROLE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_SYS_ROLE_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_EMPLOYEE_SYS_ROLE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_EMPLOYEE_SYS_ROLE_RSP

GO

CREATE TYPE [dbo].TVP_EMP_EMPLOYEE_SYS_ROLE_RSP AS TABLE (
[ID] int  NOT NULL,
[EMP_EMPLOYEE_ID] int  NOT NULL,
[SYS_ROLE_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_SYS_ROLE_RSP
@source as dbo.TVP_EMP_EMPLOYEE_SYS_ROLE_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_EMPLOYEE_SYS_ROLE_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[SYS_ROLE_ID] = SOURCE.[SYS_ROLE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[EMP_EMPLOYEE_ID], [SYS_ROLE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[SYS_ROLE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_EMPLOYEE_TOP_EMPLOYEE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_TOP_EMPLOYEE_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_EMPLOYEE_TOP_EMPLOYEE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_EMPLOYEE_TOP_EMPLOYEE_RSP

GO

CREATE TYPE [dbo].TVP_EMP_EMPLOYEE_TOP_EMPLOYEE_RSP AS TABLE (
[ID] int  NOT NULL,
[EMP_EMPLOYEE_ID] int  NOT NULL,
[TOP_EMPLOYEE_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] nvarchar (10) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_TOP_EMPLOYEE_RSP
@source as dbo.TVP_EMP_EMPLOYEE_TOP_EMPLOYEE_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_EMPLOYEE_TOP_EMPLOYEE_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[TOP_EMPLOYEE_ID] = SOURCE.[TOP_EMPLOYEE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[EMP_EMPLOYEE_ID], [TOP_EMPLOYEE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[TOP_EMPLOYEE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_CORE_DATA_PRODUCT_ADDITIONAL_PRODUCT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_ADDITIONAL_PRODUCT_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_CORE_DATA_PRODUCT_ADDITIONAL_PRODUCT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_CORE_DATA_PRODUCT_ADDITIONAL_PRODUCT_RSP

GO

CREATE TYPE [dbo].TVP_INS_CORE_DATA_PRODUCT_ADDITIONAL_PRODUCT_RSP AS TABLE (
[ID] int  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NOT NULL,
[ADDITIONAL_PRODUCT_ID] int  NOT NULL,
[INS_PRODUCT_COMBINATION_TYPE_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_ADDITIONAL_PRODUCT_RSP
@source as dbo.TVP_INS_CORE_DATA_PRODUCT_ADDITIONAL_PRODUCT_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_CORE_DATA_PRODUCT_ADDITIONAL_PRODUCT_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[ADDITIONAL_PRODUCT_ID] = SOURCE.[ADDITIONAL_PRODUCT_ID], TARGET.[INS_PRODUCT_COMBINATION_TYPE_ID] = SOURCE.[INS_PRODUCT_COMBINATION_TYPE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_CORE_DATA_PRODUCT_ID], [ADDITIONAL_PRODUCT_ID], [INS_PRODUCT_COMBINATION_TYPE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[ADDITIONAL_PRODUCT_ID], SOURCE.[INS_PRODUCT_COMBINATION_TYPE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_CORE_DATA_PRODUCT_EXPIRATION_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_EXPIRATION_INFO

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_CORE_DATA_PRODUCT_EXPIRATION_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_CORE_DATA_PRODUCT_EXPIRATION_INFO

GO

CREATE TYPE [dbo].TVP_INS_CORE_DATA_PRODUCT_EXPIRATION_INFO AS TABLE (
[ID] int  NOT NULL,
[TIME_SPAN] int  NOT NULL,
[PERCENT] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NOT NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
[ORD_AREA_OF_WORK_ID] int  NULL,
[NECESSITY_TYPE] int  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_EXPIRATION_INFO
@source as dbo.TVP_INS_CORE_DATA_PRODUCT_EXPIRATION_INFO READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_CORE_DATA_PRODUCT_EXPIRATION_INFO] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[TIME_SPAN] = SOURCE.[TIME_SPAN], TARGET.[PERCENT] = SOURCE.[PERCENT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID], TARGET.[ORD_AREA_OF_WORK_ID] = SOURCE.[ORD_AREA_OF_WORK_ID], TARGET.[NECESSITY_TYPE] = SOURCE.[NECESSITY_TYPE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[TIME_SPAN], [PERCENT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [DESCRIPTION], [INS_CORE_DATA_PRODUCT_ID], [ORG_ACCOUNTING_AREA_ID], [ORD_AREA_OF_WORK_ID], [NECESSITY_TYPE]
) VALUES (
SOURCE.[TIME_SPAN], SOURCE.[PERCENT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[DESCRIPTION], SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[ORG_ACCOUNTING_AREA_ID], SOURCE.[ORD_AREA_OF_WORK_ID], SOURCE.[NECESSITY_TYPE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_CORE_DATA_PRODUCT_INSPECTION_LOCATION_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_INSPECTION_LOCATION_INFO

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_CORE_DATA_PRODUCT_INSPECTION_LOCATION_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_CORE_DATA_PRODUCT_INSPECTION_LOCATION_INFO

GO

CREATE TYPE [dbo].TVP_INS_CORE_DATA_PRODUCT_INSPECTION_LOCATION_INFO AS TABLE (
[ID] int  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NOT NULL,
[ORD_FEDERAL_STATE_ID] int  NOT NULL,
[ORD_AREA_OF_WORK_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
[IS_ENABLED] bit  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_INSPECTION_LOCATION_INFO
@source as dbo.TVP_INS_CORE_DATA_PRODUCT_INSPECTION_LOCATION_INFO READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_CORE_DATA_PRODUCT_INSPECTION_LOCATION_INFO] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[ORD_FEDERAL_STATE_ID] = SOURCE.[ORD_FEDERAL_STATE_ID], TARGET.[ORD_AREA_OF_WORK_ID] = SOURCE.[ORD_AREA_OF_WORK_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID], TARGET.[IS_ENABLED] = SOURCE.[IS_ENABLED]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_CORE_DATA_PRODUCT_ID], [ORD_FEDERAL_STATE_ID], [ORD_AREA_OF_WORK_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [ORG_ACCOUNTING_AREA_ID], [IS_ENABLED]
) VALUES (
SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[ORD_FEDERAL_STATE_ID], SOURCE.[ORD_AREA_OF_WORK_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[ORG_ACCOUNTING_AREA_ID], SOURCE.[IS_ENABLED]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_CORE_DATA_PRODUCT_LOCALIZATION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_LOCALIZATION

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_CORE_DATA_PRODUCT_LOCALIZATION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_CORE_DATA_PRODUCT_LOCALIZATION

GO

CREATE TYPE [dbo].TVP_INS_CORE_DATA_PRODUCT_LOCALIZATION AS TABLE (
[ID] int  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NOT NULL,
[SYS_LANGUAGE_ID] int  NOT NULL,
[PRODUCT_NAME] nvarchar (250) NOT NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_LOCALIZATION
@source as dbo.TVP_INS_CORE_DATA_PRODUCT_LOCALIZATION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_CORE_DATA_PRODUCT_LOCALIZATION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[SYS_LANGUAGE_ID] = SOURCE.[SYS_LANGUAGE_ID], TARGET.[PRODUCT_NAME] = SOURCE.[PRODUCT_NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_CORE_DATA_PRODUCT_ID], [SYS_LANGUAGE_ID], [PRODUCT_NAME], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[SYS_LANGUAGE_ID], SOURCE.[PRODUCT_NAME], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_CORE_DATA_PRODUCT_PFP_POSITION_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_PFP_POSITION_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_CORE_DATA_PRODUCT_PFP_POSITION_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_CORE_DATA_PRODUCT_PFP_POSITION_RSP

GO

CREATE TYPE [dbo].TVP_INS_CORE_DATA_PRODUCT_PFP_POSITION_RSP AS TABLE (
[ID] int  NOT NULL,
[INS_PFP_POSITION_ID] int  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_PFP_POSITION_RSP
@source as dbo.TVP_INS_CORE_DATA_PRODUCT_PFP_POSITION_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_CORE_DATA_PRODUCT_PFP_POSITION_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_PFP_POSITION_ID] = SOURCE.[INS_PFP_POSITION_ID], TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_PFP_POSITION_ID], [INS_CORE_DATA_PRODUCT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_PFP_POSITION_ID], SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_CORE_DATA_PRODUCT_PFP_VEHICLE_TYPE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_PFP_VEHICLE_TYPE_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_CORE_DATA_PRODUCT_PFP_VEHICLE_TYPE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_CORE_DATA_PRODUCT_PFP_VEHICLE_TYPE_RSP

GO

CREATE TYPE [dbo].TVP_INS_CORE_DATA_PRODUCT_PFP_VEHICLE_TYPE_RSP AS TABLE (
[INS_CORE_DATA_PRODUCT_ID] int  NOT NULL,
[INS_PFP_VEHICLE_TYPE_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ID] int  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_PFP_VEHICLE_TYPE_RSP
@source as dbo.TVP_INS_CORE_DATA_PRODUCT_PFP_VEHICLE_TYPE_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_CORE_DATA_PRODUCT_PFP_VEHICLE_TYPE_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[INS_PFP_VEHICLE_TYPE_ID] = SOURCE.[INS_PFP_VEHICLE_TYPE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_CORE_DATA_PRODUCT_ID], [INS_PFP_VEHICLE_TYPE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[INS_PFP_VEHICLE_TYPE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_CORE_DATA_PRODUCT_RECEIPT_TEXT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_RECEIPT_TEXT_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_CORE_DATA_PRODUCT_RECEIPT_TEXT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_CORE_DATA_PRODUCT_RECEIPT_TEXT_RSP

GO

CREATE TYPE [dbo].TVP_INS_CORE_DATA_PRODUCT_RECEIPT_TEXT_RSP AS TABLE (
[ID] int  NOT NULL,
[INS_AVAILABLE_INSPECTION_TEXT_ID] int  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[USAGE_TYPE] int  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_CORE_DATA_PRODUCT_RECEIPT_TEXT_RSP
@source as dbo.TVP_INS_CORE_DATA_PRODUCT_RECEIPT_TEXT_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_CORE_DATA_PRODUCT_RECEIPT_TEXT_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_AVAILABLE_INSPECTION_TEXT_ID] = SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[USAGE_TYPE] = SOURCE.[USAGE_TYPE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_AVAILABLE_INSPECTION_TEXT_ID], [INS_CORE_DATA_PRODUCT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [USAGE_TYPE]
) VALUES (
SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[USAGE_TYPE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_CLASS_SUMMARY_FIELD_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS_SUMMARY_FIELD_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_CLASS_SUMMARY_FIELD_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_CLASS_SUMMARY_FIELD_RSP

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_CLASS_SUMMARY_FIELD_RSP AS TABLE (
[ID] int  NOT NULL,
[INS_PRODUCT_CLASS_ID] int  NOT NULL,
[INS_SUMMARY_FIELD_ID] int  NOT NULL,
[INS_PRODUCT_OBJECT_TYPE_ID] int  NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_CLASS_SUMMARY_FIELD_RSP
@source as dbo.TVP_INS_PRODUCT_CLASS_SUMMARY_FIELD_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_CLASS_SUMMARY_FIELD_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_PRODUCT_CLASS_ID] = SOURCE.[INS_PRODUCT_CLASS_ID], TARGET.[INS_SUMMARY_FIELD_ID] = SOURCE.[INS_SUMMARY_FIELD_ID], TARGET.[INS_PRODUCT_OBJECT_TYPE_ID] = SOURCE.[INS_PRODUCT_OBJECT_TYPE_ID], TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_PRODUCT_CLASS_ID], [INS_SUMMARY_FIELD_ID], [INS_PRODUCT_OBJECT_TYPE_ID], [INS_CORE_DATA_PRODUCT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_PRODUCT_CLASS_ID], SOURCE.[INS_SUMMARY_FIELD_ID], SOURCE.[INS_PRODUCT_OBJECT_TYPE_ID], SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_DISCOUNT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_DISCOUNT

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_DISCOUNT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_DISCOUNT

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_DISCOUNT AS TABLE (
[ID] int  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NOT NULL,
[NUMERIC_DESCRIPTION] int  NOT NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[DESCRIPTION] nvarchar (50) NULL,
[ORG_ACCOUNTING_AREA_ID] int  NOT NULL,
[ORD_AREA_OF_WORK_ID] int  NOT NULL,
[NECESSITY_TYPE] int  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_DISCOUNT
@source as dbo.TVP_INS_PRODUCT_DISCOUNT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_DISCOUNT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[NUMERIC_DESCRIPTION] = SOURCE.[NUMERIC_DESCRIPTION], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID], TARGET.[ORD_AREA_OF_WORK_ID] = SOURCE.[ORD_AREA_OF_WORK_ID], TARGET.[NECESSITY_TYPE] = SOURCE.[NECESSITY_TYPE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_CORE_DATA_PRODUCT_ID], [NUMERIC_DESCRIPTION], [FROM_DATE], [TO_DATE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [DESCRIPTION], [ORG_ACCOUNTING_AREA_ID], [ORD_AREA_OF_WORK_ID], [NECESSITY_TYPE]
) VALUES (
SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[NUMERIC_DESCRIPTION], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[DESCRIPTION], SOURCE.[ORG_ACCOUNTING_AREA_ID], SOURCE.[ORD_AREA_OF_WORK_ID], SOURCE.[NECESSITY_TYPE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_PRICE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_PRICE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_PRICE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_PRICE

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_PRICE AS TABLE (
[ID] int  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NULL,
[MIN_PRICE] money  NULL,
[MAX_PRICE] money  NULL,
[STANDART_PRICE] money  NULL,
[QUANTITY] int  NOT NULL,
[UNIT_OF_MEASURE] varchar (10) NULL,
[SYS_CURRENCY_ID] int  NULL,
[CHANGE_ABILITY_TYPE] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_PRICE
@source as dbo.TVP_INS_PRODUCT_PRICE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_PRICE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[MIN_PRICE] = SOURCE.[MIN_PRICE], TARGET.[MAX_PRICE] = SOURCE.[MAX_PRICE], TARGET.[STANDART_PRICE] = SOURCE.[STANDART_PRICE], TARGET.[QUANTITY] = SOURCE.[QUANTITY], TARGET.[UNIT_OF_MEASURE] = SOURCE.[UNIT_OF_MEASURE], TARGET.[SYS_CURRENCY_ID] = SOURCE.[SYS_CURRENCY_ID], TARGET.[CHANGE_ABILITY_TYPE] = SOURCE.[CHANGE_ABILITY_TYPE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_CORE_DATA_PRODUCT_ID], [MIN_PRICE], [MAX_PRICE], [STANDART_PRICE], [QUANTITY], [UNIT_OF_MEASURE], [SYS_CURRENCY_ID], [CHANGE_ABILITY_TYPE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [ORG_ACCOUNTING_AREA_ID]
) VALUES (
SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[MIN_PRICE], SOURCE.[MAX_PRICE], SOURCE.[STANDART_PRICE], SOURCE.[QUANTITY], SOURCE.[UNIT_OF_MEASURE], SOURCE.[SYS_CURRENCY_ID], SOURCE.[CHANGE_ABILITY_TYPE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[ORG_ACCOUNTING_AREA_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PRODUCT_REGION_PRICE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PRODUCT_REGION_PRICE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PRODUCT_REGION_PRICE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PRODUCT_REGION_PRICE

GO

CREATE TYPE [dbo].TVP_INS_PRODUCT_REGION_PRICE AS TABLE (
[ID] int  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NULL,
[ORD_FEDERAL_STATE_ID] int  NULL,
[MIN_PRICE] money  NULL,
[MAX_PRICE] money  NULL,
[STANDART_PRICE] money  NULL,
[QUANTITY] int  NOT NULL,
[UNIT_OF_MEASURE] varchar (10) NOT NULL,
[SYS_CURRENCY_ID] int  NULL,
[CHANGE_ABILITY_TYPE] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PRODUCT_REGION_PRICE
@source as dbo.TVP_INS_PRODUCT_REGION_PRICE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PRODUCT_REGION_PRICE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[ORD_FEDERAL_STATE_ID] = SOURCE.[ORD_FEDERAL_STATE_ID], TARGET.[MIN_PRICE] = SOURCE.[MIN_PRICE], TARGET.[MAX_PRICE] = SOURCE.[MAX_PRICE], TARGET.[STANDART_PRICE] = SOURCE.[STANDART_PRICE], TARGET.[QUANTITY] = SOURCE.[QUANTITY], TARGET.[UNIT_OF_MEASURE] = SOURCE.[UNIT_OF_MEASURE], TARGET.[SYS_CURRENCY_ID] = SOURCE.[SYS_CURRENCY_ID], TARGET.[CHANGE_ABILITY_TYPE] = SOURCE.[CHANGE_ABILITY_TYPE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_CORE_DATA_PRODUCT_ID], [ORD_FEDERAL_STATE_ID], [MIN_PRICE], [MAX_PRICE], [STANDART_PRICE], [QUANTITY], [UNIT_OF_MEASURE], [SYS_CURRENCY_ID], [CHANGE_ABILITY_TYPE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [ORG_ACCOUNTING_AREA_ID]
) VALUES (
SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[ORD_FEDERAL_STATE_ID], SOURCE.[MIN_PRICE], SOURCE.[MAX_PRICE], SOURCE.[STANDART_PRICE], SOURCE.[QUANTITY], SOURCE.[UNIT_OF_MEASURE], SOURCE.[SYS_CURRENCY_ID], SOURCE.[CHANGE_ABILITY_TYPE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[ORG_ACCOUNTING_AREA_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_SEVERITY_LABEL_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_SEVERITY_LABEL_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_SEVERITY_LABEL_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_SEVERITY_LABEL_RSP

GO

CREATE TYPE [dbo].TVP_INS_SEVERITY_LABEL_RSP AS TABLE (
[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID] int  NOT NULL,
[INS_PRODUCT_CLASS_LABEL_RSP_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ID] int  NOT NULL,
[IS_APPROVED] bit  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_SEVERITY_LABEL_RSP
@source as dbo.TVP_INS_SEVERITY_LABEL_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_SEVERITY_LABEL_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID] = SOURCE.[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID], TARGET.[INS_PRODUCT_CLASS_LABEL_RSP_ID] = SOURCE.[INS_PRODUCT_CLASS_LABEL_RSP_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[IS_APPROVED] = SOURCE.[IS_APPROVED]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID], [INS_PRODUCT_CLASS_LABEL_RSP_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [IS_APPROVED]
) VALUES (
SOURCE.[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID], SOURCE.[INS_PRODUCT_CLASS_LABEL_RSP_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[IS_APPROVED]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_SEVERITY_NEXT_INSPECTION_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_SEVERITY_NEXT_INSPECTION_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_SEVERITY_NEXT_INSPECTION_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_SEVERITY_NEXT_INSPECTION_RSP

GO

CREATE TYPE [dbo].TVP_INS_SEVERITY_NEXT_INSPECTION_RSP AS TABLE (
[ID] int  NOT NULL,
[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID] int  NOT NULL,
[INS_NEXT_INSPECTION_PRODUCT_CLASS_RSP_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_SEVERITY_NEXT_INSPECTION_RSP
@source as dbo.TVP_INS_SEVERITY_NEXT_INSPECTION_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_SEVERITY_NEXT_INSPECTION_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID] = SOURCE.[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID], TARGET.[INS_NEXT_INSPECTION_PRODUCT_CLASS_RSP_ID] = SOURCE.[INS_NEXT_INSPECTION_PRODUCT_CLASS_RSP_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID], [INS_NEXT_INSPECTION_PRODUCT_CLASS_RSP_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID], SOURCE.[INS_NEXT_INSPECTION_PRODUCT_CLASS_RSP_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_SEVERITY_VALID_PERIOD_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_SEVERITY_VALID_PERIOD_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_SEVERITY_VALID_PERIOD_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_SEVERITY_VALID_PERIOD_RSP

GO

CREATE TYPE [dbo].TVP_INS_SEVERITY_VALID_PERIOD_RSP AS TABLE (
[ID] int  NOT NULL,
[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID] int  NOT NULL,
[INS_VALID_PERIOD_PRODUCT_CLASS_RSP_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_SEVERITY_VALID_PERIOD_RSP
@source as dbo.TVP_INS_SEVERITY_VALID_PERIOD_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_SEVERITY_VALID_PERIOD_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID] = SOURCE.[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID], TARGET.[INS_VALID_PERIOD_PRODUCT_CLASS_RSP_ID] = SOURCE.[INS_VALID_PERIOD_PRODUCT_CLASS_RSP_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID], [INS_VALID_PERIOD_PRODUCT_CLASS_RSP_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[INS_SEVERITY_TYPE_PRODUCT_CLASS_RSP_ID], SOURCE.[INS_VALID_PERIOD_PRODUCT_CLASS_RSP_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_CUSTOMER_PRICE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_CUSTOMER_PRICE

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_CUSTOMER_PRICE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_CUSTOMER_PRICE

GO

CREATE TYPE [dbo].TVP_ORD_CUSTOMER_PRICE AS TABLE (
[ID] int  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NULL,
[ORD_CUSTOMER_ID] int  NULL,
[SALES_OFFICE] nvarchar (128) NULL,
[MIN_PRICE] money  NULL,
[MAX_PRICE] money  NULL,
[STANDART_PRICE] money  NULL,
[QUANTITY] int  NOT NULL,
[UNIT_OF_MEASURE] varchar (10) NULL,
[SYS_CURRENCY_ID] int  NULL,
[CHANGE_ABILITY_TYPE] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_CUSTOMER_PRICE
@source as dbo.TVP_ORD_CUSTOMER_PRICE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_CUSTOMER_PRICE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID], TARGET.[SALES_OFFICE] = SOURCE.[SALES_OFFICE], TARGET.[MIN_PRICE] = SOURCE.[MIN_PRICE], TARGET.[MAX_PRICE] = SOURCE.[MAX_PRICE], TARGET.[STANDART_PRICE] = SOURCE.[STANDART_PRICE], TARGET.[QUANTITY] = SOURCE.[QUANTITY], TARGET.[UNIT_OF_MEASURE] = SOURCE.[UNIT_OF_MEASURE], TARGET.[SYS_CURRENCY_ID] = SOURCE.[SYS_CURRENCY_ID], TARGET.[CHANGE_ABILITY_TYPE] = SOURCE.[CHANGE_ABILITY_TYPE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_CORE_DATA_PRODUCT_ID], [ORD_CUSTOMER_ID], [SALES_OFFICE], [MIN_PRICE], [MAX_PRICE], [STANDART_PRICE], [QUANTITY], [UNIT_OF_MEASURE], [SYS_CURRENCY_ID], [CHANGE_ABILITY_TYPE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [ORG_ACCOUNTING_AREA_ID]
) VALUES (
SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[ORD_CUSTOMER_ID], SOURCE.[SALES_OFFICE], SOURCE.[MIN_PRICE], SOURCE.[MAX_PRICE], SOURCE.[STANDART_PRICE], SOURCE.[QUANTITY], SOURCE.[UNIT_OF_MEASURE], SOURCE.[SYS_CURRENCY_ID], SOURCE.[CHANGE_ABILITY_TYPE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[ORG_ACCOUNTING_AREA_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_EMAIL' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_EMAIL

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_EMAIL' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_EMAIL

GO

CREATE TYPE [dbo].TVP_ORD_EMAIL AS TABLE (
[EMP_EMPLOYEE_ID] int  NULL,
[NAME] nvarchar (50) NULL,
[DOMAIN] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[ID] int  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_EMAIL
@source as dbo.TVP_ORD_EMAIL READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_EMAIL] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[NAME] = SOURCE.[NAME], TARGET.[DOMAIN] = SOURCE.[DOMAIN], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[EMP_EMPLOYEE_ID], [NAME], [DOMAIN], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[NAME], SOURCE.[DOMAIN], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_PROVISION_COST' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_PROVISION_COST

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_PROVISION_COST' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_PROVISION_COST

GO

CREATE TYPE [dbo].TVP_ORD_PROVISION_COST AS TABLE (
[ID] int  NOT NULL,
[ORD_CUSTOMER_ID] int  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_PROVISION_COST
@source as dbo.TVP_ORD_PROVISION_COST READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_PROVISION_COST] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID], TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORD_CUSTOMER_ID], [INS_CORE_DATA_PRODUCT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORD_CUSTOMER_ID], SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_COST_CENTER_PRICE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_COST_CENTER_PRICE

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_COST_CENTER_PRICE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_COST_CENTER_PRICE

GO

CREATE TYPE [dbo].TVP_ORG_COST_CENTER_PRICE AS TABLE (
[ID] int  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NOT NULL,
[SALES_OFFICE] varchar (10) NULL,
[SALES_GROUP] varchar (10) NULL,
[MIN_PRICE] money  NULL,
[MAX_PRICE] money  NULL,
[STANDART_PRICE] money  NULL,
[QUANTITY] int  NOT NULL,
[UNIT_OF_MEASURE] varchar (10) NULL,
[SYS_CURRENCY_ID] int  NULL,
[CHANGE_ABILITY_TYPE] int  NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_COST_CENTER_PRICE
@source as dbo.TVP_ORG_COST_CENTER_PRICE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_COST_CENTER_PRICE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[SALES_OFFICE] = SOURCE.[SALES_OFFICE], TARGET.[SALES_GROUP] = SOURCE.[SALES_GROUP], TARGET.[MIN_PRICE] = SOURCE.[MIN_PRICE], TARGET.[MAX_PRICE] = SOURCE.[MAX_PRICE], TARGET.[STANDART_PRICE] = SOURCE.[STANDART_PRICE], TARGET.[QUANTITY] = SOURCE.[QUANTITY], TARGET.[UNIT_OF_MEASURE] = SOURCE.[UNIT_OF_MEASURE], TARGET.[SYS_CURRENCY_ID] = SOURCE.[SYS_CURRENCY_ID], TARGET.[CHANGE_ABILITY_TYPE] = SOURCE.[CHANGE_ABILITY_TYPE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[INS_CORE_DATA_PRODUCT_ID], [SALES_OFFICE], [SALES_GROUP], [MIN_PRICE], [MAX_PRICE], [STANDART_PRICE], [QUANTITY], [UNIT_OF_MEASURE], [SYS_CURRENCY_ID], [CHANGE_ABILITY_TYPE], [FROM_DATE], [TO_DATE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [ORG_ACCOUNTING_AREA_ID]
) VALUES (
SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[SALES_OFFICE], SOURCE.[SALES_GROUP], SOURCE.[MIN_PRICE], SOURCE.[MAX_PRICE], SOURCE.[STANDART_PRICE], SOURCE.[QUANTITY], SOURCE.[UNIT_OF_MEASURE], SOURCE.[SYS_CURRENCY_ID], SOURCE.[CHANGE_ABILITY_TYPE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[ORG_ACCOUNTING_AREA_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_COST_CENTER_RESPONSIBLE_EMPLOYEE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_COST_CENTER_RESPONSIBLE_EMPLOYEE_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_COST_CENTER_RESPONSIBLE_EMPLOYEE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_COST_CENTER_RESPONSIBLE_EMPLOYEE_RSP

GO

CREATE TYPE [dbo].TVP_ORG_COST_CENTER_RESPONSIBLE_EMPLOYEE_RSP AS TABLE (
[ID] int  NOT NULL,
[ORG_COST_CENTER_ID] int  NOT NULL,
[EMP_EMPLOYEE_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] nvarchar (10) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_COST_CENTER_RESPONSIBLE_EMPLOYEE_RSP
@source as dbo.TVP_ORG_COST_CENTER_RESPONSIBLE_EMPLOYEE_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_COST_CENTER_RESPONSIBLE_EMPLOYEE_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORG_COST_CENTER_ID] = SOURCE.[ORG_COST_CENTER_ID], TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORG_COST_CENTER_ID], [EMP_EMPLOYEE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORG_COST_CENTER_ID], SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_ORGANIZATIONAL_UNIT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_ORGANIZATIONAL_UNIT

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_ORGANIZATIONAL_UNIT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_ORGANIZATIONAL_UNIT

GO

CREATE TYPE [dbo].TVP_ORG_ORGANIZATIONAL_UNIT AS TABLE (
[ID] int  NOT NULL,
[ORG_NUMBER] int  NOT NULL,
[NAME] nvarchar (50) NULL,
[ABBR] nvarchar (50) NULL,
[LOCATION_ABBR] nvarchar (50) NULL,
[SYS_LOCATION_ID] int  NULL,
[ORG_TYPE_ID] int  NOT NULL,
[EMAIL_FROM] varchar (100) NULL,
[EMAIL_TO] varchar (512) NULL,
[IS_EGDOK_PRINT_ALWAYS] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
[ORG_ACCOUNTING_AREA_ID] int  NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_ORGANIZATIONAL_UNIT
@source as dbo.TVP_ORG_ORGANIZATIONAL_UNIT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_ORGANIZATIONAL_UNIT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORG_NUMBER] = SOURCE.[ORG_NUMBER], TARGET.[NAME] = SOURCE.[NAME], TARGET.[ABBR] = SOURCE.[ABBR], TARGET.[LOCATION_ABBR] = SOURCE.[LOCATION_ABBR], TARGET.[SYS_LOCATION_ID] = SOURCE.[SYS_LOCATION_ID], TARGET.[ORG_TYPE_ID] = SOURCE.[ORG_TYPE_ID], TARGET.[EMAIL_FROM] = SOURCE.[EMAIL_FROM], TARGET.[EMAIL_TO] = SOURCE.[EMAIL_TO], TARGET.[IS_EGDOK_PRINT_ALWAYS] = SOURCE.[IS_EGDOK_PRINT_ALWAYS], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE], TARGET.[ORG_ACCOUNTING_AREA_ID] = SOURCE.[ORG_ACCOUNTING_AREA_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORG_NUMBER], [NAME], [ABBR], [LOCATION_ABBR], [SYS_LOCATION_ID], [ORG_TYPE_ID], [EMAIL_FROM], [EMAIL_TO], [IS_EGDOK_PRINT_ALWAYS], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE], [ORG_ACCOUNTING_AREA_ID]
) VALUES (
SOURCE.[ORG_NUMBER], SOURCE.[NAME], SOURCE.[ABBR], SOURCE.[LOCATION_ABBR], SOURCE.[SYS_LOCATION_ID], SOURCE.[ORG_TYPE_ID], SOURCE.[EMAIL_FROM], SOURCE.[EMAIL_TO], SOURCE.[IS_EGDOK_PRINT_ALWAYS], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE], SOURCE.[ORG_ACCOUNTING_AREA_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_EMPLOYEE_ORG_ORGANIZATIONAL_UNIT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_ORG_ORGANIZATIONAL_UNIT_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_EMPLOYEE_ORG_ORGANIZATIONAL_UNIT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_EMPLOYEE_ORG_ORGANIZATIONAL_UNIT_RSP

GO

CREATE TYPE [dbo].TVP_EMP_EMPLOYEE_ORG_ORGANIZATIONAL_UNIT_RSP AS TABLE (
[ID] int  NOT NULL,
[EMP_EMPLOYEE_ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_ORG_ORGANIZATIONAL_UNIT_RSP
@source as dbo.TVP_EMP_EMPLOYEE_ORG_ORGANIZATIONAL_UNIT_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_EMPLOYEE_ORG_ORGANIZATIONAL_UNIT_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[EMP_EMPLOYEE_ID], [ORG_ORGANIZATIONAL_UNIT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_EMPLOYEE_ORGANIZATIONAL_UNIT_ORDER_LOOKUP_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_ORGANIZATIONAL_UNIT_ORDER_LOOKUP_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_EMPLOYEE_ORGANIZATIONAL_UNIT_ORDER_LOOKUP_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_EMPLOYEE_ORGANIZATIONAL_UNIT_ORDER_LOOKUP_RSP

GO

CREATE TYPE [dbo].TVP_EMP_EMPLOYEE_ORGANIZATIONAL_UNIT_ORDER_LOOKUP_RSP AS TABLE (
[ID] int  NOT NULL,
[EMP_EMPLOYEE_ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_EMPLOYEE_ORGANIZATIONAL_UNIT_ORDER_LOOKUP_RSP
@source as dbo.TVP_EMP_EMPLOYEE_ORGANIZATIONAL_UNIT_ORDER_LOOKUP_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_EMPLOYEE_ORGANIZATIONAL_UNIT_ORDER_LOOKUP_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[EMP_EMPLOYEE_ID], [ORG_ORGANIZATIONAL_UNIT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_INSPECTION_REPORT_TEXT_CONFIGURATION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_INSPECTION_REPORT_TEXT_CONFIGURATION

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_INSPECTION_REPORT_TEXT_CONFIGURATION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_INSPECTION_REPORT_TEXT_CONFIGURATION

GO

CREATE TYPE [dbo].TVP_INS_INSPECTION_REPORT_TEXT_CONFIGURATION AS TABLE (
[ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[ORD_AREA_OF_WORK_ID] int  NOT NULL,
[ORD_FEDERAL_STATE_ID] int  NOT NULL,
[TEXT_BLOCK_ID] int  NOT NULL,
[ORDER_POSITION] int  NOT NULL,
[INS_AVAILABLE_INSPECTION_TEXT_ID] int  NOT NULL,
[FONT_TYPE] varchar (100) NULL,
[FONT_SIZE] decimal (9,2) NULL,
[FONT_POSITION] int  NULL,
[FONT_FORMAT] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_INSPECTION_REPORT_TEXT_CONFIGURATION
@source as dbo.TVP_INS_INSPECTION_REPORT_TEXT_CONFIGURATION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_INSPECTION_REPORT_TEXT_CONFIGURATION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[ORD_AREA_OF_WORK_ID] = SOURCE.[ORD_AREA_OF_WORK_ID], TARGET.[ORD_FEDERAL_STATE_ID] = SOURCE.[ORD_FEDERAL_STATE_ID], TARGET.[TEXT_BLOCK_ID] = SOURCE.[TEXT_BLOCK_ID], TARGET.[ORDER_POSITION] = SOURCE.[ORDER_POSITION], TARGET.[INS_AVAILABLE_INSPECTION_TEXT_ID] = SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], TARGET.[FONT_TYPE] = SOURCE.[FONT_TYPE], TARGET.[FONT_SIZE] = SOURCE.[FONT_SIZE], TARGET.[FONT_POSITION] = SOURCE.[FONT_POSITION], TARGET.[FONT_FORMAT] = SOURCE.[FONT_FORMAT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORG_ORGANIZATIONAL_UNIT_ID], [ORD_AREA_OF_WORK_ID], [ORD_FEDERAL_STATE_ID], [TEXT_BLOCK_ID], [ORDER_POSITION], [INS_AVAILABLE_INSPECTION_TEXT_ID], [FONT_TYPE], [FONT_SIZE], [FONT_POSITION], [FONT_FORMAT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[ORD_AREA_OF_WORK_ID], SOURCE.[ORD_FEDERAL_STATE_ID], SOURCE.[TEXT_BLOCK_ID], SOURCE.[ORDER_POSITION], SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], SOURCE.[FONT_TYPE], SOURCE.[FONT_SIZE], SOURCE.[FONT_POSITION], SOURCE.[FONT_FORMAT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_CUSTOMER_ORG_UNIT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_CUSTOMER_ORG_UNIT_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_CUSTOMER_ORG_UNIT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_CUSTOMER_ORG_UNIT_RSP

GO

CREATE TYPE [dbo].TVP_ORD_CUSTOMER_ORG_UNIT_RSP AS TABLE (
[ID] int  NOT NULL,
[ORD_CUSTOMER_ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_CUSTOMER_ORG_UNIT_RSP
@source as dbo.TVP_ORD_CUSTOMER_ORG_UNIT_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_CUSTOMER_ORG_UNIT_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID], TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORD_CUSTOMER_ID], [ORG_ORGANIZATIONAL_UNIT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORD_CUSTOMER_ID], SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_UNIT_ACCOUNT_TYPE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_UNIT_ACCOUNT_TYPE_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_UNIT_ACCOUNT_TYPE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_UNIT_ACCOUNT_TYPE_RSP

GO

CREATE TYPE [dbo].TVP_ORG_UNIT_ACCOUNT_TYPE_RSP AS TABLE (
[ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[ORG_ACCOUNT_TYPE_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] nvarchar (10) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_UNIT_ACCOUNT_TYPE_RSP
@source as dbo.TVP_ORG_UNIT_ACCOUNT_TYPE_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_UNIT_ACCOUNT_TYPE_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[ORG_ACCOUNT_TYPE_ID] = SOURCE.[ORG_ACCOUNT_TYPE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORG_ORGANIZATIONAL_UNIT_ID], [ORG_ACCOUNT_TYPE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[ORG_ACCOUNT_TYPE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_UNIT_ADDRESS_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_UNIT_ADDRESS_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_UNIT_ADDRESS_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_UNIT_ADDRESS_RSP

GO

CREATE TYPE [dbo].TVP_ORG_UNIT_ADDRESS_RSP AS TABLE (
[ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[EMP_CORE_ADDRESS_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_UNIT_ADDRESS_RSP
@source as dbo.TVP_ORG_UNIT_ADDRESS_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_UNIT_ADDRESS_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[EMP_CORE_ADDRESS_ID] = SOURCE.[EMP_CORE_ADDRESS_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORG_ORGANIZATIONAL_UNIT_ID], [EMP_CORE_ADDRESS_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[EMP_CORE_ADDRESS_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_UNIT_BANK_INFO_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_UNIT_BANK_INFO_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_UNIT_BANK_INFO_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_UNIT_BANK_INFO_RSP

GO

CREATE TYPE [dbo].TVP_ORG_UNIT_BANK_INFO_RSP AS TABLE (
[ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[ORG_BANK_INFO_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_UNIT_BANK_INFO_RSP
@source as dbo.TVP_ORG_UNIT_BANK_INFO_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_UNIT_BANK_INFO_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[ORG_BANK_INFO_ID] = SOURCE.[ORG_BANK_INFO_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORG_ORGANIZATIONAL_UNIT_ID], [ORG_BANK_INFO_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[ORG_BANK_INFO_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_UNIT_FEDERAL_STATE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_UNIT_FEDERAL_STATE_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_UNIT_FEDERAL_STATE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_UNIT_FEDERAL_STATE_RSP

GO

CREATE TYPE [dbo].TVP_ORG_UNIT_FEDERAL_STATE_RSP AS TABLE (
[ID] int  NOT NULL,
[ORD_FEDERAL_STATE_ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_UNIT_FEDERAL_STATE_RSP
@source as dbo.TVP_ORG_UNIT_FEDERAL_STATE_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_UNIT_FEDERAL_STATE_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_FEDERAL_STATE_ID] = SOURCE.[ORD_FEDERAL_STATE_ID], TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORD_FEDERAL_STATE_ID], [ORG_ORGANIZATIONAL_UNIT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORD_FEDERAL_STATE_ID], SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_UNIT_INFO_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_UNIT_INFO_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_UNIT_INFO_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_UNIT_INFO_RSP

GO

CREATE TYPE [dbo].TVP_ORG_UNIT_INFO_RSP AS TABLE (
[ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[ORG_INFORMATION_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_UNIT_INFO_RSP
@source as dbo.TVP_ORG_UNIT_INFO_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_UNIT_INFO_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[ORG_INFORMATION_ID] = SOURCE.[ORG_INFORMATION_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORG_ORGANIZATIONAL_UNIT_ID], [ORG_INFORMATION_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[ORG_INFORMATION_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_UNIT_OPEN_TIME_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_UNIT_OPEN_TIME_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_UNIT_OPEN_TIME_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_UNIT_OPEN_TIME_RSP

GO

CREATE TYPE [dbo].TVP_ORG_UNIT_OPEN_TIME_RSP AS TABLE (
[ID] int  NOT NULL,
[ORG_OPEN_TIME_TYPE_ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_UNIT_OPEN_TIME_RSP
@source as dbo.TVP_ORG_UNIT_OPEN_TIME_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_UNIT_OPEN_TIME_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORG_OPEN_TIME_TYPE_ID] = SOURCE.[ORG_OPEN_TIME_TYPE_ID], TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORG_OPEN_TIME_TYPE_ID], [ORG_ORGANIZATIONAL_UNIT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORG_OPEN_TIME_TYPE_ID], SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_UNIT_ORG_COST_CENTER_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_UNIT_ORG_COST_CENTER_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_UNIT_ORG_COST_CENTER_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_UNIT_ORG_COST_CENTER_RSP

GO

CREATE TYPE [dbo].TVP_ORG_UNIT_ORG_COST_CENTER_RSP AS TABLE (
[ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[ORG_COST_CENTER_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] nvarchar (10) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_UNIT_ORG_COST_CENTER_RSP
@source as dbo.TVP_ORG_UNIT_ORG_COST_CENTER_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_UNIT_ORG_COST_CENTER_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[ORG_COST_CENTER_ID] = SOURCE.[ORG_COST_CENTER_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORG_ORGANIZATIONAL_UNIT_ID], [ORG_COST_CENTER_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[ORG_COST_CENTER_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORG_UNIT_TOP_ORG_UNIT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORG_UNIT_TOP_ORG_UNIT_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORG_UNIT_TOP_ORG_UNIT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORG_UNIT_TOP_ORG_UNIT_RSP

GO

CREATE TYPE [dbo].TVP_ORG_UNIT_TOP_ORG_UNIT_RSP AS TABLE (
[ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[TOP_ORG_UNIT_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] nvarchar (10) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORG_UNIT_TOP_ORG_UNIT_RSP
@source as dbo.TVP_ORG_UNIT_TOP_ORG_UNIT_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORG_UNIT_TOP_ORG_UNIT_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[TOP_ORG_UNIT_ID] = SOURCE.[TOP_ORG_UNIT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORG_ORGANIZATIONAL_UNIT_ID], [TOP_ORG_UNIT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[TOP_ORG_UNIT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_DOCUMENT_TEXT_CONFIGURATION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_DOCUMENT_TEXT_CONFIGURATION

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_DOCUMENT_TEXT_CONFIGURATION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_DOCUMENT_TEXT_CONFIGURATION

GO

CREATE TYPE [dbo].TVP_SYS_DOCUMENT_TEXT_CONFIGURATION AS TABLE (
[ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[ORDER_POSITION] int  NOT NULL,
[INS_AVAILABLE_INSPECTION_TEXT_ID] int  NOT NULL,
[TEXT_BLOCK_ID] int  NOT NULL,
[FONT_TYPE] varchar (100) NULL,
[FONT_SIZE] decimal (9,2) NULL,
[FONT_POSITION] int  NULL,
[FONT_FORMAT] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_DOCUMENT_TEXT_CONFIGURATION
@source as dbo.TVP_SYS_DOCUMENT_TEXT_CONFIGURATION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_DOCUMENT_TEXT_CONFIGURATION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[ORDER_POSITION] = SOURCE.[ORDER_POSITION], TARGET.[INS_AVAILABLE_INSPECTION_TEXT_ID] = SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], TARGET.[TEXT_BLOCK_ID] = SOURCE.[TEXT_BLOCK_ID], TARGET.[FONT_TYPE] = SOURCE.[FONT_TYPE], TARGET.[FONT_SIZE] = SOURCE.[FONT_SIZE], TARGET.[FONT_POSITION] = SOURCE.[FONT_POSITION], TARGET.[FONT_FORMAT] = SOURCE.[FONT_FORMAT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ORG_ORGANIZATIONAL_UNIT_ID], [ORDER_POSITION], [INS_AVAILABLE_INSPECTION_TEXT_ID], [TEXT_BLOCK_ID], [FONT_TYPE], [FONT_SIZE], [FONT_POSITION], [FONT_FORMAT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[ORDER_POSITION], SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], SOURCE.[TEXT_BLOCK_ID], SOURCE.[FONT_TYPE], SOURCE.[FONT_SIZE], SOURCE.[FONT_POSITION], SOURCE.[FONT_FORMAT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_ESCALATION_LEVEL' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_ESCALATION_LEVEL

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_ESCALATION_LEVEL' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_ESCALATION_LEVEL

GO

CREATE TYPE [dbo].TVP_SYS_ESCALATION_LEVEL AS TABLE (
[ID] int  NOT NULL,
[LEVEL_TYPE] int  NOT NULL,
[ORD_ORDER_TYPE_ID] int  NOT NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NULL,
[HOURS_SPAN] int  NOT NULL,
[ACTION_TYPE] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_ESCALATION_LEVEL
@source as dbo.TVP_SYS_ESCALATION_LEVEL READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_ESCALATION_LEVEL] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[LEVEL_TYPE] = SOURCE.[LEVEL_TYPE], TARGET.[ORD_ORDER_TYPE_ID] = SOURCE.[ORD_ORDER_TYPE_ID], TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[HOURS_SPAN] = SOURCE.[HOURS_SPAN], TARGET.[ACTION_TYPE] = SOURCE.[ACTION_TYPE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[LEVEL_TYPE], [ORD_ORDER_TYPE_ID], [ORG_ORGANIZATIONAL_UNIT_ID], [HOURS_SPAN], [ACTION_TYPE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[LEVEL_TYPE], SOURCE.[ORD_ORDER_TYPE_ID], SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[HOURS_SPAN], SOURCE.[ACTION_TYPE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_DOCUMENT_TEXT_CONFIGURATION_DOCUMENT_TYPE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_DOCUMENT_TEXT_CONFIGURATION_DOCUMENT_TYPE_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_DOCUMENT_TEXT_CONFIGURATION_DOCUMENT_TYPE_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_DOCUMENT_TEXT_CONFIGURATION_DOCUMENT_TYPE_RSP

GO

CREATE TYPE [dbo].TVP_SYS_DOCUMENT_TEXT_CONFIGURATION_DOCUMENT_TYPE_RSP AS TABLE (
[ID] int  NOT NULL,
[SYS_DOCUMENT_TYPE_ID] int  NOT NULL,
[SYS_DOCUMENT_TEXT_CONFIGURATION_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[FROM_DATE] date  NOT NULL,
[TO_DATE] date  NOT NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_DOCUMENT_TEXT_CONFIGURATION_DOCUMENT_TYPE_RSP
@source as dbo.TVP_SYS_DOCUMENT_TEXT_CONFIGURATION_DOCUMENT_TYPE_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_DOCUMENT_TEXT_CONFIGURATION_DOCUMENT_TYPE_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SYS_DOCUMENT_TYPE_ID] = SOURCE.[SYS_DOCUMENT_TYPE_ID], TARGET.[SYS_DOCUMENT_TEXT_CONFIGURATION_ID] = SOURCE.[SYS_DOCUMENT_TEXT_CONFIGURATION_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[FROM_DATE] = SOURCE.[FROM_DATE], TARGET.[TO_DATE] = SOURCE.[TO_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[SYS_DOCUMENT_TYPE_ID], [SYS_DOCUMENT_TEXT_CONFIGURATION_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [FROM_DATE], [TO_DATE]
) VALUES (
SOURCE.[SYS_DOCUMENT_TYPE_ID], SOURCE.[SYS_DOCUMENT_TEXT_CONFIGURATION_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[FROM_DATE], SOURCE.[TO_DATE]
);
END

GO



				IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EXP_WORKING_DAY' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EXP_WORKING_DAY

GO

IF EXISTS(select * from sys.types where name = 'TVP_EXP_WORKING_DAY' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EXP_WORKING_DAY

GO

CREATE TYPE [dbo].TVP_EXP_WORKING_DAY AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[EMP_EMPLOYEE_ID] int  NOT NULL,
[DATE] date  NOT NULL,
[LOGIN_TIME] datetime2 (3) NULL,
[LOGOUT_TIME] datetime2 (3) NULL,
[START_TIME] datetime2 (3) NULL,
[END_TIME] datetime2 (3) NULL,
[IS_CLOSED] bit  NOT NULL,
[MANUAL_APPROVAL_REQUIRED] bit  NOT NULL,
[IS_SENT] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EXP_WORKING_DAY
@source as dbo.TVP_EXP_WORKING_DAY READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EXP_WORKING_DAY] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[DATE] = SOURCE.[DATE], TARGET.[LOGIN_TIME] = SOURCE.[LOGIN_TIME], TARGET.[LOGOUT_TIME] = SOURCE.[LOGOUT_TIME], TARGET.[START_TIME] = SOURCE.[START_TIME], TARGET.[END_TIME] = SOURCE.[END_TIME], TARGET.[IS_CLOSED] = SOURCE.[IS_CLOSED], TARGET.[MANUAL_APPROVAL_REQUIRED] = SOURCE.[MANUAL_APPROVAL_REQUIRED], TARGET.[IS_SENT] = SOURCE.[IS_SENT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [EMP_EMPLOYEE_ID], [DATE], [LOGIN_TIME], [LOGOUT_TIME], [START_TIME], [END_TIME], [IS_CLOSED], [MANUAL_APPROVAL_REQUIRED], [IS_SENT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[DATE], SOURCE.[LOGIN_TIME], SOURCE.[LOGOUT_TIME], SOURCE.[START_TIME], SOURCE.[END_TIME], SOURCE.[IS_CLOSED], SOURCE.[MANUAL_APPROVAL_REQUIRED], SOURCE.[IS_SENT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EXP_TRIP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EXP_TRIP

GO

IF EXISTS(select * from sys.types where name = 'TVP_EXP_TRIP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EXP_TRIP

GO

CREATE TYPE [dbo].TVP_EXP_TRIP AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[EXP_WORKING_DAY_ID] uniqueidentifier  NOT NULL,
[DISTANCE] decimal (10,5) NOT NULL,
[EXP_TRIP_TYPE_ID] int  NULL,
[EXP_PASSENGERS_TYPE_ID] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[IS_WITH_PASSENGERS] bit  NOT NULL,
[IS_ACCEPTED] bit  NOT NULL,
[SYS_SYNC_STATUS_ID] int  NOT NULL,
[SYNC_DATE] datetime2 (2) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EXP_TRIP
@source as dbo.TVP_EXP_TRIP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EXP_TRIP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EXP_WORKING_DAY_ID] = SOURCE.[EXP_WORKING_DAY_ID], TARGET.[DISTANCE] = SOURCE.[DISTANCE], TARGET.[EXP_TRIP_TYPE_ID] = SOURCE.[EXP_TRIP_TYPE_ID], TARGET.[EXP_PASSENGERS_TYPE_ID] = SOURCE.[EXP_PASSENGERS_TYPE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[IS_WITH_PASSENGERS] = SOURCE.[IS_WITH_PASSENGERS], TARGET.[IS_ACCEPTED] = SOURCE.[IS_ACCEPTED], TARGET.[SYS_SYNC_STATUS_ID] = SOURCE.[SYS_SYNC_STATUS_ID], TARGET.[SYNC_DATE] = SOURCE.[SYNC_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [EXP_WORKING_DAY_ID], [DISTANCE], [EXP_TRIP_TYPE_ID], [EXP_PASSENGERS_TYPE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [IS_WITH_PASSENGERS], [IS_ACCEPTED], [SYS_SYNC_STATUS_ID], [SYNC_DATE]
) VALUES (
SOURCE.[ID], SOURCE.[EXP_WORKING_DAY_ID], SOURCE.[DISTANCE], SOURCE.[EXP_TRIP_TYPE_ID], SOURCE.[EXP_PASSENGERS_TYPE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[IS_WITH_PASSENGERS], SOURCE.[IS_ACCEPTED], SOURCE.[SYS_SYNC_STATUS_ID], SOURCE.[SYNC_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EXP_WORKING_SPAN' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EXP_WORKING_SPAN

GO

IF EXISTS(select * from sys.types where name = 'TVP_EXP_WORKING_SPAN' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EXP_WORKING_SPAN

GO

CREATE TYPE [dbo].TVP_EXP_WORKING_SPAN AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[EXP_WORKING_DAY_ID] uniqueidentifier  NOT NULL,
[COST_CENTER] nvarchar (50) NULL,
[START_TIME] datetime2 (3) NOT NULL,
[END_TIME] datetime2 (3) NOT NULL,
[SPAN_TYPE] bit  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NULL,
[IS_ACCEPTED] bit  NOT NULL,
[IS_MODIFIED_MANUALLY] bit  NOT NULL,
[PARTICIPATING_INTEREST] decimal (3,2) NOT NULL,
[ORG_COST_CENTER_ID] int  NULL,
[INTERNAL_ORDER] nvarchar (100) NULL,
[CUSTOMER_NAME] nvarchar (270) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[ORD_ORDER_NUMBER] char (10) NULL,
[DEBITOR_NUMBER] char (10) NULL,
[SYS_SYNC_STATUS_ID] int  NOT NULL,
[PRODUCTIVE_COST] money  NOT NULL,
[ORD_POSITION_ID] uniqueidentifier  NULL,
[SYNC_DATE] datetime2 (2) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EXP_WORKING_SPAN
@source as dbo.TVP_EXP_WORKING_SPAN READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EXP_WORKING_SPAN] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EXP_WORKING_DAY_ID] = SOURCE.[EXP_WORKING_DAY_ID], TARGET.[COST_CENTER] = SOURCE.[COST_CENTER], TARGET.[START_TIME] = SOURCE.[START_TIME], TARGET.[END_TIME] = SOURCE.[END_TIME], TARGET.[SPAN_TYPE] = SOURCE.[SPAN_TYPE], TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[IS_ACCEPTED] = SOURCE.[IS_ACCEPTED], TARGET.[IS_MODIFIED_MANUALLY] = SOURCE.[IS_MODIFIED_MANUALLY], TARGET.[PARTICIPATING_INTEREST] = SOURCE.[PARTICIPATING_INTEREST], TARGET.[ORG_COST_CENTER_ID] = SOURCE.[ORG_COST_CENTER_ID], TARGET.[INTERNAL_ORDER] = SOURCE.[INTERNAL_ORDER], TARGET.[CUSTOMER_NAME] = SOURCE.[CUSTOMER_NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[ORD_ORDER_NUMBER] = SOURCE.[ORD_ORDER_NUMBER], TARGET.[DEBITOR_NUMBER] = SOURCE.[DEBITOR_NUMBER], TARGET.[SYS_SYNC_STATUS_ID] = SOURCE.[SYS_SYNC_STATUS_ID], TARGET.[PRODUCTIVE_COST] = SOURCE.[PRODUCTIVE_COST], TARGET.[ORD_POSITION_ID] = SOURCE.[ORD_POSITION_ID], TARGET.[SYNC_DATE] = SOURCE.[SYNC_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [EXP_WORKING_DAY_ID], [COST_CENTER], [START_TIME], [END_TIME], [SPAN_TYPE], [INS_CORE_DATA_PRODUCT_ID], [IS_ACCEPTED], [IS_MODIFIED_MANUALLY], [PARTICIPATING_INTEREST], [ORG_COST_CENTER_ID], [INTERNAL_ORDER], [CUSTOMER_NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [ORD_ORDER_NUMBER], [DEBITOR_NUMBER], [SYS_SYNC_STATUS_ID], [PRODUCTIVE_COST], [ORD_POSITION_ID], [SYNC_DATE]
) VALUES (
SOURCE.[ID], SOURCE.[EXP_WORKING_DAY_ID], SOURCE.[COST_CENTER], SOURCE.[START_TIME], SOURCE.[END_TIME], SOURCE.[SPAN_TYPE], SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[IS_ACCEPTED], SOURCE.[IS_MODIFIED_MANUALLY], SOURCE.[PARTICIPATING_INTEREST], SOURCE.[ORG_COST_CENTER_ID], SOURCE.[INTERNAL_ORDER], SOURCE.[CUSTOMER_NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[ORD_ORDER_NUMBER], SOURCE.[DEBITOR_NUMBER], SOURCE.[SYS_SYNC_STATUS_ID], SOURCE.[PRODUCTIVE_COST], SOURCE.[ORD_POSITION_ID], SOURCE.[SYNC_DATE]
);
END

GO



				IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_INSPECTION_REPORT_BINARY_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_INSPECTION_REPORT_BINARY_DATA

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_INSPECTION_REPORT_BINARY_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_INSPECTION_REPORT_BINARY_DATA

GO

CREATE TYPE [dbo].TVP_INS_INSPECTION_REPORT_BINARY_DATA AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[DATA] varbinary (max) NOT NULL,
[FILE_SIZE] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_INSPECTION_REPORT_BINARY_DATA
@source as dbo.TVP_INS_INSPECTION_REPORT_BINARY_DATA READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_INSPECTION_REPORT_BINARY_DATA] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DATA] = SOURCE.[DATA], TARGET.[FILE_SIZE] = SOURCE.[FILE_SIZE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [DATA], [FILE_SIZE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[DATA], SOURCE.[FILE_SIZE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_ACCOUNT_PARAMETER' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_ACCOUNT_PARAMETER

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_ACCOUNT_PARAMETER' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_ACCOUNT_PARAMETER

GO

CREATE TYPE [dbo].TVP_ORD_ACCOUNT_PARAMETER AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[CASH_FLAG] bit  NOT NULL,
[COLLECTION_LIST] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_ACCOUNT_PARAMETER
@source as dbo.TVP_ORD_ACCOUNT_PARAMETER READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_ACCOUNT_PARAMETER] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[CASH_FLAG] = SOURCE.[CASH_FLAG], TARGET.[COLLECTION_LIST] = SOURCE.[COLLECTION_LIST], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [CASH_FLAG], [COLLECTION_LIST], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[CASH_FLAG], SOURCE.[COLLECTION_LIST], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_ORDER_FOLDER' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_ORDER_FOLDER

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_ORDER_FOLDER' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_ORDER_FOLDER

GO

CREATE TYPE [dbo].TVP_ORD_ORDER_FOLDER AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[NAME] nvarchar (16) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_ORDER_FOLDER
@source as dbo.TVP_ORD_ORDER_FOLDER READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_ORDER_FOLDER] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_ORDER_HISTORY' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_ORDER_HISTORY

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_ORDER_HISTORY' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_ORDER_HISTORY

GO

CREATE TYPE [dbo].TVP_ORD_ORDER_HISTORY AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ACTION] nvarchar (1) NOT NULL,
[ORD_ORDER_ID] uniqueidentifier  NOT NULL,
[FIELD_NAME] nvarchar (300) NOT NULL,
[NEW_VALUE] nvarchar (500) NULL,
[DB_USER_NAME] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[OBJECT_ID] int  NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_ORDER_HISTORY
@source as dbo.TVP_ORD_ORDER_HISTORY READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_ORDER_HISTORY] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ACTION] = SOURCE.[ACTION], TARGET.[ORD_ORDER_ID] = SOURCE.[ORD_ORDER_ID], TARGET.[FIELD_NAME] = SOURCE.[FIELD_NAME], TARGET.[NEW_VALUE] = SOURCE.[NEW_VALUE], TARGET.[DB_USER_NAME] = SOURCE.[DB_USER_NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[OBJECT_ID] = SOURCE.[OBJECT_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ACTION], [ORD_ORDER_ID], [FIELD_NAME], [NEW_VALUE], [DB_USER_NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [OBJECT_ID]
) VALUES (
SOURCE.[ID], SOURCE.[ACTION], SOURCE.[ORD_ORDER_ID], SOURCE.[FIELD_NAME], SOURCE.[NEW_VALUE], SOURCE.[DB_USER_NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[OBJECT_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_BODY' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_BODY

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_BODY' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_BODY

GO

CREATE TYPE [dbo].TVP_VHL_BODY AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[NAME] nvarchar (50) NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_BODY
@source as dbo.TVP_VHL_BODY READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_BODY] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [NAME], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[NAME], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_CLASS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_CLASS

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_CLASS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_CLASS

GO

CREATE TYPE [dbo].TVP_VHL_CLASS AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CODE] varchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_CLASS
@source as dbo.TVP_VHL_CLASS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_CLASS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CODE] = SOURCE.[CODE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [DESCRIPTION], [CODE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[DESCRIPTION], SOURCE.[CODE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_EMISSION_CLASS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_EMISSION_CLASS

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_EMISSION_CLASS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_EMISSION_CLASS

GO

CREATE TYPE [dbo].TVP_VHL_EMISSION_CLASS AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[CODE] varchar (50) NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_EMISSION_CLASS
@source as dbo.TVP_VHL_EMISSION_CLASS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_EMISSION_CLASS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[CODE] = SOURCE.[CODE], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [CODE], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[CODE], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_FUEL_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_FUEL_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_FUEL_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_FUEL_TYPE

GO

CREATE TYPE [dbo].TVP_VHL_FUEL_TYPE AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CODE] varchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_FUEL_TYPE
@source as dbo.TVP_VHL_FUEL_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_FUEL_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CODE] = SOURCE.[CODE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [DESCRIPTION], [CODE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[DESCRIPTION], SOURCE.[CODE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_MILE_AGE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_MILE_AGE

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_MILE_AGE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_MILE_AGE

GO

CREATE TYPE [dbo].TVP_VHL_MILE_AGE AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[MILE_AGE] varchar (16) NULL,
[UNIT] tinyint  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_MILE_AGE
@source as dbo.TVP_VHL_MILE_AGE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_MILE_AGE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[MILE_AGE] = SOURCE.[MILE_AGE], TARGET.[UNIT] = SOURCE.[UNIT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [MILE_AGE], [UNIT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[MILE_AGE], SOURCE.[UNIT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_PRODUCER' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_PRODUCER

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_PRODUCER' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_PRODUCER

GO

CREATE TYPE [dbo].TVP_VHL_PRODUCER AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[NUMBER] varchar (50) NULL,
[DESCRIPTION] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_PRODUCER
@source as dbo.TVP_VHL_PRODUCER READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_PRODUCER] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NUMBER] = SOURCE.[NUMBER], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [NUMBER], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[NUMBER], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_TYPE

GO

CREATE TYPE [dbo].TVP_VHL_TYPE AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[NAME] nvarchar (50) NULL,
[NUMBER] nvarchar (100) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_TYPE
@source as dbo.TVP_VHL_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME] = SOURCE.[NAME], TARGET.[NUMBER] = SOURCE.[NUMBER], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [NAME], [NUMBER], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[NAME], SOURCE.[NUMBER], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_COMMON_BINARY_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_COMMON_BINARY_DATA

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_COMMON_BINARY_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_COMMON_BINARY_DATA

GO

CREATE TYPE [dbo].TVP_INS_COMMON_BINARY_DATA AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[FILE_NAME] nvarchar (255) NULL,
[DATA_TYPE] int  NULL,
[FILE_SIZE] int  NOT NULL,
[SYS_INFO_KEY_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[KBA_STATS_VALIDATION_EXPORT_DATE] datetime2 (3) NULL,
[INS_COMMON_BINARY_DATA_VALUE_ID] uniqueidentifier  NULL,
[IS_CANCELLED] bit  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_COMMON_BINARY_DATA
@source as dbo.TVP_INS_COMMON_BINARY_DATA READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_COMMON_BINARY_DATA] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[FILE_NAME] = SOURCE.[FILE_NAME], TARGET.[DATA_TYPE] = SOURCE.[DATA_TYPE], TARGET.[FILE_SIZE] = SOURCE.[FILE_SIZE], TARGET.[SYS_INFO_KEY_ID] = SOURCE.[SYS_INFO_KEY_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[KBA_STATS_VALIDATION_EXPORT_DATE] = SOURCE.[KBA_STATS_VALIDATION_EXPORT_DATE], TARGET.[INS_COMMON_BINARY_DATA_VALUE_ID] = SOURCE.[INS_COMMON_BINARY_DATA_VALUE_ID], TARGET.[IS_CANCELLED] = SOURCE.[IS_CANCELLED]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [FILE_NAME], [DATA_TYPE], [FILE_SIZE], [SYS_INFO_KEY_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [KBA_STATS_VALIDATION_EXPORT_DATE], [INS_COMMON_BINARY_DATA_VALUE_ID], [IS_CANCELLED]
) VALUES (
SOURCE.[ID], SOURCE.[FILE_NAME], SOURCE.[DATA_TYPE], SOURCE.[FILE_SIZE], SOURCE.[SYS_INFO_KEY_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[KBA_STATS_VALIDATION_EXPORT_DATE], SOURCE.[INS_COMMON_BINARY_DATA_VALUE_ID], SOURCE.[IS_CANCELLED]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_DEFECT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_DEFECT

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_DEFECT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_DEFECT

GO

CREATE TYPE [dbo].TVP_INS_DEFECT AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[INS_DEFECT_ID] varchar (50) NULL,
[RILI_CODE] varchar (50) NULL,
[SERVICE_TYPE] int  NULL,
[CLASSIFICATION] int  NULL,
[TEXT] nvarchar (500) NULL,
[INS_SEVERITY_TYPE_ID] int  NULL,
[IS_SPECIAL] bit  NOT NULL,
[CREATE_DATE] datetime2 (3) NULL,
[CHANGE_DATE] datetime2 (3) NULL,
[DELETE_DATE] datetime2 (3) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_DEFECT
@source as dbo.TVP_INS_DEFECT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_DEFECT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_DEFECT_ID] = SOURCE.[INS_DEFECT_ID], TARGET.[RILI_CODE] = SOURCE.[RILI_CODE], TARGET.[SERVICE_TYPE] = SOURCE.[SERVICE_TYPE], TARGET.[CLASSIFICATION] = SOURCE.[CLASSIFICATION], TARGET.[TEXT] = SOURCE.[TEXT], TARGET.[INS_SEVERITY_TYPE_ID] = SOURCE.[INS_SEVERITY_TYPE_ID], TARGET.[IS_SPECIAL] = SOURCE.[IS_SPECIAL], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [INS_DEFECT_ID], [RILI_CODE], [SERVICE_TYPE], [CLASSIFICATION], [TEXT], [INS_SEVERITY_TYPE_ID], [IS_SPECIAL], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[INS_DEFECT_ID], SOURCE.[RILI_CODE], SOURCE.[SERVICE_TYPE], SOURCE.[CLASSIFICATION], SOURCE.[TEXT], SOURCE.[INS_SEVERITY_TYPE_ID], SOURCE.[IS_SPECIAL], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_INSPECTION_LABEL' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_INSPECTION_LABEL

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_INSPECTION_LABEL' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_INSPECTION_LABEL

GO

CREATE TYPE [dbo].TVP_INS_INSPECTION_LABEL AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[INS_AVAILABLE_INSPECTION_TEXT_ID] int  NULL,
[IS_GIVEN] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_INSPECTION_LABEL
@source as dbo.TVP_INS_INSPECTION_LABEL READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_INSPECTION_LABEL] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_AVAILABLE_INSPECTION_TEXT_ID] = SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], TARGET.[IS_GIVEN] = SOURCE.[IS_GIVEN], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [INS_AVAILABLE_INSPECTION_TEXT_ID], [IS_GIVEN], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[INS_AVAILABLE_INSPECTION_TEXT_ID], SOURCE.[IS_GIVEN], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_INSPECTION_TEXT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_INSPECTION_TEXT

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_INSPECTION_TEXT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_INSPECTION_TEXT

GO

CREATE TYPE [dbo].TVP_INS_INSPECTION_TEXT AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[SYS_INFO_KEY_ID] int  NULL,
[TEXT] nvarchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_INSPECTION_TEXT
@source as dbo.TVP_INS_INSPECTION_TEXT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_INSPECTION_TEXT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SYS_INFO_KEY_ID] = SOURCE.[SYS_INFO_KEY_ID], TARGET.[TEXT] = SOURCE.[TEXT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [SYS_INFO_KEY_ID], [TEXT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[SYS_INFO_KEY_ID], SOURCE.[TEXT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_ADDRESS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_ADDRESS

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_ADDRESS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_ADDRESS

GO

CREATE TYPE [dbo].TVP_ORD_ADDRESS AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[NAME_1] nvarchar (90) NULL,
[NAME_2] nvarchar (90) NULL,
[NAME_3] nvarchar (90) NULL,
[STREET] nvarchar (220) NULL,
[ZIP_CODE] varchar (90) NULL,
[ZIP_BOX] varchar (90) NULL,
[TELEFON_1] varchar (90) NULL,
[FAX] varchar (90) NULL,
[MOBILE_TELEFON] varchar (90) NULL,
[BOX] varchar (90) NULL,
[TELEFON_2] varchar (90) NULL,
[CITY] varchar (160) NULL,
[SYS_COUNTRY_ID] int  NULL,
[EMAIL] varchar (100) NULL,
[UST_ID] varchar (50) NULL,
[IS_LEGAL_FOREIGN] bit  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[IS_INSPECTION_LOCATION] bit  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_ADDRESS
@source as dbo.TVP_ORD_ADDRESS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_ADDRESS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[NAME_1] = SOURCE.[NAME_1], TARGET.[NAME_2] = SOURCE.[NAME_2], TARGET.[NAME_3] = SOURCE.[NAME_3], TARGET.[STREET] = SOURCE.[STREET], TARGET.[ZIP_CODE] = SOURCE.[ZIP_CODE], TARGET.[ZIP_BOX] = SOURCE.[ZIP_BOX], TARGET.[TELEFON_1] = SOURCE.[TELEFON_1], TARGET.[FAX] = SOURCE.[FAX], TARGET.[MOBILE_TELEFON] = SOURCE.[MOBILE_TELEFON], TARGET.[BOX] = SOURCE.[BOX], TARGET.[TELEFON_2] = SOURCE.[TELEFON_2], TARGET.[CITY] = SOURCE.[CITY], TARGET.[SYS_COUNTRY_ID] = SOURCE.[SYS_COUNTRY_ID], TARGET.[EMAIL] = SOURCE.[EMAIL], TARGET.[UST_ID] = SOURCE.[UST_ID], TARGET.[IS_LEGAL_FOREIGN] = SOURCE.[IS_LEGAL_FOREIGN], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[IS_INSPECTION_LOCATION] = SOURCE.[IS_INSPECTION_LOCATION]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [NAME_1], [NAME_2], [NAME_3], [STREET], [ZIP_CODE], [ZIP_BOX], [TELEFON_1], [FAX], [MOBILE_TELEFON], [BOX], [TELEFON_2], [CITY], [SYS_COUNTRY_ID], [EMAIL], [UST_ID], [IS_LEGAL_FOREIGN], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [IS_INSPECTION_LOCATION]
) VALUES (
SOURCE.[ID], SOURCE.[NAME_1], SOURCE.[NAME_2], SOURCE.[NAME_3], SOURCE.[STREET], SOURCE.[ZIP_CODE], SOURCE.[ZIP_BOX], SOURCE.[TELEFON_1], SOURCE.[FAX], SOURCE.[MOBILE_TELEFON], SOURCE.[BOX], SOURCE.[TELEFON_2], SOURCE.[CITY], SOURCE.[SYS_COUNTRY_ID], SOURCE.[EMAIL], SOURCE.[UST_ID], SOURCE.[IS_LEGAL_FOREIGN], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[IS_INSPECTION_LOCATION]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_DEVICE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_DEVICE

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_DEVICE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_DEVICE

GO

CREATE TYPE [dbo].TVP_ORD_DEVICE AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[TAG] nvarchar (50) NULL,
[CUSTOMER_TAG] nvarchar (50) NULL,
[SERIAL_NUMBER] varchar (50) NULL,
[PRODUCER] nvarchar (50) NULL,
[TYPE] nvarchar (50) NULL,
[MANUFACTURE_DATE] datetime2 (3) NULL,
[OPERATING_PRESSURE] nvarchar (50) NULL,
[CAPACITY] money  NULL,
[IS_VALID] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[VHL_MILE_AGE_ID] uniqueidentifier  NULL,
[LAST_INSPECTION_DATE] datetime2 (2) NULL,
[VEHICLE_LAST_INSPECTION_DATE_FORMAT] varchar (10) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_DEVICE
@source as dbo.TVP_ORD_DEVICE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_DEVICE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[TAG] = SOURCE.[TAG], TARGET.[CUSTOMER_TAG] = SOURCE.[CUSTOMER_TAG], TARGET.[SERIAL_NUMBER] = SOURCE.[SERIAL_NUMBER], TARGET.[PRODUCER] = SOURCE.[PRODUCER], TARGET.[TYPE] = SOURCE.[TYPE], TARGET.[MANUFACTURE_DATE] = SOURCE.[MANUFACTURE_DATE], TARGET.[OPERATING_PRESSURE] = SOURCE.[OPERATING_PRESSURE], TARGET.[CAPACITY] = SOURCE.[CAPACITY], TARGET.[IS_VALID] = SOURCE.[IS_VALID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[VHL_MILE_AGE_ID] = SOURCE.[VHL_MILE_AGE_ID], TARGET.[LAST_INSPECTION_DATE] = SOURCE.[LAST_INSPECTION_DATE], TARGET.[VEHICLE_LAST_INSPECTION_DATE_FORMAT] = SOURCE.[VEHICLE_LAST_INSPECTION_DATE_FORMAT]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [TAG], [CUSTOMER_TAG], [SERIAL_NUMBER], [PRODUCER], [TYPE], [MANUFACTURE_DATE], [OPERATING_PRESSURE], [CAPACITY], [IS_VALID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [VHL_MILE_AGE_ID], [LAST_INSPECTION_DATE], [VEHICLE_LAST_INSPECTION_DATE_FORMAT]
) VALUES (
SOURCE.[ID], SOURCE.[TAG], SOURCE.[CUSTOMER_TAG], SOURCE.[SERIAL_NUMBER], SOURCE.[PRODUCER], SOURCE.[TYPE], SOURCE.[MANUFACTURE_DATE], SOURCE.[OPERATING_PRESSURE], SOURCE.[CAPACITY], SOURCE.[IS_VALID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[VHL_MILE_AGE_ID], SOURCE.[LAST_INSPECTION_DATE], SOURCE.[VEHICLE_LAST_INSPECTION_DATE_FORMAT]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_PRODUCER_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_PRODUCER_TYPE

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_PRODUCER_TYPE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_PRODUCER_TYPE

GO

CREATE TYPE [dbo].TVP_VHL_PRODUCER_TYPE AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[VHL_PRODUCER_ID] uniqueidentifier  NOT NULL,
[VHL_TYPE_ID] uniqueidentifier  NOT NULL,
[ABE] varchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_PRODUCER_TYPE
@source as dbo.TVP_VHL_PRODUCER_TYPE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_PRODUCER_TYPE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[VHL_PRODUCER_ID] = SOURCE.[VHL_PRODUCER_ID], TARGET.[VHL_TYPE_ID] = SOURCE.[VHL_TYPE_ID], TARGET.[ABE] = SOURCE.[ABE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [VHL_PRODUCER_ID], [VHL_TYPE_ID], [ABE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[VHL_PRODUCER_ID], SOURCE.[VHL_TYPE_ID], SOURCE.[ABE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_INSPECTION_RESULT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_INSPECTION_RESULT

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_INSPECTION_RESULT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_INSPECTION_RESULT

GO

CREATE TYPE [dbo].TVP_INS_INSPECTION_RESULT AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[EXAMINATED_DATE] datetime2 (2) NULL,
[FSDHU_VERSION] nvarchar (50) NULL,
[FINAL_DEFECT_ID] uniqueidentifier  NULL,
[INTERMEDIATE_DEFECT_ID] uniqueidentifier  NULL,
[INS_INSPECTION_LABEL_ID] uniqueidentifier  NULL,
[INS_NEXT_INSPECTION_ID] int  NULL,
[NEXT_SP_INSPECTION] datetime2 (3) NULL,
[FINAL_SEVERITY_TYPE_ID] int  NULL,
[INTERMEDIATE_SEVERITY_TYPE_ID] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[CUSTOM_VALID_PERIOD] int  NULL,
[INS_VALID_PERIOD_ID] int  NULL,
[PRINT_AU_DATA] bit  NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_INSPECTION_RESULT
@source as dbo.TVP_INS_INSPECTION_RESULT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_INSPECTION_RESULT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EXAMINATED_DATE] = SOURCE.[EXAMINATED_DATE], TARGET.[FSDHU_VERSION] = SOURCE.[FSDHU_VERSION], TARGET.[FINAL_DEFECT_ID] = SOURCE.[FINAL_DEFECT_ID], TARGET.[INTERMEDIATE_DEFECT_ID] = SOURCE.[INTERMEDIATE_DEFECT_ID], TARGET.[INS_INSPECTION_LABEL_ID] = SOURCE.[INS_INSPECTION_LABEL_ID], TARGET.[INS_NEXT_INSPECTION_ID] = SOURCE.[INS_NEXT_INSPECTION_ID], TARGET.[NEXT_SP_INSPECTION] = SOURCE.[NEXT_SP_INSPECTION], TARGET.[FINAL_SEVERITY_TYPE_ID] = SOURCE.[FINAL_SEVERITY_TYPE_ID], TARGET.[INTERMEDIATE_SEVERITY_TYPE_ID] = SOURCE.[INTERMEDIATE_SEVERITY_TYPE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[CUSTOM_VALID_PERIOD] = SOURCE.[CUSTOM_VALID_PERIOD], TARGET.[INS_VALID_PERIOD_ID] = SOURCE.[INS_VALID_PERIOD_ID], TARGET.[PRINT_AU_DATA] = SOURCE.[PRINT_AU_DATA]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [EXAMINATED_DATE], [FSDHU_VERSION], [FINAL_DEFECT_ID], [INTERMEDIATE_DEFECT_ID], [INS_INSPECTION_LABEL_ID], [INS_NEXT_INSPECTION_ID], [NEXT_SP_INSPECTION], [FINAL_SEVERITY_TYPE_ID], [INTERMEDIATE_SEVERITY_TYPE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [CUSTOM_VALID_PERIOD], [INS_VALID_PERIOD_ID], [PRINT_AU_DATA]
) VALUES (
SOURCE.[ID], SOURCE.[EXAMINATED_DATE], SOURCE.[FSDHU_VERSION], SOURCE.[FINAL_DEFECT_ID], SOURCE.[INTERMEDIATE_DEFECT_ID], SOURCE.[INS_INSPECTION_LABEL_ID], SOURCE.[INS_NEXT_INSPECTION_ID], SOURCE.[NEXT_SP_INSPECTION], SOURCE.[FINAL_SEVERITY_TYPE_ID], SOURCE.[INTERMEDIATE_SEVERITY_TYPE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[CUSTOM_VALID_PERIOD], SOURCE.[INS_VALID_PERIOD_ID], SOURCE.[PRINT_AU_DATA]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_PERSON' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_PERSON

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_PERSON' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_PERSON

GO

CREATE TYPE [dbo].TVP_ORD_PERSON AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_ADDRESS_ID] uniqueidentifier  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_PERSON
@source as dbo.TVP_ORD_PERSON READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_PERSON] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_ADDRESS_ID] = SOURCE.[ORD_ADDRESS_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_ADDRESS_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_ADDRESS_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_VERSION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_VERSION

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_VERSION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_VERSION

GO

CREATE TYPE [dbo].TVP_VHL_VERSION AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[VERSION_TYPE] nvarchar (50) NOT NULL,
[TEXT_VARIANT] nvarchar (50) NULL,
[TEXT_VERSION] nvarchar (50) NULL,
[VHL_PRODUCER_TYPE_ID] uniqueidentifier  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_VERSION
@source as dbo.TVP_VHL_VERSION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_VERSION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[VERSION_TYPE] = SOURCE.[VERSION_TYPE], TARGET.[TEXT_VARIANT] = SOURCE.[TEXT_VARIANT], TARGET.[TEXT_VERSION] = SOURCE.[TEXT_VERSION], TARGET.[VHL_PRODUCER_TYPE_ID] = SOURCE.[VHL_PRODUCER_TYPE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [VERSION_TYPE], [TEXT_VARIANT], [TEXT_VERSION], [VHL_PRODUCER_TYPE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[VERSION_TYPE], SOURCE.[TEXT_VARIANT], SOURCE.[TEXT_VERSION], SOURCE.[VHL_PRODUCER_TYPE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_ASA_ERROR_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_ASA_ERROR_DATA

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_ASA_ERROR_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_ASA_ERROR_DATA

GO

CREATE TYPE [dbo].TVP_INS_ASA_ERROR_DATA AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[INS_INSPECTION_RESULT_ID] uniqueidentifier  NOT NULL,
[ERROR_CODE] varchar (10) NOT NULL,
[ERROR_TEXT] varchar (250) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[IS_MANUAL] bit  NOT NULL,
[ERROR_CLASS] varchar (2) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_ASA_ERROR_DATA
@source as dbo.TVP_INS_ASA_ERROR_DATA READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_ASA_ERROR_DATA] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_INSPECTION_RESULT_ID] = SOURCE.[INS_INSPECTION_RESULT_ID], TARGET.[ERROR_CODE] = SOURCE.[ERROR_CODE], TARGET.[ERROR_TEXT] = SOURCE.[ERROR_TEXT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[IS_MANUAL] = SOURCE.[IS_MANUAL], TARGET.[ERROR_CLASS] = SOURCE.[ERROR_CLASS]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [INS_INSPECTION_RESULT_ID], [ERROR_CODE], [ERROR_TEXT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [IS_MANUAL], [ERROR_CLASS]
) VALUES (
SOURCE.[ID], SOURCE.[INS_INSPECTION_RESULT_ID], SOURCE.[ERROR_CODE], SOURCE.[ERROR_TEXT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[IS_MANUAL], SOURCE.[ERROR_CLASS]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_ASA_PROBE_SIGNAL_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_ASA_PROBE_SIGNAL_DATA

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_ASA_PROBE_SIGNAL_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_ASA_PROBE_SIGNAL_DATA

GO

CREATE TYPE [dbo].TVP_INS_ASA_PROBE_SIGNAL_DATA AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[INS_INSPECTION_RESULT_ID] uniqueidentifier  NOT NULL,
[TITLE] nvarchar (50) NULL,
[UNIT] nvarchar (50) NULL,
[LOWLIM] nvarchar (50) NULL,
[HIGHLIM] nvarchar (50) NULL,
[VALUE] nvarchar (50) NULL,
[RESULT] nvarchar (50) NULL,
[LOC] int  NOT NULL,
[IS_MANUAL] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_ASA_PROBE_SIGNAL_DATA
@source as dbo.TVP_INS_ASA_PROBE_SIGNAL_DATA READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_ASA_PROBE_SIGNAL_DATA] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_INSPECTION_RESULT_ID] = SOURCE.[INS_INSPECTION_RESULT_ID], TARGET.[TITLE] = SOURCE.[TITLE], TARGET.[UNIT] = SOURCE.[UNIT], TARGET.[LOWLIM] = SOURCE.[LOWLIM], TARGET.[HIGHLIM] = SOURCE.[HIGHLIM], TARGET.[VALUE] = SOURCE.[VALUE], TARGET.[RESULT] = SOURCE.[RESULT], TARGET.[LOC] = SOURCE.[LOC], TARGET.[IS_MANUAL] = SOURCE.[IS_MANUAL], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [INS_INSPECTION_RESULT_ID], [TITLE], [UNIT], [LOWLIM], [HIGHLIM], [VALUE], [RESULT], [LOC], [IS_MANUAL], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[INS_INSPECTION_RESULT_ID], SOURCE.[TITLE], SOURCE.[UNIT], SOURCE.[LOWLIM], SOURCE.[HIGHLIM], SOURCE.[VALUE], SOURCE.[RESULT], SOURCE.[LOC], SOURCE.[IS_MANUAL], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_EG_DOC_VEHICLE_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_EG_DOC_VEHICLE_DATA

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_EG_DOC_VEHICLE_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_EG_DOC_VEHICLE_DATA

GO

CREATE TYPE [dbo].TVP_INS_EG_DOC_VEHICLE_DATA AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[INS_INSPECTION_RESULT_ID] uniqueidentifier  NOT NULL,
[PROPERTY_NAME] varchar (50) NULL,
[PROPERTY_VALUE] nvarchar (400) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_EG_DOC_VEHICLE_DATA
@source as dbo.TVP_INS_EG_DOC_VEHICLE_DATA READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_EG_DOC_VEHICLE_DATA] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_INSPECTION_RESULT_ID] = SOURCE.[INS_INSPECTION_RESULT_ID], TARGET.[PROPERTY_NAME] = SOURCE.[PROPERTY_NAME], TARGET.[PROPERTY_VALUE] = SOURCE.[PROPERTY_VALUE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [INS_INSPECTION_RESULT_ID], [PROPERTY_NAME], [PROPERTY_VALUE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[INS_INSPECTION_RESULT_ID], SOURCE.[PROPERTY_NAME], SOURCE.[PROPERTY_VALUE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_EXECUTABLE_INSPECTION_STEP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_EXECUTABLE_INSPECTION_STEP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_EXECUTABLE_INSPECTION_STEP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_EXECUTABLE_INSPECTION_STEP

GO

CREATE TYPE [dbo].TVP_INS_EXECUTABLE_INSPECTION_STEP AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[INS_AVAILABLE_INSPECTION_STEP_ID] int  NOT NULL,
[INSPECTED_EMPLOYEE_ID] int  NULL,
[IS_EXECUTED] bit  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_EXECUTABLE_INSPECTION_STEP
@source as dbo.TVP_INS_EXECUTABLE_INSPECTION_STEP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_EXECUTABLE_INSPECTION_STEP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_AVAILABLE_INSPECTION_STEP_ID] = SOURCE.[INS_AVAILABLE_INSPECTION_STEP_ID], TARGET.[INSPECTED_EMPLOYEE_ID] = SOURCE.[INSPECTED_EMPLOYEE_ID], TARGET.[IS_EXECUTED] = SOURCE.[IS_EXECUTED], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [INS_AVAILABLE_INSPECTION_STEP_ID], [INSPECTED_EMPLOYEE_ID], [IS_EXECUTED], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[INS_AVAILABLE_INSPECTION_STEP_ID], SOURCE.[INSPECTED_EMPLOYEE_ID], SOURCE.[IS_EXECUTED], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_FOUND_DEFECT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_FOUND_DEFECT

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_FOUND_DEFECT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_FOUND_DEFECT

GO

CREATE TYPE [dbo].TVP_INS_FOUND_DEFECT AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[DESCRIPTION] nvarchar (500) NULL,
[TIME_FOR_FIXING] time (7) NULL,
[INS_DEFECT_ID] uniqueidentifier  NULL,
[DEFECT_TREE_VERSION] nvarchar (50) NULL,
[INSPECTION_TIME] datetime2 (3) NULL,
[REPAIR_TIME] datetime2 (3) NULL,
[IS_FREE_TEXT] bit  NULL,
[INS_INSPECTION_RESULT_ID] uniqueidentifier  NULL,
[CREATE_DATE] datetime2 (3) NULL,
[CHANGE_DATE] datetime2 (3) NULL,
[DELETE_DATE] datetime2 (3) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_FOUND_DEFECT
@source as dbo.TVP_INS_FOUND_DEFECT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_FOUND_DEFECT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[TIME_FOR_FIXING] = SOURCE.[TIME_FOR_FIXING], TARGET.[INS_DEFECT_ID] = SOURCE.[INS_DEFECT_ID], TARGET.[DEFECT_TREE_VERSION] = SOURCE.[DEFECT_TREE_VERSION], TARGET.[INSPECTION_TIME] = SOURCE.[INSPECTION_TIME], TARGET.[REPAIR_TIME] = SOURCE.[REPAIR_TIME], TARGET.[IS_FREE_TEXT] = SOURCE.[IS_FREE_TEXT], TARGET.[INS_INSPECTION_RESULT_ID] = SOURCE.[INS_INSPECTION_RESULT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [DESCRIPTION], [TIME_FOR_FIXING], [INS_DEFECT_ID], [DEFECT_TREE_VERSION], [INSPECTION_TIME], [REPAIR_TIME], [IS_FREE_TEXT], [INS_INSPECTION_RESULT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[DESCRIPTION], SOURCE.[TIME_FOR_FIXING], SOURCE.[INS_DEFECT_ID], SOURCE.[DEFECT_TREE_VERSION], SOURCE.[INSPECTION_TIME], SOURCE.[REPAIR_TIME], SOURCE.[IS_FREE_TEXT], SOURCE.[INS_INSPECTION_RESULT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_FOUND_OPTICAL_DEFECT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_FOUND_OPTICAL_DEFECT

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_FOUND_OPTICAL_DEFECT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_FOUND_OPTICAL_DEFECT

GO

CREATE TYPE [dbo].TVP_INS_FOUND_OPTICAL_DEFECT AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[DESCRIPTION] nvarchar (50) NULL,
[INS_OPTICAL_DEFECT_ID] int  NOT NULL,
[VALUE_X] decimal (7,3) NOT NULL,
[VALUE_Y] decimal (7,3) NOT NULL,
[INS_INSPECTION_RESULT_ID] uniqueidentifier  NULL,
[CREATE_DATE] datetime2 (3) NULL,
[CHANGE_DATE] datetime2 (3) NULL,
[DELETE_DATE] datetime2 (3) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_FOUND_OPTICAL_DEFECT
@source as dbo.TVP_INS_FOUND_OPTICAL_DEFECT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_FOUND_OPTICAL_DEFECT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[INS_OPTICAL_DEFECT_ID] = SOURCE.[INS_OPTICAL_DEFECT_ID], TARGET.[VALUE_X] = SOURCE.[VALUE_X], TARGET.[VALUE_Y] = SOURCE.[VALUE_Y], TARGET.[INS_INSPECTION_RESULT_ID] = SOURCE.[INS_INSPECTION_RESULT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [DESCRIPTION], [INS_OPTICAL_DEFECT_ID], [VALUE_X], [VALUE_Y], [INS_INSPECTION_RESULT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[DESCRIPTION], SOURCE.[INS_OPTICAL_DEFECT_ID], SOURCE.[VALUE_X], SOURCE.[VALUE_Y], SOURCE.[INS_INSPECTION_RESULT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_INSPECTION_REPORT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_INSPECTION_REPORT

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_INSPECTION_REPORT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_INSPECTION_REPORT

GO

CREATE TYPE [dbo].TVP_INS_INSPECTION_REPORT AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[REPORT_NUMBER] char (17) NULL,
[REPORT_DATE] datetime2 (3) NULL,
[INS_INSPECTION_REPORT_STATUS_ID] int  NULL,
[CREATED_EMPLOYEE_ID] int  NULL,
[IS_PRINTED] bit  NOT NULL,
[CHILD_RESULT_ID] uniqueidentifier  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[PBZ_EXPORT_DATE] datetime2 (3) NULL,
[INS_INSPECTION_REPORT_BINARY_DATA_ID] uniqueidentifier  NULL,
[INS_INSPECTION_RESULT_ID] uniqueidentifier  NULL,
[DATA] nvarchar (max) NULL,
[IS_HISTORICAL] bit  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_INSPECTION_REPORT
@source as dbo.TVP_INS_INSPECTION_REPORT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_INSPECTION_REPORT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[REPORT_NUMBER] = SOURCE.[REPORT_NUMBER], TARGET.[REPORT_DATE] = SOURCE.[REPORT_DATE], TARGET.[INS_INSPECTION_REPORT_STATUS_ID] = SOURCE.[INS_INSPECTION_REPORT_STATUS_ID], TARGET.[CREATED_EMPLOYEE_ID] = SOURCE.[CREATED_EMPLOYEE_ID], TARGET.[IS_PRINTED] = SOURCE.[IS_PRINTED], TARGET.[CHILD_RESULT_ID] = SOURCE.[CHILD_RESULT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[PBZ_EXPORT_DATE] = SOURCE.[PBZ_EXPORT_DATE], TARGET.[INS_INSPECTION_REPORT_BINARY_DATA_ID] = SOURCE.[INS_INSPECTION_REPORT_BINARY_DATA_ID], TARGET.[INS_INSPECTION_RESULT_ID] = SOURCE.[INS_INSPECTION_RESULT_ID], TARGET.[DATA] = SOURCE.[DATA], TARGET.[IS_HISTORICAL] = SOURCE.[IS_HISTORICAL]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [REPORT_NUMBER], [REPORT_DATE], [INS_INSPECTION_REPORT_STATUS_ID], [CREATED_EMPLOYEE_ID], [IS_PRINTED], [CHILD_RESULT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [PBZ_EXPORT_DATE], [INS_INSPECTION_REPORT_BINARY_DATA_ID], [INS_INSPECTION_RESULT_ID], [DATA], [IS_HISTORICAL]
) VALUES (
SOURCE.[ID], SOURCE.[REPORT_NUMBER], SOURCE.[REPORT_DATE], SOURCE.[INS_INSPECTION_REPORT_STATUS_ID], SOURCE.[CREATED_EMPLOYEE_ID], SOURCE.[IS_PRINTED], SOURCE.[CHILD_RESULT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[PBZ_EXPORT_DATE], SOURCE.[INS_INSPECTION_REPORT_BINARY_DATA_ID], SOURCE.[INS_INSPECTION_RESULT_ID], SOURCE.[DATA], SOURCE.[IS_HISTORICAL]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_MEASURED_VALUE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_MEASURED_VALUE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_MEASURED_VALUE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_MEASURED_VALUE

GO

CREATE TYPE [dbo].TVP_INS_MEASURED_VALUE AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[INS_MEASURABLE_VALUE_ID] int  NULL,
[INS_INSPECTION_RESULT_ID] uniqueidentifier  NOT NULL,
[VALUE] nvarchar (120) NULL,
[IS_MANUAL] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_MEASURED_VALUE
@source as dbo.TVP_INS_MEASURED_VALUE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_MEASURED_VALUE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_MEASURABLE_VALUE_ID] = SOURCE.[INS_MEASURABLE_VALUE_ID], TARGET.[INS_INSPECTION_RESULT_ID] = SOURCE.[INS_INSPECTION_RESULT_ID], TARGET.[VALUE] = SOURCE.[VALUE], TARGET.[IS_MANUAL] = SOURCE.[IS_MANUAL], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [INS_MEASURABLE_VALUE_ID], [INS_INSPECTION_RESULT_ID], [VALUE], [IS_MANUAL], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[INS_MEASURABLE_VALUE_ID], SOURCE.[INS_INSPECTION_RESULT_ID], SOURCE.[VALUE], SOURCE.[IS_MANUAL], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_OTHER_VALUE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_OTHER_VALUE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_OTHER_VALUE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_OTHER_VALUE

GO

CREATE TYPE [dbo].TVP_INS_OTHER_VALUE AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[INS_NOT_MEASURABLE_VALUE_ID] int  NULL,
[VALUE] nvarchar (max) NULL,
[INS_INSPECTION_RESULT_ID] uniqueidentifier  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_OTHER_VALUE
@source as dbo.TVP_INS_OTHER_VALUE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_OTHER_VALUE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_NOT_MEASURABLE_VALUE_ID] = SOURCE.[INS_NOT_MEASURABLE_VALUE_ID], TARGET.[VALUE] = SOURCE.[VALUE], TARGET.[INS_INSPECTION_RESULT_ID] = SOURCE.[INS_INSPECTION_RESULT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [INS_NOT_MEASURABLE_VALUE_ID], [VALUE], [INS_INSPECTION_RESULT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[INS_NOT_MEASURABLE_VALUE_ID], SOURCE.[VALUE], SOURCE.[INS_INSPECTION_RESULT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PFP_DEFECT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PFP_DEFECT

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PFP_DEFECT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PFP_DEFECT

GO

CREATE TYPE [dbo].TVP_INS_PFP_DEFECT AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[INS_PFP_POSITION_ID] int  NULL,
[IS_OK] bit  NULL,
[DESCRIPTION] nvarchar (800) NOT NULL,
[INS_INSPECTION_RESULT_ID] uniqueidentifier  NULL,
[CREATE_DATE] datetime2 (3) NULL,
[CHANGE_DATE] datetime2 (3) NULL,
[DELETE_DATE] datetime2 (3) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PFP_DEFECT
@source as dbo.TVP_INS_PFP_DEFECT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PFP_DEFECT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INS_PFP_POSITION_ID] = SOURCE.[INS_PFP_POSITION_ID], TARGET.[IS_OK] = SOURCE.[IS_OK], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[INS_INSPECTION_RESULT_ID] = SOURCE.[INS_INSPECTION_RESULT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [INS_PFP_POSITION_ID], [IS_OK], [DESCRIPTION], [INS_INSPECTION_RESULT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[INS_PFP_POSITION_ID], SOURCE.[IS_OK], SOURCE.[DESCRIPTION], SOURCE.[INS_INSPECTION_RESULT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_PFP_NOTE_DEFECT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_PFP_NOTE_DEFECT

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_PFP_NOTE_DEFECT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_PFP_NOTE_DEFECT

GO

CREATE TYPE [dbo].TVP_INS_PFP_NOTE_DEFECT AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[TEXT] nvarchar (max) NOT NULL,
[INS_INSPECTION_RESULT_ID] uniqueidentifier  NULL,
[CREATE_DATE] datetime2 (3) NULL,
[CHANGE_DATE] datetime2 (3) NULL,
[DELETE_DATE] datetime2 (3) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_PFP_NOTE_DEFECT
@source as dbo.TVP_INS_PFP_NOTE_DEFECT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_PFP_NOTE_DEFECT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[TEXT] = SOURCE.[TEXT], TARGET.[INS_INSPECTION_RESULT_ID] = SOURCE.[INS_INSPECTION_RESULT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [TEXT], [INS_INSPECTION_RESULT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[TEXT], SOURCE.[INS_INSPECTION_RESULT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_ORDER' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_ORDER

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_ORDER' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_ORDER

GO

CREATE TYPE [dbo].TVP_ORD_ORDER AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORDER_NUMBER] char (10) NOT NULL,
[ORD_ORDER_STATUS_ID] int  NOT NULL,
[ORD_ORDER_TYPE_ID] int  NOT NULL,
[OPEN_DATE] datetime2 (3) NULL,
[CLOSED_DATE] datetime2 (3) NULL,
[ORD_BILL_TYPE_ID] int  NOT NULL,
[ORDER_FREETEXT] nvarchar (50) NULL,
[ORD_ACCOUNT_PARAMETER_ID] uniqueidentifier  NULL,
[ORD_CUSTOMER_ID] int  NULL,
[EMP_EMPLOYEE_ID] int  NULL,
[ORD_ORDER_FOLDER_ID] uniqueidentifier  NULL,
[SAP_STATUS] int  NULL,
[ORD_ADDRESS_ID] uniqueidentifier  NULL,
[ORD_ORDER_CANCELATION_REASON_ID] int  NULL,
[ORD_CANCELATION_REASON_TEXT] nvarchar (1024) NULL,
[ORDER_PARENT_ID] uniqueidentifier  NULL,
[INCLUDE_TAX] bit  NOT NULL,
[PROCESSED_ESCALATION_LEVEL] int  NULL,
[PBZ_EXPORT_DATE] datetime2 (3) NULL,
[CUSTOMER_REMARK] nvarchar (180) NULL,
[CANCEL_DATE] datetime2 (7) NULL,
[IS_COLLECTION_LIST_CHOISE_SAVED] bit  NOT NULL,
[IS_CUSTOMER_WITH_ADDRESS_VALID] bit  NOT NULL,
[INVOICE_RECIPIENT] char (10) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[EMP_CORE_ADDRESS_ID] int  NOT NULL,
[IS_FOLDER_SET_MANUALLY] bit  NOT NULL,
[SOURCE_ORDER_CREATE_DATE] datetime2 (3) NULL,
[SYS_SYNC_STATUS_ID] int  NOT NULL,
[KSS_INVOICE_ID] int  NULL,
[IN_PROCESSING] bit  NOT NULL,
[SYNC_DATE] datetime2 (2) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_ORDER
@source as dbo.TVP_ORD_ORDER READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_ORDER] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORDER_NUMBER] = SOURCE.[ORDER_NUMBER], TARGET.[ORD_ORDER_STATUS_ID] = SOURCE.[ORD_ORDER_STATUS_ID], TARGET.[ORD_ORDER_TYPE_ID] = SOURCE.[ORD_ORDER_TYPE_ID], TARGET.[OPEN_DATE] = SOURCE.[OPEN_DATE], TARGET.[CLOSED_DATE] = SOURCE.[CLOSED_DATE], TARGET.[ORD_BILL_TYPE_ID] = SOURCE.[ORD_BILL_TYPE_ID], TARGET.[ORDER_FREETEXT] = SOURCE.[ORDER_FREETEXT], TARGET.[ORD_ACCOUNT_PARAMETER_ID] = SOURCE.[ORD_ACCOUNT_PARAMETER_ID], TARGET.[ORD_CUSTOMER_ID] = SOURCE.[ORD_CUSTOMER_ID], TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[ORD_ORDER_FOLDER_ID] = SOURCE.[ORD_ORDER_FOLDER_ID], TARGET.[SAP_STATUS] = SOURCE.[SAP_STATUS], TARGET.[ORD_ADDRESS_ID] = SOURCE.[ORD_ADDRESS_ID], TARGET.[ORD_ORDER_CANCELATION_REASON_ID] = SOURCE.[ORD_ORDER_CANCELATION_REASON_ID], TARGET.[ORD_CANCELATION_REASON_TEXT] = SOURCE.[ORD_CANCELATION_REASON_TEXT], TARGET.[ORDER_PARENT_ID] = SOURCE.[ORDER_PARENT_ID], TARGET.[INCLUDE_TAX] = SOURCE.[INCLUDE_TAX], TARGET.[PROCESSED_ESCALATION_LEVEL] = SOURCE.[PROCESSED_ESCALATION_LEVEL], TARGET.[PBZ_EXPORT_DATE] = SOURCE.[PBZ_EXPORT_DATE], TARGET.[CUSTOMER_REMARK] = SOURCE.[CUSTOMER_REMARK], TARGET.[CANCEL_DATE] = SOURCE.[CANCEL_DATE], TARGET.[IS_COLLECTION_LIST_CHOISE_SAVED] = SOURCE.[IS_COLLECTION_LIST_CHOISE_SAVED], TARGET.[IS_CUSTOMER_WITH_ADDRESS_VALID] = SOURCE.[IS_CUSTOMER_WITH_ADDRESS_VALID], TARGET.[INVOICE_RECIPIENT] = SOURCE.[INVOICE_RECIPIENT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[EMP_CORE_ADDRESS_ID] = SOURCE.[EMP_CORE_ADDRESS_ID], TARGET.[IS_FOLDER_SET_MANUALLY] = SOURCE.[IS_FOLDER_SET_MANUALLY], TARGET.[SOURCE_ORDER_CREATE_DATE] = SOURCE.[SOURCE_ORDER_CREATE_DATE], TARGET.[SYS_SYNC_STATUS_ID] = SOURCE.[SYS_SYNC_STATUS_ID], TARGET.[KSS_INVOICE_ID] = SOURCE.[KSS_INVOICE_ID], TARGET.[IN_PROCESSING] = SOURCE.[IN_PROCESSING], TARGET.[SYNC_DATE] = SOURCE.[SYNC_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORDER_NUMBER], [ORD_ORDER_STATUS_ID], [ORD_ORDER_TYPE_ID], [OPEN_DATE], [CLOSED_DATE], [ORD_BILL_TYPE_ID], [ORDER_FREETEXT], [ORD_ACCOUNT_PARAMETER_ID], [ORD_CUSTOMER_ID], [EMP_EMPLOYEE_ID], [ORD_ORDER_FOLDER_ID], [SAP_STATUS], [ORD_ADDRESS_ID], [ORD_ORDER_CANCELATION_REASON_ID], [ORD_CANCELATION_REASON_TEXT], [ORDER_PARENT_ID], [INCLUDE_TAX], [PROCESSED_ESCALATION_LEVEL], [PBZ_EXPORT_DATE], [CUSTOMER_REMARK], [CANCEL_DATE], [IS_COLLECTION_LIST_CHOISE_SAVED], [IS_CUSTOMER_WITH_ADDRESS_VALID], [INVOICE_RECIPIENT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [EMP_CORE_ADDRESS_ID], [IS_FOLDER_SET_MANUALLY], [SOURCE_ORDER_CREATE_DATE], [SYS_SYNC_STATUS_ID], [KSS_INVOICE_ID], [IN_PROCESSING], [SYNC_DATE]
) VALUES (
SOURCE.[ID], SOURCE.[ORDER_NUMBER], SOURCE.[ORD_ORDER_STATUS_ID], SOURCE.[ORD_ORDER_TYPE_ID], SOURCE.[OPEN_DATE], SOURCE.[CLOSED_DATE], SOURCE.[ORD_BILL_TYPE_ID], SOURCE.[ORDER_FREETEXT], SOURCE.[ORD_ACCOUNT_PARAMETER_ID], SOURCE.[ORD_CUSTOMER_ID], SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[ORD_ORDER_FOLDER_ID], SOURCE.[SAP_STATUS], SOURCE.[ORD_ADDRESS_ID], SOURCE.[ORD_ORDER_CANCELATION_REASON_ID], SOURCE.[ORD_CANCELATION_REASON_TEXT], SOURCE.[ORDER_PARENT_ID], SOURCE.[INCLUDE_TAX], SOURCE.[PROCESSED_ESCALATION_LEVEL], SOURCE.[PBZ_EXPORT_DATE], SOURCE.[CUSTOMER_REMARK], SOURCE.[CANCEL_DATE], SOURCE.[IS_COLLECTION_LIST_CHOISE_SAVED], SOURCE.[IS_CUSTOMER_WITH_ADDRESS_VALID], SOURCE.[INVOICE_RECIPIENT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[EMP_CORE_ADDRESS_ID], SOURCE.[IS_FOLDER_SET_MANUALLY], SOURCE.[SOURCE_ORDER_CREATE_DATE], SOURCE.[SYS_SYNC_STATUS_ID], SOURCE.[KSS_INVOICE_ID], SOURCE.[IN_PROCESSING], SOURCE.[SYNC_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_AXLE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_AXLE

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_AXLE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_AXLE

GO

CREATE TYPE [dbo].TVP_VHL_AXLE AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[AXLE_LOAD] int  NULL,
[VHL_VERSION_ID] uniqueidentifier  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_AXLE
@source as dbo.TVP_VHL_AXLE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_AXLE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[AXLE_LOAD] = SOURCE.[AXLE_LOAD], TARGET.[VHL_VERSION_ID] = SOURCE.[VHL_VERSION_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [AXLE_LOAD], [VHL_VERSION_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[AXLE_LOAD], SOURCE.[VHL_VERSION_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_VEHICLE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_VEHICLE

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_VEHICLE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_VEHICLE

GO

CREATE TYPE [dbo].TVP_VHL_VEHICLE AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[VIN] nvarchar (50) NULL,
[REGISTRATION_NUMBER] varchar (100) NULL,
[REGISTRATION_DATE] datetime2 (2) NULL,
[LAST_INSPECTION_DATE] datetime2 (2) NULL,
[VEHICLE_YEAR] int  NULL,
[VHL_MILE_AGE_ID] uniqueidentifier  NULL,
[VHL_BODY_ID] uniqueidentifier  NULL,
[VHL_CLASS_ID] uniqueidentifier  NULL,
[VHL_FUEL_TYPE_ID] uniqueidentifier  NULL,
[VHL_EMISSION_CLASS_ID] uniqueidentifier  NULL,
[VHL_VERSION_ID] uniqueidentifier  NULL,
[VEHICLE_APPROVED] bit  NOT NULL,
[MAX_PERMITTED_WEIGHT] int  NULL,
[INS_PRODUCT_OBJECT_TYPE_ID] int  NULL,
[IS_VALID] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[EXPIRATION_DATE] datetime2 (2) NULL,
[VEHICLE_LAST_INSPECTION_DATE_FORMAT] varchar (10) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_VEHICLE
@source as dbo.TVP_VHL_VEHICLE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_VEHICLE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[VIN] = SOURCE.[VIN], TARGET.[REGISTRATION_NUMBER] = SOURCE.[REGISTRATION_NUMBER], TARGET.[REGISTRATION_DATE] = SOURCE.[REGISTRATION_DATE], TARGET.[LAST_INSPECTION_DATE] = SOURCE.[LAST_INSPECTION_DATE], TARGET.[VEHICLE_YEAR] = SOURCE.[VEHICLE_YEAR], TARGET.[VHL_MILE_AGE_ID] = SOURCE.[VHL_MILE_AGE_ID], TARGET.[VHL_BODY_ID] = SOURCE.[VHL_BODY_ID], TARGET.[VHL_CLASS_ID] = SOURCE.[VHL_CLASS_ID], TARGET.[VHL_FUEL_TYPE_ID] = SOURCE.[VHL_FUEL_TYPE_ID], TARGET.[VHL_EMISSION_CLASS_ID] = SOURCE.[VHL_EMISSION_CLASS_ID], TARGET.[VHL_VERSION_ID] = SOURCE.[VHL_VERSION_ID], TARGET.[VEHICLE_APPROVED] = SOURCE.[VEHICLE_APPROVED], TARGET.[MAX_PERMITTED_WEIGHT] = SOURCE.[MAX_PERMITTED_WEIGHT], TARGET.[INS_PRODUCT_OBJECT_TYPE_ID] = SOURCE.[INS_PRODUCT_OBJECT_TYPE_ID], TARGET.[IS_VALID] = SOURCE.[IS_VALID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[EXPIRATION_DATE] = SOURCE.[EXPIRATION_DATE], TARGET.[VEHICLE_LAST_INSPECTION_DATE_FORMAT] = SOURCE.[VEHICLE_LAST_INSPECTION_DATE_FORMAT]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [VIN], [REGISTRATION_NUMBER], [REGISTRATION_DATE], [LAST_INSPECTION_DATE], [VEHICLE_YEAR], [VHL_MILE_AGE_ID], [VHL_BODY_ID], [VHL_CLASS_ID], [VHL_FUEL_TYPE_ID], [VHL_EMISSION_CLASS_ID], [VHL_VERSION_ID], [VEHICLE_APPROVED], [MAX_PERMITTED_WEIGHT], [INS_PRODUCT_OBJECT_TYPE_ID], [IS_VALID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [EXPIRATION_DATE], [VEHICLE_LAST_INSPECTION_DATE_FORMAT]
) VALUES (
SOURCE.[ID], SOURCE.[VIN], SOURCE.[REGISTRATION_NUMBER], SOURCE.[REGISTRATION_DATE], SOURCE.[LAST_INSPECTION_DATE], SOURCE.[VEHICLE_YEAR], SOURCE.[VHL_MILE_AGE_ID], SOURCE.[VHL_BODY_ID], SOURCE.[VHL_CLASS_ID], SOURCE.[VHL_FUEL_TYPE_ID], SOURCE.[VHL_EMISSION_CLASS_ID], SOURCE.[VHL_VERSION_ID], SOURCE.[VEHICLE_APPROVED], SOURCE.[MAX_PERMITTED_WEIGHT], SOURCE.[INS_PRODUCT_OBJECT_TYPE_ID], SOURCE.[IS_VALID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[EXPIRATION_DATE], SOURCE.[VEHICLE_LAST_INSPECTION_DATE_FORMAT]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_ORDER_COMMON_BINARY_DATA_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_ORDER_COMMON_BINARY_DATA_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_ORDER_COMMON_BINARY_DATA_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_ORDER_COMMON_BINARY_DATA_RSP

GO

CREATE TYPE [dbo].TVP_INS_ORDER_COMMON_BINARY_DATA_RSP AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_ORDER_ID] uniqueidentifier  NOT NULL,
[INS_COMMON_BINARY_DATA_ID] uniqueidentifier  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_ORDER_COMMON_BINARY_DATA_RSP
@source as dbo.TVP_INS_ORDER_COMMON_BINARY_DATA_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_ORDER_COMMON_BINARY_DATA_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_ORDER_ID] = SOURCE.[ORD_ORDER_ID], TARGET.[INS_COMMON_BINARY_DATA_ID] = SOURCE.[INS_COMMON_BINARY_DATA_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_ORDER_ID], [INS_COMMON_BINARY_DATA_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_ORDER_ID], SOURCE.[INS_COMMON_BINARY_DATA_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_ORDER_INSPECTION_TEXT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_ORDER_INSPECTION_TEXT_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_ORDER_INSPECTION_TEXT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_ORDER_INSPECTION_TEXT_RSP

GO

CREATE TYPE [dbo].TVP_INS_ORDER_INSPECTION_TEXT_RSP AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_ORDER_ID] uniqueidentifier  NOT NULL,
[INS_INSPECTION_TEXT_ID] uniqueidentifier  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_ORDER_INSPECTION_TEXT_RSP
@source as dbo.TVP_INS_ORDER_INSPECTION_TEXT_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_ORDER_INSPECTION_TEXT_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_ORDER_ID] = SOURCE.[ORD_ORDER_ID], TARGET.[INS_INSPECTION_TEXT_ID] = SOURCE.[INS_INSPECTION_TEXT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_ORDER_ID], [INS_INSPECTION_TEXT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_ORDER_ID], SOURCE.[INS_INSPECTION_TEXT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_HOLDER' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_HOLDER

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_HOLDER' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_HOLDER

GO

CREATE TYPE [dbo].TVP_ORD_HOLDER AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_PERSON_ID] uniqueidentifier  NOT NULL,
[NEXT_INSPECTION_REMINDER_FLAG] bit  NOT NULL,
[LICENCE_PLATE] nvarchar (50) NULL,
[LICENCE_VIN] varchar (50) NULL,
[DEVICE_SERIAL_NUMBER] varchar (50) NULL,
[DESCRIPTION] nvarchar (200) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[ORD_ORDER_ID] uniqueidentifier  NULL,
[IS_VALID] bit  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_HOLDER
@source as dbo.TVP_ORD_HOLDER READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_HOLDER] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_PERSON_ID] = SOURCE.[ORD_PERSON_ID], TARGET.[NEXT_INSPECTION_REMINDER_FLAG] = SOURCE.[NEXT_INSPECTION_REMINDER_FLAG], TARGET.[LICENCE_PLATE] = SOURCE.[LICENCE_PLATE], TARGET.[LICENCE_VIN] = SOURCE.[LICENCE_VIN], TARGET.[DEVICE_SERIAL_NUMBER] = SOURCE.[DEVICE_SERIAL_NUMBER], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[ORD_ORDER_ID] = SOURCE.[ORD_ORDER_ID], TARGET.[IS_VALID] = SOURCE.[IS_VALID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_PERSON_ID], [NEXT_INSPECTION_REMINDER_FLAG], [LICENCE_PLATE], [LICENCE_VIN], [DEVICE_SERIAL_NUMBER], [DESCRIPTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [ORD_ORDER_ID], [IS_VALID]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_PERSON_ID], SOURCE.[NEXT_INSPECTION_REMINDER_FLAG], SOURCE.[LICENCE_PLATE], SOURCE.[LICENCE_VIN], SOURCE.[DEVICE_SERIAL_NUMBER], SOURCE.[DESCRIPTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[ORD_ORDER_ID], SOURCE.[IS_VALID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_ORDER_ADDITIONAL_INFORMATION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_ORDER_ADDITIONAL_INFORMATION

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_ORDER_ADDITIONAL_INFORMATION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_ORDER_ADDITIONAL_INFORMATION

GO

CREATE TYPE [dbo].TVP_ORD_ORDER_ADDITIONAL_INFORMATION AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_ORDER_ID] uniqueidentifier  NOT NULL,
[ORD_ORDER_ADDITIONAL_INFORMATION_TYPE_ID] int  NOT NULL,
[TEXT] varchar (250) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_ORDER_ADDITIONAL_INFORMATION
@source as dbo.TVP_ORD_ORDER_ADDITIONAL_INFORMATION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_ORDER_ADDITIONAL_INFORMATION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_ORDER_ID] = SOURCE.[ORD_ORDER_ID], TARGET.[ORD_ORDER_ADDITIONAL_INFORMATION_TYPE_ID] = SOURCE.[ORD_ORDER_ADDITIONAL_INFORMATION_TYPE_ID], TARGET.[TEXT] = SOURCE.[TEXT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_ORDER_ID], [ORD_ORDER_ADDITIONAL_INFORMATION_TYPE_ID], [TEXT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_ORDER_ID], SOURCE.[ORD_ORDER_ADDITIONAL_INFORMATION_TYPE_ID], SOURCE.[TEXT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_POSITION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_POSITION

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_POSITION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_POSITION

GO

CREATE TYPE [dbo].TVP_ORD_POSITION AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[SAP_SEQUENCE_NUMBER] int  NULL,
[INS_INSPECTION_RESULT_ID] uniqueidentifier  NULL,
[ORD_PRODUCT_STATUS_ID] int  NULL,
[ORD_ORDER_ID] uniqueidentifier  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NULL,
[AMOUNT] decimal (16,4) NOT NULL,
[OPEN_DATE] datetime2 (3) NULL,
[CLOSE_DATE] datetime2 (3) NULL,
[OPEN_EMPLOYEE_ID] int  NULL,
[CLOSE_EMPLOYEE_ID] int  NULL,
[PRICE_CHANGE_REASON] nvarchar (250) NULL,
[PRICE] money  NOT NULL,
[ORIGINAL_PRICE] money  NOT NULL,
[MIN_PRICE] money  NOT NULL,
[MAX_PRICE] money  NOT NULL,
[CALCULATED_VAT] money  NOT NULL,
[IS_RECEIPT_PRINTED] bit  NOT NULL,
[CHANGE_ABILITY_TYPE] int  NOT NULL,
[COMMENT] nvarchar (256) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[ORD_AREA_OF_WORK_ID] int  NULL,
[CANCELATION_REASON] int  NULL,
[INS_TAX_INFO_ID] int  NOT NULL,
[USER_CHOICE_DISCOUNT] bit  NOT NULL,
[PAID_UP] money  NOT NULL,
[FLAG_14C] bit  NOT NULL,
[PREVIOUS_DISCOUNT_INFO_ID] uniqueidentifier  NULL,
[PREVIOUS_AMOUNT] decimal (16,4) NULL,
[CREATE_DATE_MANUAL] datetime2 (2) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_POSITION
@source as dbo.TVP_ORD_POSITION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_POSITION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SAP_SEQUENCE_NUMBER] = SOURCE.[SAP_SEQUENCE_NUMBER], TARGET.[INS_INSPECTION_RESULT_ID] = SOURCE.[INS_INSPECTION_RESULT_ID], TARGET.[ORD_PRODUCT_STATUS_ID] = SOURCE.[ORD_PRODUCT_STATUS_ID], TARGET.[ORD_ORDER_ID] = SOURCE.[ORD_ORDER_ID], TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[AMOUNT] = SOURCE.[AMOUNT], TARGET.[OPEN_DATE] = SOURCE.[OPEN_DATE], TARGET.[CLOSE_DATE] = SOURCE.[CLOSE_DATE], TARGET.[OPEN_EMPLOYEE_ID] = SOURCE.[OPEN_EMPLOYEE_ID], TARGET.[CLOSE_EMPLOYEE_ID] = SOURCE.[CLOSE_EMPLOYEE_ID], TARGET.[PRICE_CHANGE_REASON] = SOURCE.[PRICE_CHANGE_REASON], TARGET.[PRICE] = SOURCE.[PRICE], TARGET.[ORIGINAL_PRICE] = SOURCE.[ORIGINAL_PRICE], TARGET.[MIN_PRICE] = SOURCE.[MIN_PRICE], TARGET.[MAX_PRICE] = SOURCE.[MAX_PRICE], TARGET.[CALCULATED_VAT] = SOURCE.[CALCULATED_VAT], TARGET.[IS_RECEIPT_PRINTED] = SOURCE.[IS_RECEIPT_PRINTED], TARGET.[CHANGE_ABILITY_TYPE] = SOURCE.[CHANGE_ABILITY_TYPE], TARGET.[COMMENT] = SOURCE.[COMMENT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[ORD_AREA_OF_WORK_ID] = SOURCE.[ORD_AREA_OF_WORK_ID], TARGET.[CANCELATION_REASON] = SOURCE.[CANCELATION_REASON], TARGET.[INS_TAX_INFO_ID] = SOURCE.[INS_TAX_INFO_ID], TARGET.[USER_CHOICE_DISCOUNT] = SOURCE.[USER_CHOICE_DISCOUNT], TARGET.[PAID_UP] = SOURCE.[PAID_UP], TARGET.[FLAG_14C] = SOURCE.[FLAG_14C], TARGET.[PREVIOUS_DISCOUNT_INFO_ID] = SOURCE.[PREVIOUS_DISCOUNT_INFO_ID], TARGET.[PREVIOUS_AMOUNT] = SOURCE.[PREVIOUS_AMOUNT], TARGET.[CREATE_DATE_MANUAL] = SOURCE.[CREATE_DATE_MANUAL]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [SAP_SEQUENCE_NUMBER], [INS_INSPECTION_RESULT_ID], [ORD_PRODUCT_STATUS_ID], [ORD_ORDER_ID], [INS_CORE_DATA_PRODUCT_ID], [AMOUNT], [OPEN_DATE], [CLOSE_DATE], [OPEN_EMPLOYEE_ID], [CLOSE_EMPLOYEE_ID], [PRICE_CHANGE_REASON], [PRICE], [ORIGINAL_PRICE], [MIN_PRICE], [MAX_PRICE], [CALCULATED_VAT], [IS_RECEIPT_PRINTED], [CHANGE_ABILITY_TYPE], [COMMENT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [ORD_AREA_OF_WORK_ID], [CANCELATION_REASON], [INS_TAX_INFO_ID], [USER_CHOICE_DISCOUNT], [PAID_UP], [FLAG_14C], [PREVIOUS_DISCOUNT_INFO_ID], [PREVIOUS_AMOUNT], [CREATE_DATE_MANUAL]
) VALUES (
SOURCE.[ID], SOURCE.[SAP_SEQUENCE_NUMBER], SOURCE.[INS_INSPECTION_RESULT_ID], SOURCE.[ORD_PRODUCT_STATUS_ID], SOURCE.[ORD_ORDER_ID], SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[AMOUNT], SOURCE.[OPEN_DATE], SOURCE.[CLOSE_DATE], SOURCE.[OPEN_EMPLOYEE_ID], SOURCE.[CLOSE_EMPLOYEE_ID], SOURCE.[PRICE_CHANGE_REASON], SOURCE.[PRICE], SOURCE.[ORIGINAL_PRICE], SOURCE.[MIN_PRICE], SOURCE.[MAX_PRICE], SOURCE.[CALCULATED_VAT], SOURCE.[IS_RECEIPT_PRINTED], SOURCE.[CHANGE_ABILITY_TYPE], SOURCE.[COMMENT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[ORD_AREA_OF_WORK_ID], SOURCE.[CANCELATION_REASON], SOURCE.[INS_TAX_INFO_ID], SOURCE.[USER_CHOICE_DISCOUNT], SOURCE.[PAID_UP], SOURCE.[FLAG_14C], SOURCE.[PREVIOUS_DISCOUNT_INFO_ID], SOURCE.[PREVIOUS_AMOUNT], SOURCE.[CREATE_DATE_MANUAL]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_VHL_SPECIAL_INFO_READ' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_VHL_SPECIAL_INFO_READ

GO

IF EXISTS(select * from sys.types where name = 'TVP_VHL_SPECIAL_INFO_READ' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_VHL_SPECIAL_INFO_READ

GO

CREATE TYPE [dbo].TVP_VHL_SPECIAL_INFO_READ AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[VHL_SPECIAL_INFO_ID] int  NOT NULL,
[EMP_EMPLOYEE_ID] int  NOT NULL,
[ORD_ORDER_ID] uniqueidentifier  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_VHL_SPECIAL_INFO_READ
@source as dbo.TVP_VHL_SPECIAL_INFO_READ READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[VHL_SPECIAL_INFO_READ] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[VHL_SPECIAL_INFO_ID] = SOURCE.[VHL_SPECIAL_INFO_ID], TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[ORD_ORDER_ID] = SOURCE.[ORD_ORDER_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [VHL_SPECIAL_INFO_ID], [EMP_EMPLOYEE_ID], [ORD_ORDER_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[VHL_SPECIAL_INFO_ID], SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[ORD_ORDER_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_EMPLOYEE_PROPORTION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_EMPLOYEE_PROPORTION

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_EMPLOYEE_PROPORTION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_EMPLOYEE_PROPORTION

GO

CREATE TYPE [dbo].TVP_INS_EMPLOYEE_PROPORTION AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[EMP_EMPLOYEE_ID] int  NOT NULL,
[ORD_POSITION_ID] uniqueidentifier  NOT NULL,
[PROPORTION] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_EMPLOYEE_PROPORTION
@source as dbo.TVP_INS_EMPLOYEE_PROPORTION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_EMPLOYEE_PROPORTION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[ORD_POSITION_ID] = SOURCE.[ORD_POSITION_ID], TARGET.[PROPORTION] = SOURCE.[PROPORTION], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [EMP_EMPLOYEE_ID], [ORD_POSITION_ID], [PROPORTION], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[ORD_POSITION_ID], SOURCE.[PROPORTION], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_INSPECTION_PRODUCT_INSPECTION_TEXT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_INSPECTION_PRODUCT_INSPECTION_TEXT_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_INSPECTION_PRODUCT_INSPECTION_TEXT_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_INSPECTION_PRODUCT_INSPECTION_TEXT_RSP

GO

CREATE TYPE [dbo].TVP_INS_INSPECTION_PRODUCT_INSPECTION_TEXT_RSP AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_POSITION_ID] uniqueidentifier  NOT NULL,
[INS_INSPECTION_TEXT_ID] uniqueidentifier  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_INSPECTION_PRODUCT_INSPECTION_TEXT_RSP
@source as dbo.TVP_INS_INSPECTION_PRODUCT_INSPECTION_TEXT_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_INSPECTION_PRODUCT_INSPECTION_TEXT_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_POSITION_ID] = SOURCE.[ORD_POSITION_ID], TARGET.[INS_INSPECTION_TEXT_ID] = SOURCE.[INS_INSPECTION_TEXT_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_POSITION_ID], [INS_INSPECTION_TEXT_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_POSITION_ID], SOURCE.[INS_INSPECTION_TEXT_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_POSITION_COMMON_BINARY_DATA_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_POSITION_COMMON_BINARY_DATA_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_POSITION_COMMON_BINARY_DATA_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_POSITION_COMMON_BINARY_DATA_RSP

GO

CREATE TYPE [dbo].TVP_INS_POSITION_COMMON_BINARY_DATA_RSP AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_POSITION_ID] uniqueidentifier  NOT NULL,
[INS_COMMON_BINARY_DATA_ID] uniqueidentifier  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_POSITION_COMMON_BINARY_DATA_RSP
@source as dbo.TVP_INS_POSITION_COMMON_BINARY_DATA_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_POSITION_COMMON_BINARY_DATA_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_POSITION_ID] = SOURCE.[ORD_POSITION_ID], TARGET.[INS_COMMON_BINARY_DATA_ID] = SOURCE.[INS_COMMON_BINARY_DATA_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_POSITION_ID], [INS_COMMON_BINARY_DATA_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_POSITION_ID], SOURCE.[INS_COMMON_BINARY_DATA_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_DEVICE_ORDER' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_DEVICE_ORDER

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_DEVICE_ORDER' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_DEVICE_ORDER

GO

CREATE TYPE [dbo].TVP_ORD_DEVICE_ORDER AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_DEVICE_ID] uniqueidentifier  NULL,
[ORD_ORDER_ID] uniqueidentifier  NULL,
[ORD_HOLDER_ID] uniqueidentifier  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_DEVICE_ORDER
@source as dbo.TVP_ORD_DEVICE_ORDER READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_DEVICE_ORDER] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_DEVICE_ID] = SOURCE.[ORD_DEVICE_ID], TARGET.[ORD_ORDER_ID] = SOURCE.[ORD_ORDER_ID], TARGET.[ORD_HOLDER_ID] = SOURCE.[ORD_HOLDER_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_DEVICE_ID], [ORD_ORDER_ID], [ORD_HOLDER_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_DEVICE_ID], SOURCE.[ORD_ORDER_ID], SOURCE.[ORD_HOLDER_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_DISCOUNT_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_DISCOUNT_INFO

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_DISCOUNT_INFO' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_DISCOUNT_INFO

GO

CREATE TYPE [dbo].TVP_ORD_DISCOUNT_INFO AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_POSITION_ID] uniqueidentifier  NULL,
[PERCENT] decimal (18,0) NOT NULL,
[DESCRIPTION] nvarchar (256) NULL,
[IS_PENALTY] bit  NOT NULL,
[SELECTED] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[NECESSITY_TYPE] int  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_DISCOUNT_INFO
@source as dbo.TVP_ORD_DISCOUNT_INFO READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_DISCOUNT_INFO] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_POSITION_ID] = SOURCE.[ORD_POSITION_ID], TARGET.[PERCENT] = SOURCE.[PERCENT], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[IS_PENALTY] = SOURCE.[IS_PENALTY], TARGET.[SELECTED] = SOURCE.[SELECTED], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[NECESSITY_TYPE] = SOURCE.[NECESSITY_TYPE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_POSITION_ID], [PERCENT], [DESCRIPTION], [IS_PENALTY], [SELECTED], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [NECESSITY_TYPE]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_POSITION_ID], SOURCE.[PERCENT], SOURCE.[DESCRIPTION], SOURCE.[IS_PENALTY], SOURCE.[SELECTED], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[NECESSITY_TYPE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_POSITION_CASH_NUMBER' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_POSITION_CASH_NUMBER

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_POSITION_CASH_NUMBER' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_POSITION_CASH_NUMBER

GO

CREATE TYPE [dbo].TVP_ORD_POSITION_CASH_NUMBER AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_POSITION_ID] uniqueidentifier  NOT NULL,
[CASH_NUMBER] char (16) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_POSITION_CASH_NUMBER
@source as dbo.TVP_ORD_POSITION_CASH_NUMBER READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_POSITION_CASH_NUMBER] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_POSITION_ID] = SOURCE.[ORD_POSITION_ID], TARGET.[CASH_NUMBER] = SOURCE.[CASH_NUMBER], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_POSITION_ID], [CASH_NUMBER], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_POSITION_ID], SOURCE.[CASH_NUMBER], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_POSITION_EXECUTABLE_INS_STEPS_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_POSITION_EXECUTABLE_INS_STEPS_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_POSITION_EXECUTABLE_INS_STEPS_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_POSITION_EXECUTABLE_INS_STEPS_RSP

GO

CREATE TYPE [dbo].TVP_ORD_POSITION_EXECUTABLE_INS_STEPS_RSP AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_POSITION_ID] uniqueidentifier  NOT NULL,
[INS_EXECUTABLE_INSPECTION_STEP_ID] uniqueidentifier  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_POSITION_EXECUTABLE_INS_STEPS_RSP
@source as dbo.TVP_ORD_POSITION_EXECUTABLE_INS_STEPS_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_POSITION_EXECUTABLE_INS_STEPS_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_POSITION_ID] = SOURCE.[ORD_POSITION_ID], TARGET.[INS_EXECUTABLE_INSPECTION_STEP_ID] = SOURCE.[INS_EXECUTABLE_INSPECTION_STEP_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_POSITION_ID], [INS_EXECUTABLE_INSPECTION_STEP_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_POSITION_ID], SOURCE.[INS_EXECUTABLE_INSPECTION_STEP_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_PRODUCT_HISTORY' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_PRODUCT_HISTORY

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_PRODUCT_HISTORY' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_PRODUCT_HISTORY

GO

CREATE TYPE [dbo].TVP_ORD_PRODUCT_HISTORY AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_POSITION_ID] uniqueidentifier  NOT NULL,
[USER_NUMBER] char (100) NOT NULL,
[USER_NAME] nvarchar (255) NOT NULL,
[ROLE_NAME] nvarchar (100) NOT NULL,
[STEP_NAME] nvarchar (255) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_PRODUCT_HISTORY
@source as dbo.TVP_ORD_PRODUCT_HISTORY READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_PRODUCT_HISTORY] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_POSITION_ID] = SOURCE.[ORD_POSITION_ID], TARGET.[USER_NUMBER] = SOURCE.[USER_NUMBER], TARGET.[USER_NAME] = SOURCE.[USER_NAME], TARGET.[ROLE_NAME] = SOURCE.[ROLE_NAME], TARGET.[STEP_NAME] = SOURCE.[STEP_NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_POSITION_ID], [USER_NUMBER], [USER_NAME], [ROLE_NAME], [STEP_NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_POSITION_ID], SOURCE.[USER_NUMBER], SOURCE.[USER_NAME], SOURCE.[ROLE_NAME], SOURCE.[STEP_NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_SALE_OF_GOODS_ORDER' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_SALE_OF_GOODS_ORDER

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_SALE_OF_GOODS_ORDER' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_SALE_OF_GOODS_ORDER

GO

CREATE TYPE [dbo].TVP_ORD_SALE_OF_GOODS_ORDER AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_ORDER_ID] uniqueidentifier  NULL,
[ORD_HOLDER_ID] uniqueidentifier  NULL,
[SELL_POINT_NAME] nvarchar (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_SALE_OF_GOODS_ORDER
@source as dbo.TVP_ORD_SALE_OF_GOODS_ORDER READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_SALE_OF_GOODS_ORDER] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_ORDER_ID] = SOURCE.[ORD_ORDER_ID], TARGET.[ORD_HOLDER_ID] = SOURCE.[ORD_HOLDER_ID], TARGET.[SELL_POINT_NAME] = SOURCE.[SELL_POINT_NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_ORDER_ID], [ORD_HOLDER_ID], [SELL_POINT_NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_ORDER_ID], SOURCE.[ORD_HOLDER_ID], SOURCE.[SELL_POINT_NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_ORD_VEHICLE_ORDER' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_ORD_VEHICLE_ORDER

GO

IF EXISTS(select * from sys.types where name = 'TVP_ORD_VEHICLE_ORDER' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_ORD_VEHICLE_ORDER

GO

CREATE TYPE [dbo].TVP_ORD_VEHICLE_ORDER AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[ORD_HOLDER_ID] uniqueidentifier  NULL,
[VHL_VEHICLE_ID] uniqueidentifier  NULL,
[ORD_ORDER_ID] uniqueidentifier  NULL,
[IS_HOLDER_VALID] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[HISTORY_EXPORT_DATE] datetime2 (3) NULL,
[OLD_REPORT_NUMBER] varchar (17) NULL,
[OLD_REPORT_DATE] datetime2 (3) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_ORD_VEHICLE_ORDER
@source as dbo.TVP_ORD_VEHICLE_ORDER READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[ORD_VEHICLE_ORDER] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[ORD_HOLDER_ID] = SOURCE.[ORD_HOLDER_ID], TARGET.[VHL_VEHICLE_ID] = SOURCE.[VHL_VEHICLE_ID], TARGET.[ORD_ORDER_ID] = SOURCE.[ORD_ORDER_ID], TARGET.[IS_HOLDER_VALID] = SOURCE.[IS_HOLDER_VALID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[HISTORY_EXPORT_DATE] = SOURCE.[HISTORY_EXPORT_DATE], TARGET.[OLD_REPORT_NUMBER] = SOURCE.[OLD_REPORT_NUMBER], TARGET.[OLD_REPORT_DATE] = SOURCE.[OLD_REPORT_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [ORD_HOLDER_ID], [VHL_VEHICLE_ID], [ORD_ORDER_ID], [IS_HOLDER_VALID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [HISTORY_EXPORT_DATE], [OLD_REPORT_NUMBER], [OLD_REPORT_DATE]
) VALUES (
SOURCE.[ID], SOURCE.[ORD_HOLDER_ID], SOURCE.[VHL_VEHICLE_ID], SOURCE.[ORD_ORDER_ID], SOURCE.[IS_HOLDER_VALID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[HISTORY_EXPORT_DATE], SOURCE.[OLD_REPORT_NUMBER], SOURCE.[OLD_REPORT_DATE]
);
END

GO



				IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_CHECK' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_CHECK

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_CHECK' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_CHECK

GO

CREATE TYPE [dbo].TVP_KSS_CHECK AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[CHECK_NUMBER] char (12) NOT NULL,
[ACCOUNT_NUMBER] char (12) NOT NULL,
[BANK_CODE] char (20) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[CHECK_LIST_NUMBER] char (100) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_CHECK
@source as dbo.TVP_KSS_CHECK READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_CHECK] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[CHECK_NUMBER] = SOURCE.[CHECK_NUMBER], TARGET.[ACCOUNT_NUMBER] = SOURCE.[ACCOUNT_NUMBER], TARGET.[BANK_CODE] = SOURCE.[BANK_CODE], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[CHECK_LIST_NUMBER] = SOURCE.[CHECK_LIST_NUMBER]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [CHECK_NUMBER], [ACCOUNT_NUMBER], [BANK_CODE], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [CHECK_LIST_NUMBER]
) VALUES (
SOURCE.[ID], SOURCE.[CHECK_NUMBER], SOURCE.[ACCOUNT_NUMBER], SOURCE.[BANK_CODE], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[CHECK_LIST_NUMBER]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_POS' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_POS

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_POS' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_POS

GO

CREATE TYPE [dbo].TVP_KSS_POS AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[POS_TERMINAL_NUMBER] char (20) NOT NULL,
[CARD_NUMBER] char (20) NOT NULL,
[ACCOUNT_NUMBER] char (20) NOT NULL,
[BANK_CODE] char (20) NOT NULL,
[CARD_VALID_TO] datetime2 (3) NOT NULL,
[TRANSACTION_NUMBER] varchar (20) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_POS
@source as dbo.TVP_KSS_POS READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_POS] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[POS_TERMINAL_NUMBER] = SOURCE.[POS_TERMINAL_NUMBER], TARGET.[CARD_NUMBER] = SOURCE.[CARD_NUMBER], TARGET.[ACCOUNT_NUMBER] = SOURCE.[ACCOUNT_NUMBER], TARGET.[BANK_CODE] = SOURCE.[BANK_CODE], TARGET.[CARD_VALID_TO] = SOURCE.[CARD_VALID_TO], TARGET.[TRANSACTION_NUMBER] = SOURCE.[TRANSACTION_NUMBER], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [POS_TERMINAL_NUMBER], [CARD_NUMBER], [ACCOUNT_NUMBER], [BANK_CODE], [CARD_VALID_TO], [TRANSACTION_NUMBER], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[POS_TERMINAL_NUMBER], SOURCE.[CARD_NUMBER], SOURCE.[ACCOUNT_NUMBER], SOURCE.[BANK_CODE], SOURCE.[CARD_VALID_TO], SOURCE.[TRANSACTION_NUMBER], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_TRANSF_CASH_COPY' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_TRANSF_CASH_COPY

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_TRANSF_CASH_COPY' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_TRANSF_CASH_COPY

GO

CREATE TYPE [dbo].TVP_KSS_TRANSF_CASH_COPY AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[CASH_NUMBER] char (11) NOT NULL,
[PERSONAL_NUMBER] varchar (10) NOT NULL,
[OPEN_AT] datetime2 (3) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_TRANSF_CASH_COPY
@source as dbo.TVP_KSS_TRANSF_CASH_COPY READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_TRANSF_CASH_COPY] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[CASH_NUMBER] = SOURCE.[CASH_NUMBER], TARGET.[PERSONAL_NUMBER] = SOURCE.[PERSONAL_NUMBER], TARGET.[OPEN_AT] = SOURCE.[OPEN_AT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [CASH_NUMBER], [PERSONAL_NUMBER], [OPEN_AT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[CASH_NUMBER], SOURCE.[PERSONAL_NUMBER], SOURCE.[OPEN_AT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_INVOICE_COPY' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_INVOICE_COPY

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_INVOICE_COPY' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_INVOICE_COPY

GO

CREATE TYPE [dbo].TVP_KSS_INVOICE_COPY AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[INVOICE_NUMBER] char (10) NULL,
[DEBITOR_NUMBER] char (10) NULL,
[DEBITOR_NAME] nvarchar (181) NULL,
[INVOICE_ORDER_NUMBER] char (50) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[ORD_ORDER_TYPE_ID] int  NULL,
[CUSTOMER_TYPE] int  NULL,
[CUSTOMER_ADDRESS_CITY] varchar (160) NULL,
[CUSTOMER_ADDRESS_NAME_1] nvarchar (90) NULL,
[CUSTOMER_ADDRESS_NAME_2] nvarchar (90) NULL,
[CUSTOMER_ADDRESS_STREET] nvarchar (220) NULL,
[CUSTOMER_ADDRESS_ZIP_CODE] varchar (90) NULL,
[CUSTOMER_ADDRESS_COUNTRY_ID] int  NULL,
[IS_FE_ORDER] bit  NOT NULL,
[FE_PRODUCT_NAME] nvarchar (250) NULL,
[FE_CUSTOMER_FULL_NAME] nvarchar (181) NULL,
[FE_CUSTOMER_BIRTH_DAY] date  NULL,
[FE_PRICE_WITHOUT_TAX] money  NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_INVOICE_COPY
@source as dbo.TVP_KSS_INVOICE_COPY READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_INVOICE_COPY] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[INVOICE_NUMBER] = SOURCE.[INVOICE_NUMBER], TARGET.[DEBITOR_NUMBER] = SOURCE.[DEBITOR_NUMBER], TARGET.[DEBITOR_NAME] = SOURCE.[DEBITOR_NAME], TARGET.[INVOICE_ORDER_NUMBER] = SOURCE.[INVOICE_ORDER_NUMBER], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[ORD_ORDER_TYPE_ID] = SOURCE.[ORD_ORDER_TYPE_ID], TARGET.[CUSTOMER_TYPE] = SOURCE.[CUSTOMER_TYPE], TARGET.[CUSTOMER_ADDRESS_CITY] = SOURCE.[CUSTOMER_ADDRESS_CITY], TARGET.[CUSTOMER_ADDRESS_NAME_1] = SOURCE.[CUSTOMER_ADDRESS_NAME_1], TARGET.[CUSTOMER_ADDRESS_NAME_2] = SOURCE.[CUSTOMER_ADDRESS_NAME_2], TARGET.[CUSTOMER_ADDRESS_STREET] = SOURCE.[CUSTOMER_ADDRESS_STREET], TARGET.[CUSTOMER_ADDRESS_ZIP_CODE] = SOURCE.[CUSTOMER_ADDRESS_ZIP_CODE], TARGET.[CUSTOMER_ADDRESS_COUNTRY_ID] = SOURCE.[CUSTOMER_ADDRESS_COUNTRY_ID], TARGET.[IS_FE_ORDER] = SOURCE.[IS_FE_ORDER], TARGET.[FE_PRODUCT_NAME] = SOURCE.[FE_PRODUCT_NAME], TARGET.[FE_CUSTOMER_FULL_NAME] = SOURCE.[FE_CUSTOMER_FULL_NAME], TARGET.[FE_CUSTOMER_BIRTH_DAY] = SOURCE.[FE_CUSTOMER_BIRTH_DAY], TARGET.[FE_PRICE_WITHOUT_TAX] = SOURCE.[FE_PRICE_WITHOUT_TAX]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [INVOICE_NUMBER], [DEBITOR_NUMBER], [DEBITOR_NAME], [INVOICE_ORDER_NUMBER], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [ORD_ORDER_TYPE_ID], [CUSTOMER_TYPE], [CUSTOMER_ADDRESS_CITY], [CUSTOMER_ADDRESS_NAME_1], [CUSTOMER_ADDRESS_NAME_2], [CUSTOMER_ADDRESS_STREET], [CUSTOMER_ADDRESS_ZIP_CODE], [CUSTOMER_ADDRESS_COUNTRY_ID], [IS_FE_ORDER], [FE_PRODUCT_NAME], [FE_CUSTOMER_FULL_NAME], [FE_CUSTOMER_BIRTH_DAY], [FE_PRICE_WITHOUT_TAX]
) VALUES (
SOURCE.[ID], SOURCE.[INVOICE_NUMBER], SOURCE.[DEBITOR_NUMBER], SOURCE.[DEBITOR_NAME], SOURCE.[INVOICE_ORDER_NUMBER], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[ORD_ORDER_TYPE_ID], SOURCE.[CUSTOMER_TYPE], SOURCE.[CUSTOMER_ADDRESS_CITY], SOURCE.[CUSTOMER_ADDRESS_NAME_1], SOURCE.[CUSTOMER_ADDRESS_NAME_2], SOURCE.[CUSTOMER_ADDRESS_STREET], SOURCE.[CUSTOMER_ADDRESS_ZIP_CODE], SOURCE.[CUSTOMER_ADDRESS_COUNTRY_ID], SOURCE.[IS_FE_ORDER], SOURCE.[FE_PRODUCT_NAME], SOURCE.[FE_CUSTOMER_FULL_NAME], SOURCE.[FE_CUSTOMER_BIRTH_DAY], SOURCE.[FE_PRICE_WITHOUT_TAX]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_CASH' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_CASH

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_CASH' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_CASH

GO

CREATE TYPE [dbo].TVP_KSS_CASH AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[CASH_NUMBER] char (11) NOT NULL,
[OPEN_AT] datetime2 (3) NOT NULL,
[CLOSED_AT] datetime2 (3) NULL,
[ACCOUNTING_AT] datetime2 (3) NULL,
[EMP_EMPLOYEE_ID] int  NOT NULL,
[POS_CONFIRM_TIME] datetime2 (3) NULL,
[AMOUNT_CASH] money  NULL,
[AMOUNT_CHECK] money  NULL,
[AMOUNT_POS] money  NULL,
[IS_EMAIL_SENT] bit  NULL,
[ORG_ORGANIZATIONAL_UNIT_ID] int  NOT NULL,
[KSS_CASH_STATUS_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[SYS_SYNC_STATUS_ID] int  NOT NULL,
[SYNC_DATE] datetime2 (2) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_CASH
@source as dbo.TVP_KSS_CASH READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_CASH] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[CASH_NUMBER] = SOURCE.[CASH_NUMBER], TARGET.[OPEN_AT] = SOURCE.[OPEN_AT], TARGET.[CLOSED_AT] = SOURCE.[CLOSED_AT], TARGET.[ACCOUNTING_AT] = SOURCE.[ACCOUNTING_AT], TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[POS_CONFIRM_TIME] = SOURCE.[POS_CONFIRM_TIME], TARGET.[AMOUNT_CASH] = SOURCE.[AMOUNT_CASH], TARGET.[AMOUNT_CHECK] = SOURCE.[AMOUNT_CHECK], TARGET.[AMOUNT_POS] = SOURCE.[AMOUNT_POS], TARGET.[IS_EMAIL_SENT] = SOURCE.[IS_EMAIL_SENT], TARGET.[ORG_ORGANIZATIONAL_UNIT_ID] = SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], TARGET.[KSS_CASH_STATUS_ID] = SOURCE.[KSS_CASH_STATUS_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[SYS_SYNC_STATUS_ID] = SOURCE.[SYS_SYNC_STATUS_ID], TARGET.[SYNC_DATE] = SOURCE.[SYNC_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [CASH_NUMBER], [OPEN_AT], [CLOSED_AT], [ACCOUNTING_AT], [EMP_EMPLOYEE_ID], [POS_CONFIRM_TIME], [AMOUNT_CASH], [AMOUNT_CHECK], [AMOUNT_POS], [IS_EMAIL_SENT], [ORG_ORGANIZATIONAL_UNIT_ID], [KSS_CASH_STATUS_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [SYS_SYNC_STATUS_ID], [SYNC_DATE]
) VALUES (
SOURCE.[ID], SOURCE.[CASH_NUMBER], SOURCE.[OPEN_AT], SOURCE.[CLOSED_AT], SOURCE.[ACCOUNTING_AT], SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[POS_CONFIRM_TIME], SOURCE.[AMOUNT_CASH], SOURCE.[AMOUNT_CHECK], SOURCE.[AMOUNT_POS], SOURCE.[IS_EMAIL_SENT], SOURCE.[ORG_ORGANIZATIONAL_UNIT_ID], SOURCE.[KSS_CASH_STATUS_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[SYS_SYNC_STATUS_ID], SOURCE.[SYNC_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_CASH_DOCUMENT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_CASH_DOCUMENT

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_CASH_DOCUMENT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_CASH_DOCUMENT

GO

CREATE TYPE [dbo].TVP_KSS_CASH_DOCUMENT AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[KSS_CASH_ID] uniqueidentifier  NOT NULL,
[KSS_DOCUMENT_TYPE_ID] int  NOT NULL,
[DOCUMENT] varbinary (max) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_CASH_DOCUMENT
@source as dbo.TVP_KSS_CASH_DOCUMENT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_CASH_DOCUMENT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[KSS_CASH_ID] = SOURCE.[KSS_CASH_ID], TARGET.[KSS_DOCUMENT_TYPE_ID] = SOURCE.[KSS_DOCUMENT_TYPE_ID], TARGET.[DOCUMENT] = SOURCE.[DOCUMENT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [KSS_CASH_ID], [KSS_DOCUMENT_TYPE_ID], [DOCUMENT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[KSS_CASH_ID], SOURCE.[KSS_DOCUMENT_TYPE_ID], SOURCE.[DOCUMENT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_OPERATION' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_OPERATION

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_OPERATION' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_OPERATION

GO

CREATE TYPE [dbo].TVP_KSS_OPERATION AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[KSS_CASH_ID] uniqueidentifier  NOT NULL,
[OPERATION_NUMBER] int  NOT NULL,
[AMOUNT] money  NOT NULL,
[CANCELLATION_REASON] nvarchar (50) NULL,
[COMMENTS] nvarchar (250) NULL,
[KSS_OPERATION_STATUS_ID] int  NOT NULL,
[CREATED_AT] datetime2 (3) NOT NULL,
[TRANSFERRED_CASH_ID] uniqueidentifier  NULL,
[ORG_COST_CENTER_ID] int  NULL,
[KSS_EXPENSE_GROUND_ID] int  NULL,
[OPERATION_TO_CANCEL_ID] uniqueidentifier  NULL,
[KSS_OPERATION_TYPE_ID] int  NOT NULL,
[KSS_CHECK_ID] uniqueidentifier  NULL,
[KSS_POS_ID] uniqueidentifier  NULL,
[KSS_PAYMENT_METHOD_ID] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[IS_CANCELATION_LOCKED] bit  NOT NULL,
[PROPOSED_AMOUNT] money  NULL,
[KSS_INVOICE_COPY_ID] uniqueidentifier  NULL,
[KSS_TRANSF_CASH_COPY_ID] uniqueidentifier  NULL,
[KSS_INVOICE_ID] int  NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_OPERATION
@source as dbo.TVP_KSS_OPERATION READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_OPERATION] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[KSS_CASH_ID] = SOURCE.[KSS_CASH_ID], TARGET.[OPERATION_NUMBER] = SOURCE.[OPERATION_NUMBER], TARGET.[AMOUNT] = SOURCE.[AMOUNT], TARGET.[CANCELLATION_REASON] = SOURCE.[CANCELLATION_REASON], TARGET.[COMMENTS] = SOURCE.[COMMENTS], TARGET.[KSS_OPERATION_STATUS_ID] = SOURCE.[KSS_OPERATION_STATUS_ID], TARGET.[CREATED_AT] = SOURCE.[CREATED_AT], TARGET.[TRANSFERRED_CASH_ID] = SOURCE.[TRANSFERRED_CASH_ID], TARGET.[ORG_COST_CENTER_ID] = SOURCE.[ORG_COST_CENTER_ID], TARGET.[KSS_EXPENSE_GROUND_ID] = SOURCE.[KSS_EXPENSE_GROUND_ID], TARGET.[OPERATION_TO_CANCEL_ID] = SOURCE.[OPERATION_TO_CANCEL_ID], TARGET.[KSS_OPERATION_TYPE_ID] = SOURCE.[KSS_OPERATION_TYPE_ID], TARGET.[KSS_CHECK_ID] = SOURCE.[KSS_CHECK_ID], TARGET.[KSS_POS_ID] = SOURCE.[KSS_POS_ID], TARGET.[KSS_PAYMENT_METHOD_ID] = SOURCE.[KSS_PAYMENT_METHOD_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[IS_CANCELATION_LOCKED] = SOURCE.[IS_CANCELATION_LOCKED], TARGET.[PROPOSED_AMOUNT] = SOURCE.[PROPOSED_AMOUNT], TARGET.[KSS_INVOICE_COPY_ID] = SOURCE.[KSS_INVOICE_COPY_ID], TARGET.[KSS_TRANSF_CASH_COPY_ID] = SOURCE.[KSS_TRANSF_CASH_COPY_ID], TARGET.[KSS_INVOICE_ID] = SOURCE.[KSS_INVOICE_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [KSS_CASH_ID], [OPERATION_NUMBER], [AMOUNT], [CANCELLATION_REASON], [COMMENTS], [KSS_OPERATION_STATUS_ID], [CREATED_AT], [TRANSFERRED_CASH_ID], [ORG_COST_CENTER_ID], [KSS_EXPENSE_GROUND_ID], [OPERATION_TO_CANCEL_ID], [KSS_OPERATION_TYPE_ID], [KSS_CHECK_ID], [KSS_POS_ID], [KSS_PAYMENT_METHOD_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [IS_CANCELATION_LOCKED], [PROPOSED_AMOUNT], [KSS_INVOICE_COPY_ID], [KSS_TRANSF_CASH_COPY_ID], [KSS_INVOICE_ID]
) VALUES (
SOURCE.[ID], SOURCE.[KSS_CASH_ID], SOURCE.[OPERATION_NUMBER], SOURCE.[AMOUNT], SOURCE.[CANCELLATION_REASON], SOURCE.[COMMENTS], SOURCE.[KSS_OPERATION_STATUS_ID], SOURCE.[CREATED_AT], SOURCE.[TRANSFERRED_CASH_ID], SOURCE.[ORG_COST_CENTER_ID], SOURCE.[KSS_EXPENSE_GROUND_ID], SOURCE.[OPERATION_TO_CANCEL_ID], SOURCE.[KSS_OPERATION_TYPE_ID], SOURCE.[KSS_CHECK_ID], SOURCE.[KSS_POS_ID], SOURCE.[KSS_PAYMENT_METHOD_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[IS_CANCELATION_LOCKED], SOURCE.[PROPOSED_AMOUNT], SOURCE.[KSS_INVOICE_COPY_ID], SOURCE.[KSS_TRANSF_CASH_COPY_ID], SOURCE.[KSS_INVOICE_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_OPERATION_DOCUMENT' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_OPERATION_DOCUMENT

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_OPERATION_DOCUMENT' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_OPERATION_DOCUMENT

GO

CREATE TYPE [dbo].TVP_KSS_OPERATION_DOCUMENT AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[KSS_OPERATION_ID] uniqueidentifier  NOT NULL,
[KSS_DOCUMENT_TYPE_ID] int  NOT NULL,
[DOCUMENT] varbinary (max) NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[IS_DUPLICATE] bit  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_OPERATION_DOCUMENT
@source as dbo.TVP_KSS_OPERATION_DOCUMENT READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_OPERATION_DOCUMENT] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[KSS_OPERATION_ID] = SOURCE.[KSS_OPERATION_ID], TARGET.[KSS_DOCUMENT_TYPE_ID] = SOURCE.[KSS_DOCUMENT_TYPE_ID], TARGET.[DOCUMENT] = SOURCE.[DOCUMENT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[IS_DUPLICATE] = SOURCE.[IS_DUPLICATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [KSS_OPERATION_ID], [KSS_DOCUMENT_TYPE_ID], [DOCUMENT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [IS_DUPLICATE]
) VALUES (
SOURCE.[ID], SOURCE.[KSS_OPERATION_ID], SOURCE.[KSS_DOCUMENT_TYPE_ID], SOURCE.[DOCUMENT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[IS_DUPLICATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_KSS_OPERATION_ORD_POSITION_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_KSS_OPERATION_ORD_POSITION_RSP

GO

IF EXISTS(select * from sys.types where name = 'TVP_KSS_OPERATION_ORD_POSITION_RSP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_KSS_OPERATION_ORD_POSITION_RSP

GO

CREATE TYPE [dbo].TVP_KSS_OPERATION_ORD_POSITION_RSP AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[KSS_OPERATION_ID] uniqueidentifier  NOT NULL,
[ORD_POSITION_ID] uniqueidentifier  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[ORD_ORDER_ID] uniqueidentifier  NOT NULL,
[POSITION_PRICE] money  NULL,
[ORDER_NUMBER] char (10) NULL,
[CREDIT_ORDER_NUMBER] char (10) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_KSS_OPERATION_ORD_POSITION_RSP
@source as dbo.TVP_KSS_OPERATION_ORD_POSITION_RSP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[KSS_OPERATION_ORD_POSITION_RSP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[KSS_OPERATION_ID] = SOURCE.[KSS_OPERATION_ID], TARGET.[ORD_POSITION_ID] = SOURCE.[ORD_POSITION_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[ORD_ORDER_ID] = SOURCE.[ORD_ORDER_ID], TARGET.[POSITION_PRICE] = SOURCE.[POSITION_PRICE], TARGET.[ORDER_NUMBER] = SOURCE.[ORDER_NUMBER], TARGET.[CREDIT_ORDER_NUMBER] = SOURCE.[CREDIT_ORDER_NUMBER]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [KSS_OPERATION_ID], [ORD_POSITION_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [ORD_ORDER_ID], [POSITION_PRICE], [ORDER_NUMBER], [CREDIT_ORDER_NUMBER]
) VALUES (
SOURCE.[ID], SOURCE.[KSS_OPERATION_ID], SOURCE.[ORD_POSITION_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[ORD_ORDER_ID], SOURCE.[POSITION_PRICE], SOURCE.[ORDER_NUMBER], SOURCE.[CREDIT_ORDER_NUMBER]
);
END

GO



				IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EMP_LOGIN_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EMP_LOGIN_DATA

GO

IF EXISTS(select * from sys.types where name = 'TVP_EMP_LOGIN_DATA' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EMP_LOGIN_DATA

GO

CREATE TYPE [dbo].TVP_EMP_LOGIN_DATA AS TABLE (
[ID] int  NOT NULL,
[IS_BLOCKED] bit  NOT NULL,
[PASSWORD_ENTRY_ATTEMPT] int  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EMP_LOGIN_DATA
@source as dbo.TVP_EMP_LOGIN_DATA READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EMP_LOGIN_DATA] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[IS_BLOCKED] = SOURCE.[IS_BLOCKED], TARGET.[PASSWORD_ENTRY_ATTEMPT] = SOURCE.[PASSWORD_ENTRY_ATTEMPT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [IS_BLOCKED], [PASSWORD_ENTRY_ATTEMPT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[IS_BLOCKED], SOURCE.[PASSWORD_ENTRY_ATTEMPT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_PASSWORD' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_PASSWORD

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_PASSWORD' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_PASSWORD

GO

CREATE TYPE [dbo].TVP_SYS_PASSWORD AS TABLE (
[ID] int  NOT NULL,
[TEXT] nvarchar (255) NULL,
[DESCRIPTION] nvarchar (250) NULL,
[EMP_EMPLOYEE_ID] int  NULL,
[VALID_FROM] datetime2 (3) NULL,
[IS_INITIAL] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_PASSWORD
@source as dbo.TVP_SYS_PASSWORD READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_PASSWORD] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[TEXT] = SOURCE.[TEXT], TARGET.[DESCRIPTION] = SOURCE.[DESCRIPTION], TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[VALID_FROM] = SOURCE.[VALID_FROM], TARGET.[IS_INITIAL] = SOURCE.[IS_INITIAL], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[TEXT], [DESCRIPTION], [EMP_EMPLOYEE_ID], [VALID_FROM], [IS_INITIAL], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[TEXT], SOURCE.[DESCRIPTION], SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[VALID_FROM], SOURCE.[IS_INITIAL], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO



				IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_PROTOCOL' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_PROTOCOL

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_PROTOCOL' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_PROTOCOL

GO

CREATE TYPE [dbo].TVP_SYS_PROTOCOL AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[CLIENT_ID] uniqueidentifier  NULL,
[ACTION_KEY] int  NULL,
[ACTION_TYPE] int  NOT NULL,
[ACTION_SCOPE] int  NOT NULL,
[CLIENT_DB_VERSION] varchar (10) NULL,
[SERVER_DB_VERSION] varchar (10) NULL,
[ERROR_MSG] varchar (1024) NULL,
[SYS_SYNC_STATUS_ID] int  NOT NULL,
[SESSION_ID] uniqueidentifier  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[ADDITIONAL_INFO] varchar (255) NULL,
[CLIENT_VERSION] varchar (255) NULL,
[SERVER_VERSION] varchar (255) NULL,
[CLIENT_SYSTEM_ID] varchar (4) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_PROTOCOL
@source as dbo.TVP_SYS_PROTOCOL READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_PROTOCOL] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[CLIENT_ID] = SOURCE.[CLIENT_ID], TARGET.[ACTION_KEY] = SOURCE.[ACTION_KEY], TARGET.[ACTION_TYPE] = SOURCE.[ACTION_TYPE], TARGET.[ACTION_SCOPE] = SOURCE.[ACTION_SCOPE], TARGET.[CLIENT_DB_VERSION] = SOURCE.[CLIENT_DB_VERSION], TARGET.[SERVER_DB_VERSION] = SOURCE.[SERVER_DB_VERSION], TARGET.[ERROR_MSG] = SOURCE.[ERROR_MSG], TARGET.[SYS_SYNC_STATUS_ID] = SOURCE.[SYS_SYNC_STATUS_ID], TARGET.[SESSION_ID] = SOURCE.[SESSION_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[ADDITIONAL_INFO] = SOURCE.[ADDITIONAL_INFO], TARGET.[CLIENT_VERSION] = SOURCE.[CLIENT_VERSION], TARGET.[SERVER_VERSION] = SOURCE.[SERVER_VERSION], TARGET.[CLIENT_SYSTEM_ID] = SOURCE.[CLIENT_SYSTEM_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [CLIENT_ID], [ACTION_KEY], [ACTION_TYPE], [ACTION_SCOPE], [CLIENT_DB_VERSION], [SERVER_DB_VERSION], [ERROR_MSG], [SYS_SYNC_STATUS_ID], [SESSION_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [ADDITIONAL_INFO], [CLIENT_VERSION], [SERVER_VERSION], [CLIENT_SYSTEM_ID]
) VALUES (
SOURCE.[ID], SOURCE.[CLIENT_ID], SOURCE.[ACTION_KEY], SOURCE.[ACTION_TYPE], SOURCE.[ACTION_SCOPE], SOURCE.[CLIENT_DB_VERSION], SOURCE.[SERVER_DB_VERSION], SOURCE.[ERROR_MSG], SOURCE.[SYS_SYNC_STATUS_ID], SOURCE.[SESSION_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[ADDITIONAL_INFO], SOURCE.[CLIENT_VERSION], SOURCE.[SERVER_VERSION], SOURCE.[CLIENT_SYSTEM_ID]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_SYS_LOG_ENTRY' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_SYS_LOG_ENTRY

GO

IF EXISTS(select * from sys.types where name = 'TVP_SYS_LOG_ENTRY' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_SYS_LOG_ENTRY

GO

CREATE TYPE [dbo].TVP_SYS_LOG_ENTRY AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[SYS_ACTION_TYPE_ID] int  NOT NULL,
[SYS_MODULE_ID] int  NULL,
[ITEM_ID] nvarchar (50) NULL,
[MESSAGE_TEXT] varchar (max) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[SYS_SYNC_STATUS_ID] int  NOT NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_SYS_LOG_ENTRY
@source as dbo.TVP_SYS_LOG_ENTRY READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[SYS_LOG_ENTRY] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[SYS_ACTION_TYPE_ID] = SOURCE.[SYS_ACTION_TYPE_ID], TARGET.[SYS_MODULE_ID] = SOURCE.[SYS_MODULE_ID], TARGET.[ITEM_ID] = SOURCE.[ITEM_ID], TARGET.[MESSAGE_TEXT] = SOURCE.[MESSAGE_TEXT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[SYS_SYNC_STATUS_ID] = SOURCE.[SYS_SYNC_STATUS_ID]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [SYS_ACTION_TYPE_ID], [SYS_MODULE_ID], [ITEM_ID], [MESSAGE_TEXT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [SYS_SYNC_STATUS_ID]
) VALUES (
SOURCE.[ID], SOURCE.[SYS_ACTION_TYPE_ID], SOURCE.[SYS_MODULE_ID], SOURCE.[ITEM_ID], SOURCE.[MESSAGE_TEXT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[SYS_SYNC_STATUS_ID]
);
END

GO



				IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EXP_WORKING_DAY' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EXP_WORKING_DAY

GO

IF EXISTS(select * from sys.types where name = 'TVP_EXP_WORKING_DAY' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EXP_WORKING_DAY

GO

CREATE TYPE [dbo].TVP_EXP_WORKING_DAY AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[EMP_EMPLOYEE_ID] int  NOT NULL,
[DATE] date  NOT NULL,
[LOGIN_TIME] datetime2 (3) NULL,
[LOGOUT_TIME] datetime2 (3) NULL,
[START_TIME] datetime2 (3) NULL,
[END_TIME] datetime2 (3) NULL,
[IS_CLOSED] bit  NOT NULL,
[MANUAL_APPROVAL_REQUIRED] bit  NOT NULL,
[IS_SENT] bit  NOT NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EXP_WORKING_DAY
@source as dbo.TVP_EXP_WORKING_DAY READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EXP_WORKING_DAY] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EMP_EMPLOYEE_ID] = SOURCE.[EMP_EMPLOYEE_ID], TARGET.[DATE] = SOURCE.[DATE], TARGET.[LOGIN_TIME] = SOURCE.[LOGIN_TIME], TARGET.[LOGOUT_TIME] = SOURCE.[LOGOUT_TIME], TARGET.[START_TIME] = SOURCE.[START_TIME], TARGET.[END_TIME] = SOURCE.[END_TIME], TARGET.[IS_CLOSED] = SOURCE.[IS_CLOSED], TARGET.[MANUAL_APPROVAL_REQUIRED] = SOURCE.[MANUAL_APPROVAL_REQUIRED], TARGET.[IS_SENT] = SOURCE.[IS_SENT], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [EMP_EMPLOYEE_ID], [DATE], [LOGIN_TIME], [LOGOUT_TIME], [START_TIME], [END_TIME], [IS_CLOSED], [MANUAL_APPROVAL_REQUIRED], [IS_SENT], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE]
) VALUES (
SOURCE.[ID], SOURCE.[EMP_EMPLOYEE_ID], SOURCE.[DATE], SOURCE.[LOGIN_TIME], SOURCE.[LOGOUT_TIME], SOURCE.[START_TIME], SOURCE.[END_TIME], SOURCE.[IS_CLOSED], SOURCE.[MANUAL_APPROVAL_REQUIRED], SOURCE.[IS_SENT], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EXP_TRIP' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EXP_TRIP

GO

IF EXISTS(select * from sys.types where name = 'TVP_EXP_TRIP' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EXP_TRIP

GO

CREATE TYPE [dbo].TVP_EXP_TRIP AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[EXP_WORKING_DAY_ID] uniqueidentifier  NOT NULL,
[DISTANCE] decimal (10,5) NOT NULL,
[EXP_TRIP_TYPE_ID] int  NULL,
[EXP_PASSENGERS_TYPE_ID] int  NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[IS_WITH_PASSENGERS] bit  NOT NULL,
[IS_ACCEPTED] bit  NOT NULL,
[SYS_SYNC_STATUS_ID] int  NOT NULL,
[SYNC_DATE] datetime2 (2) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EXP_TRIP
@source as dbo.TVP_EXP_TRIP READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EXP_TRIP] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EXP_WORKING_DAY_ID] = SOURCE.[EXP_WORKING_DAY_ID], TARGET.[DISTANCE] = SOURCE.[DISTANCE], TARGET.[EXP_TRIP_TYPE_ID] = SOURCE.[EXP_TRIP_TYPE_ID], TARGET.[EXP_PASSENGERS_TYPE_ID] = SOURCE.[EXP_PASSENGERS_TYPE_ID], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[IS_WITH_PASSENGERS] = SOURCE.[IS_WITH_PASSENGERS], TARGET.[IS_ACCEPTED] = SOURCE.[IS_ACCEPTED], TARGET.[SYS_SYNC_STATUS_ID] = SOURCE.[SYS_SYNC_STATUS_ID], TARGET.[SYNC_DATE] = SOURCE.[SYNC_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [EXP_WORKING_DAY_ID], [DISTANCE], [EXP_TRIP_TYPE_ID], [EXP_PASSENGERS_TYPE_ID], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [IS_WITH_PASSENGERS], [IS_ACCEPTED], [SYS_SYNC_STATUS_ID], [SYNC_DATE]
) VALUES (
SOURCE.[ID], SOURCE.[EXP_WORKING_DAY_ID], SOURCE.[DISTANCE], SOURCE.[EXP_TRIP_TYPE_ID], SOURCE.[EXP_PASSENGERS_TYPE_ID], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[IS_WITH_PASSENGERS], SOURCE.[IS_ACCEPTED], SOURCE.[SYS_SYNC_STATUS_ID], SOURCE.[SYNC_DATE]
);
END

GO


IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_EXP_WORKING_SPAN' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_EXP_WORKING_SPAN

GO

IF EXISTS(select * from sys.types where name = 'TVP_EXP_WORKING_SPAN' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_EXP_WORKING_SPAN

GO

CREATE TYPE [dbo].TVP_EXP_WORKING_SPAN AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[EXP_WORKING_DAY_ID] uniqueidentifier  NOT NULL,
[COST_CENTER] nvarchar (50) NULL,
[START_TIME] datetime2 (3) NOT NULL,
[END_TIME] datetime2 (3) NOT NULL,
[SPAN_TYPE] bit  NOT NULL,
[INS_CORE_DATA_PRODUCT_ID] int  NULL,
[IS_ACCEPTED] bit  NOT NULL,
[IS_MODIFIED_MANUALLY] bit  NOT NULL,
[PARTICIPATING_INTEREST] decimal (3,2) NOT NULL,
[ORG_COST_CENTER_ID] int  NULL,
[INTERNAL_ORDER] nvarchar (100) NULL,
[CUSTOMER_NAME] nvarchar (270) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[ORD_ORDER_NUMBER] char (10) NULL,
[DEBITOR_NUMBER] char (10) NULL,
[SYS_SYNC_STATUS_ID] int  NOT NULL,
[PRODUCTIVE_COST] money  NOT NULL,
[ORD_POSITION_ID] uniqueidentifier  NULL,
[SYNC_DATE] datetime2 (2) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_EXP_WORKING_SPAN
@source as dbo.TVP_EXP_WORKING_SPAN READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[EXP_WORKING_SPAN] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[EXP_WORKING_DAY_ID] = SOURCE.[EXP_WORKING_DAY_ID], TARGET.[COST_CENTER] = SOURCE.[COST_CENTER], TARGET.[START_TIME] = SOURCE.[START_TIME], TARGET.[END_TIME] = SOURCE.[END_TIME], TARGET.[SPAN_TYPE] = SOURCE.[SPAN_TYPE], TARGET.[INS_CORE_DATA_PRODUCT_ID] = SOURCE.[INS_CORE_DATA_PRODUCT_ID], TARGET.[IS_ACCEPTED] = SOURCE.[IS_ACCEPTED], TARGET.[IS_MODIFIED_MANUALLY] = SOURCE.[IS_MODIFIED_MANUALLY], TARGET.[PARTICIPATING_INTEREST] = SOURCE.[PARTICIPATING_INTEREST], TARGET.[ORG_COST_CENTER_ID] = SOURCE.[ORG_COST_CENTER_ID], TARGET.[INTERNAL_ORDER] = SOURCE.[INTERNAL_ORDER], TARGET.[CUSTOMER_NAME] = SOURCE.[CUSTOMER_NAME], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[ORD_ORDER_NUMBER] = SOURCE.[ORD_ORDER_NUMBER], TARGET.[DEBITOR_NUMBER] = SOURCE.[DEBITOR_NUMBER], TARGET.[SYS_SYNC_STATUS_ID] = SOURCE.[SYS_SYNC_STATUS_ID], TARGET.[PRODUCTIVE_COST] = SOURCE.[PRODUCTIVE_COST], TARGET.[ORD_POSITION_ID] = SOURCE.[ORD_POSITION_ID], TARGET.[SYNC_DATE] = SOURCE.[SYNC_DATE]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [EXP_WORKING_DAY_ID], [COST_CENTER], [START_TIME], [END_TIME], [SPAN_TYPE], [INS_CORE_DATA_PRODUCT_ID], [IS_ACCEPTED], [IS_MODIFIED_MANUALLY], [PARTICIPATING_INTEREST], [ORG_COST_CENTER_ID], [INTERNAL_ORDER], [CUSTOMER_NAME], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [ORD_ORDER_NUMBER], [DEBITOR_NUMBER], [SYS_SYNC_STATUS_ID], [PRODUCTIVE_COST], [ORD_POSITION_ID], [SYNC_DATE]
) VALUES (
SOURCE.[ID], SOURCE.[EXP_WORKING_DAY_ID], SOURCE.[COST_CENTER], SOURCE.[START_TIME], SOURCE.[END_TIME], SOURCE.[SPAN_TYPE], SOURCE.[INS_CORE_DATA_PRODUCT_ID], SOURCE.[IS_ACCEPTED], SOURCE.[IS_MODIFIED_MANUALLY], SOURCE.[PARTICIPATING_INTEREST], SOURCE.[ORG_COST_CENTER_ID], SOURCE.[INTERNAL_ORDER], SOURCE.[CUSTOMER_NAME], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[ORD_ORDER_NUMBER], SOURCE.[DEBITOR_NUMBER], SOURCE.[SYS_SYNC_STATUS_ID], SOURCE.[PRODUCTIVE_COST], SOURCE.[ORD_POSITION_ID], SOURCE.[SYNC_DATE]
);
END

GO



				IF EXISTS(select * from sys.procedures where name = 'SYNC_MERGE_INS_COMMON_BINARY_DATA_VALUE' AND schema_id = SCHEMA_ID('dbo'))
DROP PROCEDURE SYNC_MERGE_INS_COMMON_BINARY_DATA_VALUE

GO

IF EXISTS(select * from sys.types where name = 'TVP_INS_COMMON_BINARY_DATA_VALUE' AND schema_id = SCHEMA_ID('dbo'))
DROP TYPE TVP_INS_COMMON_BINARY_DATA_VALUE

GO

CREATE TYPE [dbo].TVP_INS_COMMON_BINARY_DATA_VALUE AS TABLE (
[ID] uniqueidentifier  NOT NULL,
[DATA] varbinary (max) NULL,
[CREATE_DATE] datetime2 (2) NULL,
[CHANGE_DATE] datetime2 (2) NULL,
[DELETE_DATE] datetime2 (2) NULL,
[OWNER_ORG_ID] int  NULL,
[VISIBILITY_ORG_ID] int  NULL,
[CREATE_EMPLOYEE_ID] int  NULL,
[CHANGE_EMPLOYEE_ID] int  NULL,
[SOURCE] varchar (4) NULL,
[SYNC_DATE] datetime2 (2) NULL,
[SYNCHRONIZED_STATUS_ID] int  NULL,
[DATA_FILESTREAM] varbinary (max) NULL
PRIMARY KEY ([ID]))

GO

CREATE PROCEDURE SYNC_MERGE_INS_COMMON_BINARY_DATA_VALUE
@source as dbo.TVP_INS_COMMON_BINARY_DATA_VALUE READONLY
AS
BEGIN
SET NOCOUNT ON;
MERGE dbo.[INS_COMMON_BINARY_DATA_VALUE] AS TARGET
USING @source AS SOURCE
ON SOURCE.[ID] = TARGET.[ID]
WHEN MATCHED  THEN UPDATE SET
TARGET.[DATA] = SOURCE.[DATA], TARGET.[CREATE_DATE] = SOURCE.[CREATE_DATE], TARGET.[CHANGE_DATE] = SOURCE.[CHANGE_DATE], TARGET.[DELETE_DATE] = SOURCE.[DELETE_DATE], TARGET.[OWNER_ORG_ID] = SOURCE.[OWNER_ORG_ID], TARGET.[VISIBILITY_ORG_ID] = SOURCE.[VISIBILITY_ORG_ID], TARGET.[CREATE_EMPLOYEE_ID] = SOURCE.[CREATE_EMPLOYEE_ID], TARGET.[CHANGE_EMPLOYEE_ID] = SOURCE.[CHANGE_EMPLOYEE_ID], TARGET.[SOURCE] = SOURCE.[SOURCE], TARGET.[SYNC_DATE] = SOURCE.[SYNC_DATE], TARGET.[SYNCHRONIZED_STATUS_ID] = SOURCE.[SYNCHRONIZED_STATUS_ID], TARGET.[DATA_FILESTREAM] = SOURCE.[DATA_FILESTREAM]
WHEN NOT MATCHED BY TARGET THEN INSERT (
[ID], [DATA], [CREATE_DATE], [CHANGE_DATE], [DELETE_DATE], [OWNER_ORG_ID], [VISIBILITY_ORG_ID], [CREATE_EMPLOYEE_ID], [CHANGE_EMPLOYEE_ID], [SOURCE], [SYNC_DATE], [SYNCHRONIZED_STATUS_ID], [DATA_FILESTREAM]
) VALUES (
SOURCE.[ID], SOURCE.[DATA], SOURCE.[CREATE_DATE], SOURCE.[CHANGE_DATE], SOURCE.[DELETE_DATE], SOURCE.[OWNER_ORG_ID], SOURCE.[VISIBILITY_ORG_ID], SOURCE.[CREATE_EMPLOYEE_ID], SOURCE.[CHANGE_EMPLOYEE_ID], SOURCE.[SOURCE], SOURCE.[SYNC_DATE], SOURCE.[SYNCHRONIZED_STATUS_ID], SOURCE.[DATA_FILESTREAM]
);
END

GO



		